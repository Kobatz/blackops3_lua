-- Decompiled with CoDLUIDecompiler by JariK

require("ui.uieditor.widgets.CAC.Customization.CompletedRewardImage")
require("ui.uieditor.widgets.CAC.Customization.ProgressionRewardImage")
require("ui.uieditor.widgets.CAC.Customization.ChallengeBonusXPInfo")
require("ui.uieditor.widgets.Border")
require("ui.uieditor.widgets.verticalScrollingTextBox")
local registerVal1 = InheritFrom(LUI.UIElement)
CoD.ChallengeProgressionInfo = registerVal1
function CoD.ChallengeProgressionInfo.new(arg0, arg1)
	local registerVal2 = LUI.UIElement.new()
	if PreLoadFunc then
		PreLoadFunc(registerVal2, arg1)
	end
	registerVal2:setUseStencil(false)
	registerVal2:setClass(CoD.ChallengeProgressionInfo)
	registerVal2.id = "ChallengeProgressionInfo"
	registerVal2.soundSet = "default"
	registerVal2:setLeftRight(true, false, 0.000000, 420.000000)
	registerVal2:setTopBottom(true, false, 0.000000, 84.000000)
	registerVal2.anyChildUsesUpdateState = true
	local registerVal3 = LUI.UIImage.new()
	registerVal3:setLeftRight(true, true, 0.000000, 0.000000)
	registerVal3:setTopBottom(true, true, 0.000000, 0.000000)
	registerVal3:setRGB(0.300000, 0.300000, 0.300000)
	registerVal3:setAlpha(0.150000)
	registerVal2:addElement(registerVal3)
	registerVal2.GreyBacking = registerVal3
	local registerVal4 = LUI.UIImage.new()
	registerVal4:setLeftRight(true, false, 0.000000, 98.500000)
	registerVal4:setTopBottom(true, true, 0.000000, 0.000000)
	registerVal4:setRGB(0.000000, 0.000000, 0.000000)
	registerVal4:setAlpha(0.200000)
	registerVal2:addElement(registerVal4)
	registerVal2.BlackBacking = registerVal4
	local registerVal5 = CoD.CompletedRewardImage.new(arg0, arg1)
	registerVal5:setLeftRight(true, false, 16.250000, 82.250000)
	registerVal5:setTopBottom(true, false, 10.250000, 76.250000)
	registerVal5:setAlpha(0.000000)
	registerVal2:addElement(registerVal5)
	registerVal2.completedRewardImage = registerVal5
	local registerVal6 = CoD.ProgressionRewardImage.new(arg0, arg1)
	registerVal6:setLeftRight(true, false, 24.250000, 74.250000)
	registerVal6:setTopBottom(true, false, 6.000000, 56.000000)
	local function __FUNC_1838_(arg0)
		local registerVal1 = Engine.GetModelValue(arg0)
		if registerVal1 then
			registerVal6.rewardTileImage:setImage(RegisterImage(registerVal1))
		end
	end

	registerVal6:linkToElementModel(registerVal2, "image", true, __FUNC_1838_)
	registerVal2:addElement(registerVal6)
	registerVal2.ProgressionRewardImage = registerVal6
	local registerVal7 = CoD.ChallengeBonusXPInfo.new(arg0, arg1)
	registerVal7:setLeftRight(true, false, 5.750000, 95.500000)
	registerVal7:setTopBottom(true, false, 59.500000, 81.500000)
	local function __FUNC_1911_(arg0)
		registerVal7:setModel(arg0, arg1)
	end

	registerVal7:linkToElementModel(registerVal2, nil, false, __FUNC_1911_)
	local registerVal10 = {}
	local registerVal11 = {}
	registerVal11.stateName = "NotVisible"
	local function __FUNC_1962_(arg0, arg2, arg3)
		return IsSpecialContractCamo(arg2, arg1)
	end

	registerVal11.condition = __FUNC_1962_
	registerVal10 = {registerVal11}
	registerVal7:mergeStateConditions(registerVal10)
	local function __FUNC_19BF_(arg1)
		local registerVal4 = {}
		registerVal4.name = "model_validation"
		registerVal4.menu = arg0
		local registerVal5 = Engine.GetModelValue(arg1)
		registerVal4.modelValue = registerVal5
		registerVal4.modelName = "weaponOptionTypeName"
		arg0:updateElementState(registerVal7, registerVal4)
	end

	registerVal7:linkToElementModel(registerVal7, "weaponOptionTypeName", true, __FUNC_19BF_)
	local function __FUNC_1AE6_(arg1)
		local registerVal4 = {}
		registerVal4.name = "model_validation"
		registerVal4.menu = arg0
		local registerVal5 = Engine.GetModelValue(arg1)
		registerVal4.modelValue = registerVal5
		registerVal4.modelName = "itemIndex"
		arg0:updateElementState(registerVal7, registerVal4)
	end

	registerVal7:linkToElementModel(registerVal7, "itemIndex", true, __FUNC_1AE6_)
	registerVal2:addElement(registerVal7)
	registerVal2.ChallengeBonusXPInfo = registerVal7
	local registerVal8 = LUI.UIText.new()
	registerVal8:setLeftRight(true, true, 103.500000, -4.000000)
	registerVal8:setTopBottom(true, false, -1.000000, 23.000000)
	registerVal8:setRGB(0.970000, 0.930000, 0.070000)
	registerVal8:setText(Engine.Localize("MENU_CAMO_REQUIREMENTS"))
	registerVal8:setTTF("fonts/escom.ttf")
	registerVal8:setMaterial(LUI.UIImage.GetCachedMaterial("sw4_2d_uie_font_cached_glow"))
	registerVal8:setShaderVector(0.000000, 0.020000, 0.000000, 0.000000, 0.000000)
	registerVal8:setShaderVector(1.000000, 0.060000, 0.000000, 0.000000, 0.000000)
	registerVal8:setShaderVector(2.000000, 1.000000, 0.000000, 0.000000, 0.000000)
	registerVal8:setLetterSpacing(1.000000)
	registerVal8:setAlignment(Enum.LUIAlignment.LUI_ALIGNMENT_LEFT)
	registerVal8:setAlignment(Enum.LUIAlignment.LUI_ALIGNMENT_TOP)
	registerVal2:addElement(registerVal8)
	registerVal2.requirementTitle = registerVal8
	local registerVal9 = LUI.UIText.new()
	registerVal9:setLeftRight(false, true, -316.500000, -4.000000)
	registerVal9:setTopBottom(true, false, 55.500000, 79.500000)
	registerVal9:setRGB(0.970000, 0.930000, 0.070000)
	registerVal9:setAlpha(0.000000)
	registerVal9:setText(Engine.Localize("MENU_CAMO_COMPLETE"))
	registerVal9:setTTF("fonts/escom.ttf")
	registerVal9:setMaterial(LUI.UIImage.GetCachedMaterial("sw4_2d_uie_font_cached_glow"))
	registerVal9:setShaderVector(0.000000, 0.020000, 0.000000, 0.000000, 0.000000)
	registerVal9:setShaderVector(1.000000, 0.060000, 0.000000, 0.000000, 0.000000)
	registerVal9:setShaderVector(2.000000, 1.000000, 0.000000, 0.000000, 0.000000)
	registerVal9:setLetterSpacing(1.000000)
	registerVal9:setAlignment(Enum.LUIAlignment.LUI_ALIGNMENT_LEFT)
	registerVal9:setAlignment(Enum.LUIAlignment.LUI_ALIGNMENT_TOP)
	registerVal2:addElement(registerVal9)
	registerVal2.completedTitle = registerVal9
	registerVal10 = LUI.UIImage.new()
	registerVal10:setLeftRight(true, true, 103.500000, -91.500000)
	registerVal10:setTopBottom(false, true, -17.750000, -7.750000)
	registerVal10:setRGB(0.970000, 0.930000, 0.070000)
	registerVal10:setMaterial(LUI.UIImage.GetCachedMaterial("uie_wipe"))
	registerVal10:setShaderVector(1.000000, 0.000000, 0.000000, 0.000000, 0.000000)
	registerVal10:setShaderVector(2.000000, 1.000000, 0.000000, 0.000000, 0.000000)
	registerVal10:setShaderVector(3.000000, 0.000000, 0.000000, 0.000000, 0.000000)
	local function __FUNC_1C03_(arg0)
		local registerVal1 = Engine.GetModelValue(arg0)
		if registerVal1 then
			local registerVal7 = CoD.GetVectorComponentFromString(registerVal1, 1.000000)
			local registerVal8 = CoD.GetVectorComponentFromString(registerVal1, 2.000000)
			local registerVal9 = CoD.GetVectorComponentFromString(registerVal1, 3.000000)
			registerVal10:setShaderVector(0.000000, GetWeaponOptionProgressBar(arg1, registerVal7, registerVal8, registerVal9, CoD.GetVectorComponentFromString(registerVal1, 4.000000)))
		end
	end

	registerVal10:linkToElementModel(registerVal2, "unlockProgressAndTarget", true, __FUNC_1C03_)
	registerVal2:addElement(registerVal10)
	registerVal2.progressBar = registerVal10
	registerVal11 = LUI.UIText.new()
	registerVal11:setLeftRight(false, true, -64.000000, -4.000000)
	registerVal11:setTopBottom(false, true, -22.750000, -2.750000)
	registerVal11:setTTF("fonts/default.ttf")
	registerVal11:setAlignment(Enum.LUIAlignment.LUI_ALIGNMENT_LEFT)
	registerVal11:setAlignment(Enum.LUIAlignment.LUI_ALIGNMENT_TOP)
	local function __FUNC_1D88_(arg0)
		local registerVal1 = Engine.GetModelValue(arg0)
		if registerVal1 then
			registerVal11:setText(Engine.Localize(GetWeaponOptionProgressText(arg1, registerVal1)))
		end
	end

	registerVal11:linkToElementModel(registerVal2, "unlockProgressAndTarget", true, __FUNC_1D88_)
	registerVal2:addElement(registerVal11)
	registerVal2.progressText = registerVal11
	local registerVal12 = CoD.Border.new(arg0, arg1)
	registerVal12:setLeftRight(true, true, 102.000000, -90.110000)
	registerVal12:setTopBottom(false, true, -18.500000, -7.000000)
	registerVal2:addElement(registerVal12)
	registerVal2.ProgressBarBorder = registerVal12
	local registerVal13 = CoD.verticalScrollingTextBox.new(arg0, arg1)
	registerVal13:setLeftRight(true, false, 103.500000, 416.000000)
	registerVal13:setTopBottom(true, false, 23.000000, 65.000000)
	registerVal13.textBox:setTTF("fonts/default.ttf")
	registerVal13.textBox:setAlignment(Enum.LUIAlignment.LUI_ALIGNMENT_LEFT)
	local function __FUNC_1E73_(arg0)
		local registerVal1 = Engine.GetModelValue(arg0)
		if registerVal1 then
			registerVal13.textBox:setText(Engine.Localize(registerVal1))
		end
	end

	registerVal13:linkToElementModel(registerVal2, "unlockDescription", true, __FUNC_1E73_)
	registerVal2:addElement(registerVal13)
	registerVal2.verticalScrollingTextBox = registerVal13
	local registerVal14 = LUI.UIImage.new()
	registerVal14:setLeftRight(true, true, -1.000000, 1.000000)
	registerVal14:setTopBottom(true, true, -1.000000, 1.000000)
	registerVal14:setAlpha(0.500000)
	registerVal14:setImage(RegisterImage("uie_t7_menu_frontend_titlenumbrdrfull"))
	registerVal14:setMaterial(LUI.UIImage.GetCachedMaterial("uie_nineslice_add"))
	registerVal14:setShaderVector(0.000000, 0.009479, 0.046512, 0.000000, 0.000000)
	registerVal14:setupNineSliceShader(4.000000, 4.000000)
	registerVal2:addElement(registerVal14)
	registerVal2.RewardBox = registerVal14
	local registerVal15 = LUI.UIImage.new()
	registerVal15:setLeftRight(true, false, 11.750000, 84.750000)
	registerVal15:setTopBottom(true, false, -5.000000, 68.000000)
	registerVal15:setImage(RegisterImage("uie_t7_bm_special_contracts_logo"))
	registerVal2:addElement(registerVal15)
	registerVal2.bmContractBrandIcon = registerVal15
	local registerVal16 = {}
	local registerVal17 = {}
	local function __FUNC_1F47_()
		registerVal2:setupElementClipCounter(13.000000)
		registerVal3:completeAnimation()
		registerVal2.GreyBacking:setAlpha(0.250000)
		registerVal2.clipFinished(registerVal3, {})
		registerVal4:completeAnimation()
		registerVal2.BlackBacking:setAlpha(0.250000)
		registerVal2.clipFinished(registerVal4, {})
		registerVal5:completeAnimation()
		registerVal2.completedRewardImage:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal5, {})
		registerVal6:completeAnimation()
		registerVal2.ProgressionRewardImage:setAlpha(1.000000)
		registerVal2.clipFinished(registerVal6, {})
		registerVal7:completeAnimation()
		registerVal2.ChallengeBonusXPInfo:setAlpha(1.000000)
		registerVal2.clipFinished(registerVal7, {})
		registerVal8:completeAnimation()
		registerVal2.requirementTitle:setLeftRight(true, true, 103.500000, -4.000000)
		registerVal2.requirementTitle:setTopBottom(true, false, 0.000000, 24.000000)
		registerVal2.requirementTitle:setAlpha(1.000000)
		registerVal2.clipFinished(registerVal8, {})
		registerVal9:completeAnimation()
		registerVal2.completedTitle:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal9, {})
		registerVal10:completeAnimation()
		registerVal2.progressBar:setAlpha(1.000000)
		registerVal2.clipFinished(registerVal10, {})
		registerVal11:completeAnimation()
		registerVal2.progressText:setAlpha(1.000000)
		registerVal2.clipFinished(registerVal11, {})
		registerVal12:completeAnimation()
		registerVal2.ProgressBarBorder:setAlpha(1.000000)
		registerVal2.clipFinished(registerVal12, {})
		registerVal13:completeAnimation()
		registerVal2.verticalScrollingTextBox:setLeftRight(true, false, 103.500000, 416.000000)
		registerVal2.verticalScrollingTextBox:setTopBottom(true, false, 24.000000, 66.000000)
		registerVal2.verticalScrollingTextBox:setAlpha(1.000000)
		registerVal2.clipFinished(registerVal13, {})
		registerVal14:completeAnimation()
		registerVal2.RewardBox:setAlpha(0.200000)
		registerVal2.clipFinished(registerVal14, {})
		registerVal15:completeAnimation()
		registerVal2.bmContractBrandIcon:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal15, {})
	end

	registerVal17.DefaultClip = __FUNC_1F47_
	registerVal16.DefaultState = registerVal17
	registerVal17 = {}
	local function __FUNC_25A7_()
		registerVal2:setupElementClipCounter(13.000000)
		registerVal3:completeAnimation()
		registerVal2.GreyBacking:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal3, {})
		registerVal4:completeAnimation()
		registerVal2.BlackBacking:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal4, {})
		registerVal5:completeAnimation()
		registerVal2.completedRewardImage:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal5, {})
		registerVal6:completeAnimation()
		registerVal2.ProgressionRewardImage:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal6, {})
		registerVal7:completeAnimation()
		registerVal2.ChallengeBonusXPInfo:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal7, {})
		registerVal8:completeAnimation()
		registerVal2.requirementTitle:setLeftRight(true, true, 103.500000, -4.000000)
		registerVal2.requirementTitle:setTopBottom(true, false, 0.000000, 24.000000)
		registerVal2.requirementTitle:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal8, {})
		registerVal9:completeAnimation()
		registerVal2.completedTitle:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal9, {})
		registerVal10:completeAnimation()
		registerVal2.progressBar:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal10, {})
		registerVal11:completeAnimation()
		registerVal2.progressText:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal11, {})
		registerVal12:completeAnimation()
		registerVal2.ProgressBarBorder:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal12, {})
		registerVal13:completeAnimation()
		registerVal2.verticalScrollingTextBox:setLeftRight(true, false, 103.500000, 401.500000)
		registerVal2.verticalScrollingTextBox:setTopBottom(true, false, 25.000000, 67.000000)
		registerVal2.verticalScrollingTextBox:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal13, {})
		registerVal14:completeAnimation()
		registerVal2.RewardBox:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal14, {})
		registerVal15:completeAnimation()
		registerVal2.bmContractBrandIcon:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal15, {})
	end

	registerVal17.DefaultClip = __FUNC_25A7_
	registerVal16.NotVisible = registerVal17
	registerVal17 = {}
	local function __FUNC_2BFD_()
		registerVal2:setupElementClipCounter(13.000000)
		registerVal3:completeAnimation()
		registerVal2.GreyBacking:setAlpha(0.250000)
		registerVal2.clipFinished(registerVal3, {})
		registerVal4:completeAnimation()
		registerVal2.BlackBacking:setAlpha(0.250000)
		registerVal2.clipFinished(registerVal4, {})
		registerVal5:completeAnimation()
		registerVal2.completedRewardImage:setAlpha(1.000000)
		registerVal2.clipFinished(registerVal5, {})
		registerVal6:completeAnimation()
		registerVal2.ProgressionRewardImage:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal6, {})
		registerVal7:completeAnimation()
		registerVal2.ChallengeBonusXPInfo:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal7, {})
		registerVal8:completeAnimation()
		registerVal2.requirementTitle:setLeftRight(true, true, 103.500000, -4.000000)
		registerVal2.requirementTitle:setTopBottom(true, false, 0.000000, 24.000000)
		registerVal2.requirementTitle:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal8, {})
		registerVal9:completeAnimation()
		registerVal2.completedTitle:setLeftRight(false, true, -317.500000, 5.000000)
		registerVal2.completedTitle:setTopBottom(true, false, 17.000000, 41.000000)
		registerVal2.completedTitle:setAlpha(1.000000)
		registerVal2.clipFinished(registerVal9, {})
		registerVal10:completeAnimation()
		registerVal2.progressBar:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal10, {})
		registerVal11:completeAnimation()
		registerVal2.progressText:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal11, {})
		registerVal12:completeAnimation()
		registerVal2.ProgressBarBorder:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal12, {})
		registerVal13:completeAnimation()
		registerVal2.verticalScrollingTextBox:setLeftRight(true, false, 103.500000, 426.000000)
		registerVal2.verticalScrollingTextBox:setTopBottom(true, false, 41.000000, 83.000000)
		registerVal2.verticalScrollingTextBox:setAlpha(1.000000)
		registerVal2.clipFinished(registerVal13, {})
		registerVal14:completeAnimation()
		registerVal2.RewardBox:setAlpha(0.200000)
		registerVal2.clipFinished(registerVal14, {})
		registerVal15:completeAnimation()
		registerVal2.bmContractBrandIcon:setLeftRight(true, false, 12.750000, 85.750000)
		registerVal2.bmContractBrandIcon:setTopBottom(true, false, 6.750000, 79.750000)
		registerVal2.bmContractBrandIcon:setAlpha(1.000000)
		registerVal2.clipFinished(registerVal15, {})
	end

	registerVal17.DefaultClip = __FUNC_2BFD_
	registerVal16.bmComtracts = registerVal17
	registerVal17 = {}
	local function __FUNC_3327_()
		registerVal2:setupElementClipCounter(13.000000)
		registerVal3:completeAnimation()
		registerVal2.GreyBacking:setAlpha(0.250000)
		registerVal2.clipFinished(registerVal3, {})
		registerVal4:completeAnimation()
		registerVal2.BlackBacking:setAlpha(0.250000)
		registerVal2.clipFinished(registerVal4, {})
		registerVal5:completeAnimation()
		registerVal2.completedRewardImage:setAlpha(1.000000)
		registerVal2.clipFinished(registerVal5, {})
		registerVal6:completeAnimation()
		registerVal2.ProgressionRewardImage:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal6, {})
		registerVal7:completeAnimation()
		registerVal2.ChallengeBonusXPInfo:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal7, {})
		registerVal8:completeAnimation()
		registerVal2.requirementTitle:setLeftRight(true, true, 103.500000, -4.000000)
		registerVal2.requirementTitle:setTopBottom(true, false, 0.000000, 24.000000)
		registerVal2.requirementTitle:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal8, {})
		registerVal9:completeAnimation()
		registerVal2.completedTitle:setLeftRight(false, true, -317.500000, 5.000000)
		registerVal2.completedTitle:setTopBottom(true, false, 17.000000, 41.000000)
		registerVal2.completedTitle:setAlpha(1.000000)
		registerVal2.clipFinished(registerVal9, {})
		registerVal10:completeAnimation()
		registerVal2.progressBar:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal10, {})
		registerVal11:completeAnimation()
		registerVal2.progressText:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal11, {})
		registerVal12:completeAnimation()
		registerVal2.ProgressBarBorder:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal12, {})
		registerVal13:completeAnimation()
		registerVal2.verticalScrollingTextBox:setLeftRight(true, false, 103.500000, 426.000000)
		registerVal2.verticalScrollingTextBox:setTopBottom(true, false, 41.000000, 83.000000)
		registerVal2.verticalScrollingTextBox:setAlpha(1.000000)
		registerVal2.clipFinished(registerVal13, {})
		registerVal14:completeAnimation()
		registerVal2.RewardBox:setAlpha(0.200000)
		registerVal2.clipFinished(registerVal14, {})
		registerVal15:completeAnimation()
		registerVal2.bmContractBrandIcon:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal15, {})
	end

	registerVal17.DefaultClip = __FUNC_3327_
	registerVal16.Completed = registerVal17
	registerVal17 = {}
	local function __FUNC_39EB_()
		registerVal2:setupElementClipCounter(13.000000)
		registerVal3:completeAnimation()
		registerVal2.GreyBacking:setAlpha(0.250000)
		registerVal2.clipFinished(registerVal3, {})
		registerVal4:completeAnimation()
		registerVal2.BlackBacking:setAlpha(0.250000)
		registerVal2.clipFinished(registerVal4, {})
		registerVal5:completeAnimation()
		registerVal2.completedRewardImage:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal5, {})
		registerVal6:completeAnimation()
		registerVal2.ProgressionRewardImage:setAlpha(1.000000)
		registerVal2.clipFinished(registerVal6, {})
		registerVal7:completeAnimation()
		registerVal2.ChallengeBonusXPInfo:setAlpha(1.000000)
		registerVal2.clipFinished(registerVal7, {})
		registerVal8:completeAnimation()
		registerVal2.requirementTitle:setLeftRight(true, true, 103.500000, -4.000000)
		registerVal2.requirementTitle:setTopBottom(true, false, 0.000000, 24.000000)
		registerVal2.requirementTitle:setAlpha(1.000000)
		registerVal2.clipFinished(registerVal8, {})
		registerVal9:completeAnimation()
		registerVal2.completedTitle:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal9, {})
		registerVal10:completeAnimation()
		registerVal2.progressBar:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal10, {})
		registerVal11:completeAnimation()
		registerVal2.progressText:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal11, {})
		registerVal12:completeAnimation()
		registerVal2.ProgressBarBorder:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal12, {})
		registerVal13:completeAnimation()
		registerVal2.verticalScrollingTextBox:setLeftRight(true, false, 103.500000, 416.000000)
		registerVal2.verticalScrollingTextBox:setTopBottom(true, false, 23.000000, 65.000000)
		registerVal2.verticalScrollingTextBox:setAlpha(1.000000)
		registerVal2.clipFinished(registerVal13, {})
		registerVal14:completeAnimation()
		registerVal2.RewardBox:setLeftRight(true, true, -1.000000, 1.000000)
		registerVal2.RewardBox:setTopBottom(true, true, -1.000000, 1.000000)
		registerVal2.RewardBox:setAlpha(0.200000)
		registerVal2.clipFinished(registerVal14, {})
		registerVal15:completeAnimation()
		registerVal2.bmContractBrandIcon:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal15, {})
	end

	registerVal17.DefaultClip = __FUNC_39EB_
	registerVal16.NotAvailable = registerVal17
	registerVal2.clipsPerState = registerVal16
	local function __FUNC_40A5_(arg0)
		arg0.completedRewardImage:close()
		arg0.ProgressionRewardImage:close()
		arg0.ChallengeBonusXPInfo:close()
		arg0.ProgressBarBorder:close()
		arg0.verticalScrollingTextBox:close()
		arg0.progressBar:close()
		arg0.progressText:close()
	end

	LUI.OverrideFunction_CallOriginalSecond(registerVal2, "close", __FUNC_40A5_)
	if PostLoadFunc then
		PostLoadFunc(registerVal2, arg1, arg0)
	end
	return registerVal2
end

