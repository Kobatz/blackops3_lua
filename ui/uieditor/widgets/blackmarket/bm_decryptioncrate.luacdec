-- Decompiled with CoDLUIDecompiler by JariK

require("ui.uieditor.widgets.BlackMarket.smokewidget")
require("ui.uieditor.widgets.BlackMarket.fx_Ember2")
require("ui.uieditor.widgets.BlackMarket.fx_Ember")
require("ui.uieditor.widgets.BlackMarket.fx_glow")
local registerVal1 = InheritFrom(LUI.UIElement)
CoD.BM_DecryptionCrate = registerVal1
function CoD.BM_DecryptionCrate.new(arg0, arg1)
	local registerVal2 = LUI.UIElement.new()
	if PreLoadFunc then
		PreLoadFunc(registerVal2, arg1)
	end
	registerVal2:setUseStencil(false)
	registerVal2:setClass(CoD.BM_DecryptionCrate)
	registerVal2.id = "BM_DecryptionCrate"
	registerVal2.soundSet = "default"
	registerVal2:setLeftRight(true, false, 0.000000, 79.000000)
	registerVal2:setTopBottom(true, false, 0.000000, 79.000000)
	registerVal2.anyChildUsesUpdateState = true
	local registerVal3 = LUI.UIImage.new()
	registerVal3:setLeftRight(false, false, -67.400000, 69.400000)
	registerVal3:setTopBottom(true, false, -27.960000, 108.040000)
	registerVal3:setRGB(0.220000, 0.930000, 0.930000)
	registerVal3:setAlpha(0.000000)
	registerVal3:setImage(RegisterImage("uie_t7_blackmarket_crate_whiteglow"))
	registerVal2:addElement(registerVal3)
	registerVal2.glow00 = registerVal3
	local registerVal4 = LUI.UIImage.new()
	registerVal4:setLeftRight(false, false, -83.000000, 84.000000)
	registerVal4:setTopBottom(true, false, -46.000000, 124.000000)
	registerVal4:setAlpha(0.000000)
	registerVal4:setScale(1.150000)
	registerVal4:setImage(RegisterImage("uie_t7_blackmarket_crate_bundle_open"))
	registerVal2:addElement(registerVal4)
	registerVal2.BundleOnOpen = registerVal4
	local registerVal5 = LUI.UIImage.new()
	registerVal5:setLeftRight(false, false, -83.000000, 84.000000)
	registerVal5:setTopBottom(true, false, -46.000000, 124.000000)
	registerVal5:setAlpha(0.000000)
	registerVal5:setScale(1.150000)
	registerVal5:setImage(RegisterImage("uie_t7_blackmarket_6pack_commons_open"))
	registerVal2:addElement(registerVal5)
	registerVal2.SixPackCommonBundleOnOpen = registerVal5
	local registerVal6 = CoD.smokewidget.new(arg0, arg1)
	registerVal6:setLeftRight(true, false, -41.250000, 128.350000)
	registerVal6:setTopBottom(true, false, -76.960000, 101.540000)
	registerVal6:setAlpha(0.000000)
	registerVal6:setScale(1.200000)
	registerVal6:setRFTMaterial(LUI.UIImage.GetCachedMaterial("ui_add"))
	registerVal2:addElement(registerVal6)
	registerVal2.smokewidget = registerVal6
	local registerVal7 = CoD.fx_Ember2.new(arg0, arg1)
	registerVal7:setLeftRight(true, false, -28.450000, 115.550000)
	registerVal7:setTopBottom(true, false, -61.960000, 118.040000)
	registerVal7:setAlpha(0.000000)
	registerVal7:setScale(1.200000)
	registerVal7:setRFTMaterial(LUI.UIImage.GetCachedMaterial("ui_add"))
	registerVal2:addElement(registerVal7)
	registerVal2.fxEmber2 = registerVal7
	local registerVal8 = CoD.fx_Ember.new(arg0, arg1)
	registerVal8:setLeftRight(true, false, -32.250000, 119.350000)
	registerVal8:setTopBottom(true, false, -49.460000, 140.040000)
	registerVal8:setAlpha(0.000000)
	registerVal8:setScale(1.200000)
	registerVal8:setRFTMaterial(LUI.UIImage.GetCachedMaterial("ui_add"))
	registerVal2:addElement(registerVal8)
	registerVal2.fxEmber = registerVal8
	local registerVal9 = LUI.UIImage.new()
	registerVal9:setLeftRight(false, false, -67.400000, 69.400000)
	registerVal9:setTopBottom(true, false, -28.460000, 107.540000)
	registerVal9:setAlpha(0.000000)
	registerVal9:setImage(RegisterImage("uie_t7_blackmarket_crate_rare_focus"))
	registerVal2:addElement(registerVal9)
	registerVal2.RareOn = registerVal9
	local registerVal10 = LUI.UIImage.new()
	registerVal10:setLeftRight(false, false, -67.400000, 69.400000)
	registerVal10:setTopBottom(true, false, -28.460000, 107.540000)
	registerVal10:setAlpha(0.000000)
	registerVal10:setImage(RegisterImage("uie_t7_blackmarket_crate_common_focus"))
	registerVal2:addElement(registerVal10)
	registerVal2.CommonOn = registerVal10
	local registerVal11 = CoD.fx_glow.new(arg0, arg1)
	registerVal11:setLeftRight(true, false, -27.900000, 108.900000)
	registerVal11:setTopBottom(true, false, -28.460000, 107.540000)
	registerVal11:setAlpha(0.000000)
	registerVal2:addElement(registerVal11)
	registerVal2.fxglow = registerVal11
	local registerVal12 = LUI.UIImage.new()
	registerVal12:setLeftRight(false, false, -67.400000, 69.400000)
	registerVal12:setTopBottom(true, false, -27.960000, 108.040000)
	registerVal12:setAlpha(0.000000)
	registerVal12:setImage(RegisterImage("uie_t7_blackmarket_crate_whiteglow"))
	registerVal2:addElement(registerVal12)
	registerVal2.glow0 = registerVal12
	local registerVal13 = LUI.UIImage.new()
	registerVal13:setLeftRight(false, false, -80.500000, 80.500000)
	registerVal13:setTopBottom(true, false, -40.460000, 120.540000)
	registerVal13:setAlpha(0.000000)
	registerVal13:setScale(1.500000)
	registerVal13:setImage(RegisterImage(GetImageForCurrentBribe(arg1, "uie_t7_blackmarket_crate_bribe_chip_taunt")))
	registerVal2:addElement(registerVal13)
	registerVal2.BribeOn = registerVal13
	local registerVal14 = LUI.UIImage.new()
	registerVal14:setLeftRight(false, false, -80.500000, 80.500000)
	registerVal14:setTopBottom(true, false, -40.460000, 120.540000)
	registerVal14:setAlpha(0.000000)
	registerVal14:setScale(1.500000)
	registerVal14:setImage(RegisterImage(AppendString("_hover", GetImageForCurrentBribe(arg1, "uie_t7_blackmarket_crate_bribe_chip_taunt"))))
	registerVal2:addElement(registerVal14)
	registerVal2.glowBribe = registerVal14
	local registerVal15 = LUI.UIImage.new()
	registerVal15:setLeftRight(false, false, -83.000000, 84.000000)
	registerVal15:setTopBottom(true, false, -46.000000, 124.000000)
	registerVal15:setAlpha(0.000000)
	registerVal15:setScale(1.150000)
	registerVal15:setImage(RegisterImage("uie_t7_blackmarket_crate_bundle"))
	registerVal2:addElement(registerVal15)
	registerVal2.BundleOn = registerVal15
	local registerVal16 = LUI.UIImage.new()
	registerVal16:setLeftRight(false, false, -83.000000, 84.000000)
	registerVal16:setTopBottom(true, false, -46.000000, 124.000000)
	registerVal16:setAlpha(0.000000)
	registerVal16:setScale(1.150000)
	registerVal16:setImage(RegisterImage("uie_t7_blackmarket_crate_bundle_glow"))
	registerVal2:addElement(registerVal16)
	registerVal2.glowBundle = registerVal16
	local registerVal17 = LUI.UIText.new()
	registerVal17:setLeftRight(true, false, -60.930000, 139.070000)
	registerVal17:setTopBottom(true, false, -3.250000, 46.750000)
	registerVal17:setRGB(0.970000, 0.950000, 0.680000)
	registerVal17:setAlpha(0.000000)
	registerVal17:setScale(1.500000)
	registerVal17:setTTF("fonts/FoundryGridnik-Medium.ttf")
	registerVal17:setAlignment(Enum.LUIAlignment.LUI_ALIGNMENT_CENTER)
	registerVal17:setAlignment(Enum.LUIAlignment.LUI_ALIGNMENT_TOP)
	local function __FUNC_489B_(arg0)
		local registerVal1 = Engine.GetModelValue(arg0)
		if registerVal1 then
			registerVal17:setText(Engine.Localize(SetValueIfNumberIsLessThanOrEqualTo(0.000000, "0", registerVal1)))
		end
	end

	registerVal17:subscribeToGlobalModel(arg1, "CryptoKeyProgress", "bundles", __FUNC_489B_)
	registerVal2:addElement(registerVal17)
	registerVal2.BundleCount = registerVal17
	local registerVal18 = LUI.UIText.new()
	registerVal18:setLeftRight(true, false, -60.930000, 139.070000)
	registerVal18:setTopBottom(true, false, -3.250000, 46.750000)
	registerVal18:setRGB(0.970000, 0.950000, 0.680000)
	registerVal18:setAlpha(0.000000)
	registerVal18:setScale(1.500000)
	registerVal18:setTTF("fonts/FoundryGridnik-Medium.ttf")
	registerVal18:setAlignment(Enum.LUIAlignment.LUI_ALIGNMENT_CENTER)
	registerVal18:setAlignment(Enum.LUIAlignment.LUI_ALIGNMENT_TOP)
	local function __FUNC_499F_(arg0)
		local registerVal1 = Engine.GetModelValue(arg0)
		if registerVal1 then
			registerVal18:setText(Engine.Localize(SetValueIfNumberIsLessThanOrEqualTo(0.000000, "0", registerVal1)))
		end
	end

	registerVal18:subscribeToGlobalModel(arg1, "CryptoKeyProgress", "bundleExperimentRareBundles", __FUNC_499F_)
	registerVal2:addElement(registerVal18)
	registerVal2.BundleExperimentRareCount = registerVal18
	local registerVal19 = LUI.UIText.new()
	registerVal19:setLeftRight(true, false, -60.930000, 139.070000)
	registerVal19:setTopBottom(true, false, -3.250000, 46.750000)
	registerVal19:setRGB(0.970000, 0.950000, 0.680000)
	registerVal19:setAlpha(0.000000)
	registerVal19:setScale(1.500000)
	registerVal19:setTTF("fonts/FoundryGridnik-Medium.ttf")
	registerVal19:setAlignment(Enum.LUIAlignment.LUI_ALIGNMENT_CENTER)
	registerVal19:setAlignment(Enum.LUIAlignment.LUI_ALIGNMENT_TOP)
	local function __FUNC_4AA3_(arg0)
		local registerVal1 = Engine.GetModelValue(arg0)
		if registerVal1 then
			registerVal19:setText(Engine.Localize(SetValueIfNumberIsLessThanOrEqualTo(0.000000, "0", registerVal1)))
		end
	end

	registerVal19:subscribeToGlobalModel(arg1, "CryptoKeyProgress", "codeBundleRareBundles", __FUNC_4AA3_)
	registerVal2:addElement(registerVal19)
	registerVal2.CodeBundleRareCount = registerVal19
	local registerVal20 = LUI.UIText.new()
	registerVal20:setLeftRight(true, false, -60.930000, 139.070000)
	registerVal20:setTopBottom(true, false, -3.250000, 46.750000)
	registerVal20:setRGB(0.970000, 0.950000, 0.680000)
	registerVal20:setAlpha(0.000000)
	registerVal20:setScale(1.500000)
	registerVal20:setTTF("fonts/FoundryGridnik-Medium.ttf")
	registerVal20:setAlignment(Enum.LUIAlignment.LUI_ALIGNMENT_CENTER)
	registerVal20:setAlignment(Enum.LUIAlignment.LUI_ALIGNMENT_TOP)
	local function __FUNC_4BA7_(arg0)
		local registerVal1 = Engine.GetModelValue(arg0)
		if registerVal1 then
			registerVal20:setText(Engine.Localize(SetValueIfNumberIsLessThanOrEqualTo(0.000000, "0", registerVal1)))
		end
	end

	registerVal20:subscribeToGlobalModel(arg1, "CryptoKeyProgress", "noDupesRareBundles", __FUNC_4BA7_)
	registerVal2:addElement(registerVal20)
	registerVal2.NoDupesRareCount = registerVal20
	local registerVal21 = LUI.UIText.new()
	registerVal21:setLeftRight(true, false, -60.930000, 139.070000)
	registerVal21:setTopBottom(true, false, -3.250000, 46.750000)
	registerVal21:setRGB(0.970000, 0.950000, 0.680000)
	registerVal21:setAlpha(0.000000)
	registerVal21:setScale(1.500000)
	registerVal21:setTTF("fonts/FoundryGridnik-Medium.ttf")
	registerVal21:setAlignment(Enum.LUIAlignment.LUI_ALIGNMENT_CENTER)
	registerVal21:setAlignment(Enum.LUIAlignment.LUI_ALIGNMENT_TOP)
	local function __FUNC_4CAB_(arg0)
		local registerVal1 = Engine.GetModelValue(arg0)
		if registerVal1 then
			registerVal21:setText(Engine.Localize(SetValueIfNumberIsLessThanOrEqualTo(0.000000, "0", registerVal1)))
		end
	end

	registerVal21:subscribeToGlobalModel(arg1, "CryptoKeyProgress", "hundredBundles", __FUNC_4CAB_)
	registerVal2:addElement(registerVal21)
	registerVal2.HundredBundleCount = registerVal21
	local registerVal22 = LUI.UIText.new()
	registerVal22:setLeftRight(true, false, -60.930000, 139.070000)
	registerVal22:setTopBottom(true, false, -3.250000, 46.750000)
	registerVal22:setRGB(0.970000, 0.950000, 0.680000)
	registerVal22:setAlpha(0.000000)
	registerVal22:setScale(1.500000)
	registerVal22:setTTF("fonts/FoundryGridnik-Medium.ttf")
	registerVal22:setAlignment(Enum.LUIAlignment.LUI_ALIGNMENT_CENTER)
	registerVal22:setAlignment(Enum.LUIAlignment.LUI_ALIGNMENT_TOP)
	local function __FUNC_4DAF_(arg0)
		local registerVal1 = Engine.GetModelValue(arg0)
		if registerVal1 then
			registerVal22:setText(Engine.Localize(SetValueIfNumberIsLessThanOrEqualTo(0.000000, "0", registerVal1)))
		end
	end

	registerVal22:subscribeToGlobalModel(arg1, "CryptoKeyProgress", "dailyDoubleRareBundles", __FUNC_4DAF_)
	registerVal2:addElement(registerVal22)
	registerVal2.DailyDoubleRareCount = registerVal22
	local registerVal23 = LUI.UIText.new()
	registerVal23:setLeftRight(true, false, -60.930000, 139.070000)
	registerVal23:setTopBottom(true, false, 1.750000, 51.750000)
	registerVal23:setRGB(1.000000, 0.960000, 0.720000)
	registerVal23:setAlpha(0.000000)
	registerVal23:setScale(1.500000)
	registerVal23:setTTF("fonts/FoundryGridnik-Medium.ttf")
	registerVal23:setAlignment(Enum.LUIAlignment.LUI_ALIGNMENT_CENTER)
	registerVal23:setAlignment(Enum.LUIAlignment.LUI_ALIGNMENT_TOP)
	local function __FUNC_4EB3_(arg0)
		local registerVal1 = Engine.GetModelValue(arg0)
		if registerVal1 then
			registerVal23:setText(Engine.Localize(SetValueIfNumberIsLessThanOrEqualTo(0.000000, "0", registerVal1)))
		end
	end

	registerVal23:subscribeToGlobalModel(arg1, "CryptoKeyProgress", "sixPackCommonBundles", __FUNC_4EB3_)
	registerVal2:addElement(registerVal23)
	registerVal2.SixPackCommonCount = registerVal23
	local registerVal24 = LUI.UIImage.new()
	registerVal24:setLeftRight(false, false, -83.000000, 84.000000)
	registerVal24:setTopBottom(true, false, -46.000000, 124.000000)
	registerVal24:setRGB(0.220000, 0.930000, 0.930000)
	registerVal24:setAlpha(0.000000)
	registerVal24:setScale(1.150000)
	registerVal24:setImage(RegisterImage("uie_t7_blackmarket_crate_bribe_focus_glow"))
	registerVal2:addElement(registerVal24)
	registerVal2.glowBundleOutline = registerVal24
	local registerVal25 = LUI.UIImage.new()
	registerVal25:setLeftRight(true, false, -32.930000, 111.070000)
	registerVal25:setTopBottom(true, false, -91.460000, 88.540000)
	registerVal25:setAlpha(0.000000)
	registerVal25:setScale(0.850000)
	registerVal25:setImage(RegisterImage("uie_t7_blackmarket_promo_bundle_alone"))
	registerVal2:addElement(registerVal25)
	registerVal2.IncentiveRare = registerVal25
	local registerVal26 = LUI.UIImage.new()
	registerVal26:setLeftRight(true, false, -20.500000, 99.500000)
	registerVal26:setTopBottom(true, false, -54.160000, 113.840000)
	registerVal26:setAlpha(0.000000)
	registerVal26:setImage(RegisterImage("uie_t7_blackmarket_promo_weapon_alone"))
	registerVal2:addElement(registerVal26)
	registerVal2.IncentiveWeapon = registerVal26
	local registerVal27 = LUI.UIImage.new()
	registerVal27:setLeftRight(true, false, -90.500000, 169.500000)
	registerVal27:setTopBottom(true, false, -30.000000, 100.000000)
	registerVal27:setAlpha(0.000000)
	registerVal27:setImage(RegisterImage(GetDecryptionRewardImageForSupplyDropType(arg1, "uie_t7_blackmarket_bribe_weapon")))
	registerVal2:addElement(registerVal27)
	registerVal2.GenericRewardImage = registerVal27
	local registerVal28 = LUI.UIImage.new()
	registerVal28:setLeftRight(true, false, -32.930000, 111.070000)
	registerVal28:setTopBottom(true, false, -40.250000, 55.750000)
	registerVal28:setAlpha(0.000000)
	registerVal28:setImage(RegisterImage(GetDecryptionRewardImageForSupplyDropType(arg1, "uie_t7_blackmarket_bribe_weapon")))
	registerVal2:addElement(registerVal28)
	registerVal2.GenericRewardImage0 = registerVal28
	local registerVal29 = LUI.UIImage.new()
	registerVal29:setLeftRight(true, false, -45.000000, 123.000000)
	registerVal29:setTopBottom(true, false, 35.000000, 107.000000)
	registerVal29:setAlpha(0.000000)
	registerVal29:setImage(RegisterImage("uie_t7_blackmarket_promo_numberbacker_small"))
	registerVal2:addElement(registerVal29)
	registerVal2.IncentiveNumberbacker = registerVal29
	local registerVal30 = LUI.UIText.new()
	registerVal30:setLeftRight(true, false, -61.500000, 138.500000)
	registerVal30:setTopBottom(true, false, 21.000000, 55.000000)
	registerVal30:setRGB(1.000000, 0.960000, 0.720000)
	registerVal30:setAlpha(0.000000)
	registerVal30:setTTF("fonts/FoundryGridnik-Medium.ttf")
	registerVal30:setMaterial(LUI.UIImage.GetCachedMaterial("sw4_2d_uie_font_cached_glow"))
	registerVal30:setShaderVector(0.000000, 0.090000, 0.000000, 0.000000, 0.000000)
	registerVal30:setShaderVector(1.000000, 0.060000, 0.000000, 0.000000, 0.000000)
	registerVal30:setShaderVector(2.000000, 1.000000, 0.000000, 0.000000, 0.000000)
	registerVal30:setAlignment(Enum.LUIAlignment.LUI_ALIGNMENT_CENTER)
	registerVal30:setAlignment(Enum.LUIAlignment.LUI_ALIGNMENT_TOP)
	local function __FUNC_4FB7_(arg0)
		local registerVal1 = Engine.GetModelValue(arg0)
		if registerVal1 then
			registerVal30:setText(LocalizeIntoString("MPUI_BM_INCENTIVE_QUANTITY", SetValueIfNumberIsLessThanOrEqualTo(0.000000, "", registerVal1)))
		end
	end

	registerVal30:subscribeToGlobalModel(arg1, "CryptoKeyProgress", "incentiveWeaponBundles", __FUNC_4FB7_)
	registerVal2:addElement(registerVal30)
	registerVal2.WeaponIncentiveCount = registerVal30
	local registerVal31 = LUI.UIText.new()
	registerVal31:setLeftRight(true, false, -61.500000, 138.500000)
	registerVal31:setTopBottom(true, false, 20.000000, 54.000000)
	registerVal31:setRGB(0.150000, 0.080000, 0.000000)
	registerVal31:setAlpha(0.000000)
	registerVal31:setTTF("fonts/FoundryGridnik-Medium.ttf")
	registerVal31:setMaterial(LUI.UIImage.GetCachedMaterial("sw4_2d_uie_font_cached_glow"))
	registerVal31:setShaderVector(0.000000, 0.090000, 0.000000, 0.000000, 0.000000)
	registerVal31:setShaderVector(1.000000, 0.060000, 0.000000, 0.000000, 0.000000)
	registerVal31:setShaderVector(2.000000, 1.000000, 0.000000, 0.000000, 0.000000)
	registerVal31:setAlignment(Enum.LUIAlignment.LUI_ALIGNMENT_CENTER)
	registerVal31:setAlignment(Enum.LUIAlignment.LUI_ALIGNMENT_TOP)
	local function __FUNC_50E0_(arg0)
		local registerVal1 = Engine.GetModelValue(arg0)
		if registerVal1 then
			registerVal31:setText(LocalizeIntoString("MPUI_BM_INCENTIVE_QUANTITY", SetValueIfNumberIsLessThanOrEqualTo(0.000000, "", registerVal1)))
		end
	end

	registerVal31:subscribeToGlobalModel(arg1, "CryptoKeyProgress", "incentiveWeaponBundles", __FUNC_50E0_)
	registerVal2:addElement(registerVal31)
	registerVal2.WeaponIncentiveCount0 = registerVal31
	local registerVal32 = LUI.UIText.new()
	registerVal32:setLeftRight(true, false, -61.930000, 138.070000)
	registerVal32:setTopBottom(true, false, 55.750000, 89.750000)
	registerVal32:setRGB(1.000000, 0.960000, 0.720000)
	registerVal32:setAlpha(0.000000)
	registerVal32:setTTF("fonts/FoundryGridnik-Medium.ttf")
	registerVal32:setMaterial(LUI.UIImage.GetCachedMaterial("sw4_2d_uie_font_cached_glow"))
	registerVal32:setShaderVector(0.000000, 0.090000, 0.000000, 0.000000, 0.000000)
	registerVal32:setShaderVector(1.000000, 0.060000, 0.000000, 0.000000, 0.000000)
	registerVal32:setShaderVector(2.000000, 1.000000, 0.000000, 0.000000, 0.000000)
	registerVal32:setAlignment(Enum.LUIAlignment.LUI_ALIGNMENT_CENTER)
	registerVal32:setAlignment(Enum.LUIAlignment.LUI_ALIGNMENT_TOP)
	local function __FUNC_520C_(arg0)
		local registerVal1 = Engine.GetModelValue(arg0)
		if registerVal1 then
			registerVal32:setText(LocalizeIntoString("MPUI_BM_INCENTIVE_QUANTITY", SetValueIfNumberIsLessThanOrEqualTo(0.000000, "", registerVal1)))
		end
	end

	registerVal32:subscribeToGlobalModel(arg1, "CryptoKeyProgress", "incentiveRareBundles", __FUNC_520C_)
	registerVal2:addElement(registerVal32)
	registerVal2.RareIncentiveCount0 = registerVal32
	local registerVal33 = LUI.UIText.new()
	registerVal33:setLeftRight(true, false, -61.930000, 138.070000)
	registerVal33:setTopBottom(true, false, 54.750000, 88.750000)
	registerVal33:setRGB(0.150000, 0.080000, 0.000000)
	registerVal33:setAlpha(0.000000)
	registerVal33:setTTF("fonts/FoundryGridnik-Medium.ttf")
	registerVal33:setMaterial(LUI.UIImage.GetCachedMaterial("sw4_2d_uie_font_cached_glow"))
	registerVal33:setShaderVector(0.000000, 0.090000, 0.000000, 0.000000, 0.000000)
	registerVal33:setShaderVector(1.000000, 0.060000, 0.000000, 0.000000, 0.000000)
	registerVal33:setShaderVector(2.000000, 1.000000, 0.000000, 0.000000, 0.000000)
	registerVal33:setAlignment(Enum.LUIAlignment.LUI_ALIGNMENT_CENTER)
	registerVal33:setAlignment(Enum.LUIAlignment.LUI_ALIGNMENT_TOP)
	local function __FUNC_5338_(arg0)
		local registerVal1 = Engine.GetModelValue(arg0)
		if registerVal1 then
			registerVal33:setText(LocalizeIntoString("MPUI_BM_INCENTIVE_QUANTITY", SetValueIfNumberIsLessThanOrEqualTo(0.000000, "", registerVal1)))
		end
	end

	registerVal33:subscribeToGlobalModel(arg1, "CryptoKeyProgress", "incentiveRareBundles", __FUNC_5338_)
	registerVal2:addElement(registerVal33)
	registerVal2.RareIncentiveCount = registerVal33
	local registerVal34 = LUI.UIText.new()
	registerVal34:setLeftRight(true, false, -61.500000, 138.500000)
	registerVal34:setTopBottom(true, false, 21.000000, 55.000000)
	registerVal34:setRGB(1.000000, 0.960000, 0.720000)
	registerVal34:setAlpha(0.000000)
	registerVal34:setTTF("fonts/FoundryGridnik-Medium.ttf")
	registerVal34:setMaterial(LUI.UIImage.GetCachedMaterial("sw4_2d_uie_font_cached_glow"))
	registerVal34:setShaderVector(0.000000, 0.090000, 0.000000, 0.000000, 0.000000)
	registerVal34:setShaderVector(1.000000, 0.060000, 0.000000, 0.000000, 0.000000)
	registerVal34:setShaderVector(2.000000, 1.000000, 0.000000, 0.000000, 0.000000)
	registerVal34:setAlignment(Enum.LUIAlignment.LUI_ALIGNMENT_CENTER)
	registerVal34:setAlignment(Enum.LUIAlignment.LUI_ALIGNMENT_TOP)
	local function __FUNC_5464_(arg0)
		local registerVal1 = Engine.GetModelValue(arg0)
		if registerVal1 then
			registerVal34:setText(LocalizeIntoString("MPUI_BM_INCENTIVE_QUANTITY", SetValueIfNumberIsLessThanOrEqualTo(0.000000, "", GetDecryptionRewardCountForSupplyDropType(arg1, registerVal1))))
		end
	end

	registerVal34:subscribeToGlobalModel(arg1, "CryptoKeyProgress", "genericRewardBundles", __FUNC_5464_)
	registerVal2:addElement(registerVal34)
	registerVal2.GenericRewardCount0 = registerVal34
	local registerVal35 = LUI.UIText.new()
	registerVal35:setLeftRight(true, false, -61.500000, 138.500000)
	registerVal35:setTopBottom(true, false, 20.000000, 54.000000)
	registerVal35:setRGB(0.150000, 0.080000, 0.000000)
	registerVal35:setAlpha(0.000000)
	registerVal35:setTTF("fonts/FoundryGridnik-Medium.ttf")
	registerVal35:setMaterial(LUI.UIImage.GetCachedMaterial("sw4_2d_uie_font_cached_glow"))
	registerVal35:setShaderVector(0.000000, 0.090000, 0.000000, 0.000000, 0.000000)
	registerVal35:setShaderVector(1.000000, 0.060000, 0.000000, 0.000000, 0.000000)
	registerVal35:setShaderVector(2.000000, 1.000000, 0.000000, 0.000000, 0.000000)
	registerVal35:setAlignment(Enum.LUIAlignment.LUI_ALIGNMENT_CENTER)
	registerVal35:setAlignment(Enum.LUIAlignment.LUI_ALIGNMENT_TOP)
	local function __FUNC_55CF_(arg0)
		local registerVal1 = Engine.GetModelValue(arg0)
		if registerVal1 then
			registerVal35:setText(LocalizeIntoString("MPUI_BM_INCENTIVE_QUANTITY", SetValueIfNumberIsLessThanOrEqualTo(0.000000, "", GetDecryptionRewardCountForSupplyDropType(arg1, registerVal1))))
		end
	end

	registerVal35:subscribeToGlobalModel(arg1, "CryptoKeyProgress", "genericRewardBundles", __FUNC_55CF_)
	registerVal2:addElement(registerVal35)
	registerVal2.GenericRewardCount = registerVal35
	local registerVal36 = LUI.UIText.new()
	registerVal36:setLeftRight(true, false, -61.930000, 138.070000)
	registerVal36:setTopBottom(true, false, 54.750000, 88.750000)
	registerVal36:setRGB(1.000000, 0.960000, 0.720000)
	registerVal36:setAlpha(0.000000)
	registerVal36:setTTF("fonts/FoundryGridnik-Medium.ttf")
	registerVal36:setMaterial(LUI.UIImage.GetCachedMaterial("sw4_2d_uie_font_cached_glow"))
	registerVal36:setShaderVector(0.000000, 0.090000, 0.000000, 0.000000, 0.000000)
	registerVal36:setShaderVector(1.000000, 0.060000, 0.000000, 0.000000, 0.000000)
	registerVal36:setShaderVector(2.000000, 1.000000, 0.000000, 0.000000, 0.000000)
	registerVal36:setAlignment(Enum.LUIAlignment.LUI_ALIGNMENT_CENTER)
	registerVal36:setAlignment(Enum.LUIAlignment.LUI_ALIGNMENT_TOP)
	local function __FUNC_5737_(arg0)
		local registerVal1 = Engine.GetModelValue(arg0)
		if registerVal1 then
			registerVal36:setText(LocalizeIntoString("MPUI_BM_INCENTIVE_QUANTITY", SetValueIfNumberIsLessThanOrEqualTo(0.000000, "", registerVal1)))
		end
	end

	registerVal36:subscribeToGlobalModel(arg1, "CryptoKeyProgress", "weapon3XBundles", __FUNC_5737_)
	registerVal2:addElement(registerVal36)
	registerVal2.WeaponBribe3Count0 = registerVal36
	local registerVal37 = LUI.UIText.new()
	registerVal37:setLeftRight(true, false, -61.930000, 138.070000)
	registerVal37:setTopBottom(true, false, 53.750000, 87.750000)
	registerVal37:setRGB(0.150000, 0.080000, 0.000000)
	registerVal37:setAlpha(0.000000)
	registerVal37:setTTF("fonts/FoundryGridnik-Medium.ttf")
	registerVal37:setMaterial(LUI.UIImage.GetCachedMaterial("sw4_2d_uie_font_cached_glow"))
	registerVal37:setShaderVector(0.000000, 0.090000, 0.000000, 0.000000, 0.000000)
	registerVal37:setShaderVector(1.000000, 0.060000, 0.000000, 0.000000, 0.000000)
	registerVal37:setShaderVector(2.000000, 1.000000, 0.000000, 0.000000, 0.000000)
	registerVal37:setAlignment(Enum.LUIAlignment.LUI_ALIGNMENT_CENTER)
	registerVal37:setAlignment(Enum.LUIAlignment.LUI_ALIGNMENT_TOP)
	local function __FUNC_5860_(arg0)
		local registerVal1 = Engine.GetModelValue(arg0)
		if registerVal1 then
			registerVal37:setText(LocalizeIntoString("MPUI_BM_INCENTIVE_QUANTITY", SetValueIfNumberIsLessThanOrEqualTo(0.000000, "", registerVal1)))
		end
	end

	registerVal37:subscribeToGlobalModel(arg1, "CryptoKeyProgress", "weapon3XBundles", __FUNC_5860_)
	registerVal2:addElement(registerVal37)
	registerVal2.WeaponBribe3Count = registerVal37
	local registerVal38 = LUI.UIText.new()
	registerVal38:setLeftRight(true, false, -61.930000, 138.070000)
	registerVal38:setTopBottom(true, false, 54.750000, 88.750000)
	registerVal38:setRGB(1.000000, 0.960000, 0.720000)
	registerVal38:setAlpha(0.000000)
	registerVal38:setTTF("fonts/FoundryGridnik-Medium.ttf")
	registerVal38:setMaterial(LUI.UIImage.GetCachedMaterial("sw4_2d_uie_font_cached_glow"))
	registerVal38:setShaderVector(0.000000, 0.090000, 0.000000, 0.000000, 0.000000)
	registerVal38:setShaderVector(1.000000, 0.060000, 0.000000, 0.000000, 0.000000)
	registerVal38:setShaderVector(2.000000, 1.000000, 0.000000, 0.000000, 0.000000)
	registerVal38:setAlignment(Enum.LUIAlignment.LUI_ALIGNMENT_CENTER)
	registerVal38:setAlignment(Enum.LUIAlignment.LUI_ALIGNMENT_TOP)
	local function __FUNC_598C_(arg0)
		local registerVal1 = Engine.GetModelValue(arg0)
		if registerVal1 then
			registerVal38:setText(LocalizeIntoString("MPUI_BM_INCENTIVE_QUANTITY", SetValueIfNumberIsLessThanOrEqualTo(0.000000, "", registerVal1)))
		end
	end

	registerVal38:subscribeToGlobalModel(arg1, "CryptoKeyProgress", "limitedEditionCamoBundles", __FUNC_598C_)
	registerVal2:addElement(registerVal38)
	registerVal2.LimitedEditionCamoCount0 = registerVal38
	local registerVal39 = LUI.UIText.new()
	registerVal39:setLeftRight(true, false, -61.930000, 138.070000)
	registerVal39:setTopBottom(true, false, 53.750000, 87.750000)
	registerVal39:setRGB(0.150000, 0.080000, 0.000000)
	registerVal39:setAlpha(0.000000)
	registerVal39:setTTF("fonts/FoundryGridnik-Medium.ttf")
	registerVal39:setMaterial(LUI.UIImage.GetCachedMaterial("sw4_2d_uie_font_cached_glow"))
	registerVal39:setShaderVector(0.000000, 0.090000, 0.000000, 0.000000, 0.000000)
	registerVal39:setShaderVector(1.000000, 0.060000, 0.000000, 0.000000, 0.000000)
	registerVal39:setShaderVector(2.000000, 1.000000, 0.000000, 0.000000, 0.000000)
	registerVal39:setAlignment(Enum.LUIAlignment.LUI_ALIGNMENT_CENTER)
	registerVal39:setAlignment(Enum.LUIAlignment.LUI_ALIGNMENT_TOP)
	local function __FUNC_5AB8_(arg0)
		local registerVal1 = Engine.GetModelValue(arg0)
		if registerVal1 then
			registerVal39:setText(LocalizeIntoString("MPUI_BM_INCENTIVE_QUANTITY", SetValueIfNumberIsLessThanOrEqualTo(0.000000, "", registerVal1)))
		end
	end

	registerVal39:subscribeToGlobalModel(arg1, "CryptoKeyProgress", "limitedEditionCamoBundles", __FUNC_5AB8_)
	registerVal2:addElement(registerVal39)
	registerVal2.LimitedEditionCamoCount = registerVal39
	local registerVal40 = LUI.UIText.new()
	registerVal40:setLeftRight(true, false, -60.930000, 139.070000)
	registerVal40:setTopBottom(true, false, -3.250000, 46.750000)
	registerVal40:setRGB(0.970000, 0.950000, 0.680000)
	registerVal40:setAlpha(0.000000)
	registerVal40:setScale(1.500000)
	registerVal40:setTTF("fonts/FoundryGridnik-Medium.ttf")
	registerVal40:setAlignment(Enum.LUIAlignment.LUI_ALIGNMENT_CENTER)
	registerVal40:setAlignment(Enum.LUIAlignment.LUI_ALIGNMENT_TOP)
	local function __FUNC_5BE4_(arg0)
		local registerVal1 = Engine.GetModelValue(arg0)
		if registerVal1 then
			registerVal40:setText(Engine.Localize(SetValueIfNumberIsLessThanOrEqualTo(0.000000, "0", registerVal1)))
		end
	end

	registerVal40:subscribeToGlobalModel(arg1, "CryptoKeyProgress", "rareBundle10for5s", __FUNC_5BE4_)
	registerVal2:addElement(registerVal40)
	registerVal2.RareBundle10for5Count = registerVal40
	local registerVal41 = LUI.UIText.new()
	registerVal41:setLeftRight(true, false, -60.930000, 139.070000)
	registerVal41:setTopBottom(true, false, -3.250000, 46.750000)
	registerVal41:setRGB(0.970000, 0.950000, 0.680000)
	registerVal41:setAlpha(0.000000)
	registerVal41:setScale(1.500000)
	registerVal41:setTTF("fonts/FoundryGridnik-Medium.ttf")
	registerVal41:setAlignment(Enum.LUIAlignment.LUI_ALIGNMENT_CENTER)
	registerVal41:setAlignment(Enum.LUIAlignment.LUI_ALIGNMENT_TOP)
	local function __FUNC_5CEB_(arg0)
		local registerVal1 = Engine.GetModelValue(arg0)
		if registerVal1 then
			registerVal41:setText(Engine.Localize(SetValueIfNumberIsLessThanOrEqualTo(0.000000, "0", registerVal1)))
		end
	end

	registerVal41:subscribeToGlobalModel(arg1, "CryptoKeyProgress", "rare15Bundles", __FUNC_5CEB_)
	registerVal2:addElement(registerVal41)
	registerVal2.Rare15BundleCount = registerVal41
	local registerVal42 = LUI.UIText.new()
	registerVal42:setLeftRight(true, false, -60.930000, 139.070000)
	registerVal42:setTopBottom(true, false, -3.250000, 46.750000)
	registerVal42:setRGB(0.970000, 0.950000, 0.680000)
	registerVal42:setAlpha(0.000000)
	registerVal42:setScale(1.500000)
	registerVal42:setTTF("fonts/FoundryGridnik-Medium.ttf")
	registerVal42:setAlignment(Enum.LUIAlignment.LUI_ALIGNMENT_CENTER)
	registerVal42:setAlignment(Enum.LUIAlignment.LUI_ALIGNMENT_TOP)
	local function __FUNC_5DEF_(arg0)
		local registerVal1 = Engine.GetModelValue(arg0)
		if registerVal1 then
			registerVal42:setText(Engine.Localize(SetValueIfNumberIsLessThanOrEqualTo(0.000000, "0", registerVal1)))
		end
	end

	registerVal42:subscribeToGlobalModel(arg1, "CryptoKeyProgress", "outfit3Bundles", __FUNC_5DEF_)
	registerVal2:addElement(registerVal42)
	registerVal2.OutfitBribeCount = registerVal42
	local registerVal43 = {}
	registerVal43.DefaultState = {}
	local registerVal44 = {}
	local function __FUNC_5EF3_()
		registerVal2:setupElementClipCounter(29.000000)
		registerVal3:completeAnimation()
		registerVal2.glow00:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal3, {})
		registerVal4:completeAnimation()
		registerVal2.BundleOnOpen:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal4, {})
		registerVal5:completeAnimation()
		registerVal2.SixPackCommonBundleOnOpen:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal5, {})
		registerVal6:completeAnimation()
		registerVal2.smokewidget:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal6, {})
		registerVal7:completeAnimation()
		registerVal2.fxEmber2:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal7, {})
		registerVal8:completeAnimation()
		registerVal2.fxEmber:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal8, {})
		registerVal9:completeAnimation()
		registerVal2.RareOn:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal9, {})
		registerVal10:completeAnimation()
		registerVal2.CommonOn:setAlpha(1.000000)
		registerVal2.clipFinished(registerVal10, {})
		registerVal11:completeAnimation()
		registerVal2.fxglow:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal11, {})
		registerVal12:completeAnimation()
		registerVal2.glow0:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal12, {})
		registerVal13:completeAnimation()
		registerVal2.BribeOn:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal13, {})
		registerVal14:completeAnimation()
		registerVal2.glowBribe:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal14, {})
		registerVal15:completeAnimation()
		registerVal2.BundleOn:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal15, {})
		registerVal16:completeAnimation()
		registerVal2.glowBundle:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal16, {})
		registerVal17:completeAnimation()
		registerVal2.BundleCount:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal17, {})
		registerVal18:completeAnimation()
		registerVal2.BundleExperimentRareCount:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal18, {})
		registerVal19:completeAnimation()
		registerVal2.CodeBundleRareCount:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal19, {})
		registerVal20:completeAnimation()
		registerVal2.NoDupesRareCount:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal20, {})
		registerVal21:completeAnimation()
		registerVal2.HundredBundleCount:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal21, {})
		registerVal22:completeAnimation()
		registerVal2.DailyDoubleRareCount:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal22, {})
		registerVal23:completeAnimation()
		registerVal2.SixPackCommonCount:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal23, {})
		registerVal24:completeAnimation()
		registerVal2.glowBundleOutline:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal24, {})
		registerVal27:completeAnimation()
		registerVal2.GenericRewardImage:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal27, {})
		registerVal34:completeAnimation()
		registerVal2.GenericRewardCount0:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal34, {})
		registerVal35:completeAnimation()
		registerVal2.GenericRewardCount:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal35, {})
		registerVal36:completeAnimation()
		registerVal2.WeaponBribe3Count0:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal36, {})
		registerVal37:completeAnimation()
		registerVal2.WeaponBribe3Count:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal37, {})
		registerVal38:completeAnimation()
		registerVal2.LimitedEditionCamoCount0:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal38, {})
		registerVal39:completeAnimation()
		registerVal2.LimitedEditionCamoCount:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal39, {})
	end

	registerVal44.DefaultClip = __FUNC_5EF3_
	local function __FUNC_6A0E_()
		registerVal2:setupElementClipCounter(14.000000)
		local function __FUNC_6FD1_(arg0, arg1)
			local function __FUNC_714B_(arg0, arg1)
				if not arg1.interrupted then
					arg0:beginAnimation("keyframe", 779.000000, false, false, CoD.TweenType.Linear)
				end
				arg0:setRGB(1.000000, 1.000000, 1.000000)
				arg0:setAlpha(0.000000)
				if arg1.interrupted then
					registerVal2.clipFinished(arg0, arg1)
				else
					arg0:registerEventHandler("transition_complete_keyframe", registerVal2.clipFinished)
				end
			end

			if arg1.interrupted then
				__FUNC_714B_(arg0, arg1)
				return 
			end
			arg0:beginAnimation("keyframe", 759.000000, false, false, CoD.TweenType.Linear)
			arg0:setAlpha(1.000000)
			arg0:registerEventHandler("transition_complete_keyframe", __FUNC_714B_)
		end

		registerVal3:completeAnimation()
		registerVal2.glow00:setRGB(1.000000, 1.000000, 1.000000)
		registerVal2.glow00:setAlpha(0.000000)
		__FUNC_6FD1_(registerVal3, {})
		registerVal4:completeAnimation()
		registerVal2.BundleOnOpen:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal4, {})
		registerVal6:completeAnimation()
		registerVal2.smokewidget:setAlpha(1.000000)
		registerVal2.clipFinished(registerVal6, {})
		registerVal7:completeAnimation()
		registerVal2.fxEmber2:setAlpha(1.000000)
		registerVal2.clipFinished(registerVal7, {})
		registerVal8:completeAnimation()
		registerVal2.fxEmber:setAlpha(1.000000)
		registerVal2.clipFinished(registerVal8, {})
		registerVal9:completeAnimation()
		registerVal2.RareOn:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal9, {})
		registerVal10:completeAnimation()
		registerVal2.CommonOn:setAlpha(1.000000)
		registerVal2.clipFinished(registerVal10, {})
		local function __FUNC_7326_(arg0, arg1)
			local function __FUNC_749F_(arg0, arg1)
				if not arg1.interrupted then
					arg0:beginAnimation("keyframe", 779.000000, true, true, CoD.TweenType.Linear)
				end
				arg0:setAlpha(0.100000)
				if arg1.interrupted then
					registerVal2.clipFinished(arg0, arg1)
				else
					arg0:registerEventHandler("transition_complete_keyframe", registerVal2.clipFinished)
				end
			end

			if arg1.interrupted then
				__FUNC_749F_(arg0, arg1)
				return 
			end
			arg0:beginAnimation("keyframe", 759.000000, true, true, CoD.TweenType.Linear)
			arg0:setAlpha(1.000000)
			arg0:registerEventHandler("transition_complete_keyframe", __FUNC_749F_)
		end

		registerVal12:completeAnimation()
		registerVal2.glow0:setAlpha(0.000000)
		__FUNC_7326_(registerVal12, {})
		registerVal13:completeAnimation()
		registerVal2.BribeOn:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal13, {})
		registerVal14:completeAnimation()
		registerVal2.glowBribe:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal14, {})
		registerVal15:completeAnimation()
		registerVal2.BundleOn:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal15, {})
		registerVal16:completeAnimation()
		registerVal2.glowBundle:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal16, {})
		registerVal17:completeAnimation()
		registerVal2.BundleCount:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal17, {})
		registerVal24:completeAnimation()
		registerVal2.glowBundleOutline:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal24, {})
		registerVal2.nextClip = "Focus"
	end

	registerVal44.Focus = __FUNC_6A0E_
	registerVal43.Common = registerVal44
	registerVal44 = {}
	local function __FUNC_7651_()
		registerVal2:setupElementClipCounter(36.000000)
		registerVal3:completeAnimation()
		registerVal2.glow00:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal3, {})
		registerVal4:completeAnimation()
		registerVal2.BundleOnOpen:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal4, {})
		registerVal5:completeAnimation()
		registerVal2.SixPackCommonBundleOnOpen:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal5, {})
		registerVal6:completeAnimation()
		registerVal2.smokewidget:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal6, {})
		registerVal7:completeAnimation()
		registerVal2.fxEmber2:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal7, {})
		registerVal8:completeAnimation()
		registerVal2.fxEmber:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal8, {})
		registerVal9:completeAnimation()
		registerVal2.RareOn:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal9, {})
		registerVal10:completeAnimation()
		registerVal2.CommonOn:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal10, {})
		registerVal11:completeAnimation()
		registerVal2.fxglow:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal11, {})
		registerVal12:completeAnimation()
		registerVal2.glow0:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal12, {})
		registerVal13:completeAnimation()
		registerVal2.BribeOn:setLeftRight(false, false, -80.500000, 80.500000)
		registerVal2.BribeOn:setTopBottom(true, false, -40.460000, 120.540000)
		registerVal2.BribeOn:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal13, {})
		registerVal14:completeAnimation()
		registerVal2.glowBribe:setLeftRight(false, false, -80.500000, 80.500000)
		registerVal2.glowBribe:setTopBottom(true, false, -40.460000, 120.540000)
		registerVal2.glowBribe:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal14, {})
		registerVal15:completeAnimation()
		registerVal2.BundleOn:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal15, {})
		registerVal16:completeAnimation()
		registerVal2.glowBundle:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal16, {})
		registerVal17:completeAnimation()
		registerVal2.BundleCount:setRGB(0.970000, 0.950000, 0.680000)
		registerVal2.BundleCount:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal17, {})
		registerVal18:completeAnimation()
		registerVal2.BundleExperimentRareCount:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal18, {})
		registerVal19:completeAnimation()
		registerVal2.CodeBundleRareCount:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal19, {})
		registerVal20:completeAnimation()
		registerVal2.NoDupesRareCount:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal20, {})
		registerVal21:completeAnimation()
		registerVal2.HundredBundleCount:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal21, {})
		registerVal22:completeAnimation()
		registerVal2.DailyDoubleRareCount:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal22, {})
		registerVal23:completeAnimation()
		registerVal2.SixPackCommonCount:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal23, {})
		registerVal24:completeAnimation()
		registerVal2.glowBundleOutline:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal24, {})
		registerVal25:completeAnimation()
		registerVal2.IncentiveRare:setLeftRight(true, false, -32.930000, 111.070000)
		registerVal2.IncentiveRare:setTopBottom(true, false, -92.460000, 87.540000)
		registerVal2.IncentiveRare:setAlpha(1.000000)
		registerVal2.clipFinished(registerVal25, {})
		registerVal26:completeAnimation()
		registerVal2.IncentiveWeapon:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal26, {})
		registerVal27:completeAnimation()
		registerVal2.GenericRewardImage:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal27, {})
		registerVal29:completeAnimation()
		registerVal2.IncentiveNumberbacker:setLeftRight(true, false, -45.000000, 123.000000)
		registerVal2.IncentiveNumberbacker:setTopBottom(true, false, 35.000000, 107.000000)
		registerVal2.IncentiveNumberbacker:setAlpha(1.000000)
		registerVal2.clipFinished(registerVal29, {})
		registerVal30:completeAnimation()
		registerVal2.WeaponIncentiveCount:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal30, {})
		registerVal31:completeAnimation()
		registerVal2.WeaponIncentiveCount0:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal31, {})
		registerVal32:completeAnimation()
		registerVal2.RareIncentiveCount0:setLeftRight(true, false, -61.930000, 138.070000)
		registerVal2.RareIncentiveCount0:setTopBottom(true, false, 54.750000, 88.750000)
		registerVal2.RareIncentiveCount0:setAlpha(1.000000)
		registerVal2.clipFinished(registerVal32, {})
		registerVal33:completeAnimation()
		registerVal2.RareIncentiveCount:setLeftRight(true, false, -61.930000, 138.070000)
		registerVal2.RareIncentiveCount:setTopBottom(true, false, 53.750000, 87.750000)
		registerVal2.RareIncentiveCount:setAlpha(1.000000)
		registerVal2.clipFinished(registerVal33, {})
		registerVal34:completeAnimation()
		registerVal2.GenericRewardCount0:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal34, {})
		registerVal35:completeAnimation()
		registerVal2.GenericRewardCount:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal35, {})
		registerVal36:completeAnimation()
		registerVal2.WeaponBribe3Count0:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal36, {})
		registerVal37:completeAnimation()
		registerVal2.WeaponBribe3Count:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal37, {})
		registerVal38:completeAnimation()
		registerVal2.LimitedEditionCamoCount0:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal38, {})
		registerVal39:completeAnimation()
		registerVal2.LimitedEditionCamoCount:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal39, {})
	end

	registerVal44.DefaultClip = __FUNC_7651_
	local function __FUNC_86B8_()
		registerVal2:setupElementClipCounter(22.000000)
		registerVal3:completeAnimation()
		registerVal2.glow00:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal3, {})
		registerVal4:completeAnimation()
		registerVal2.BundleOnOpen:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal4, {})
		registerVal6:completeAnimation()
		registerVal2.smokewidget:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal6, {})
		registerVal7:completeAnimation()
		registerVal2.fxEmber2:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal7, {})
		registerVal8:completeAnimation()
		registerVal2.fxEmber:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal8, {})
		registerVal9:completeAnimation()
		registerVal2.RareOn:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal9, {})
		registerVal10:completeAnimation()
		registerVal2.CommonOn:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal10, {})
		registerVal11:completeAnimation()
		registerVal2.fxglow:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal11, {})
		registerVal12:completeAnimation()
		registerVal2.glow0:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal12, {})
		registerVal13:completeAnimation()
		registerVal2.BribeOn:setLeftRight(false, false, -80.500000, 80.500000)
		registerVal2.BribeOn:setTopBottom(true, false, -40.460000, 120.540000)
		registerVal2.BribeOn:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal13, {})
		registerVal14:completeAnimation()
		registerVal2.glowBribe:setLeftRight(false, false, -80.500000, 80.500000)
		registerVal2.glowBribe:setTopBottom(true, false, -40.460000, 120.540000)
		registerVal2.glowBribe:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal14, {})
		registerVal15:completeAnimation()
		registerVal2.BundleOn:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal15, {})
		registerVal16:completeAnimation()
		registerVal2.glowBundle:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal16, {})
		registerVal17:completeAnimation()
		registerVal2.BundleCount:setRGB(0.970000, 0.950000, 0.680000)
		registerVal2.BundleCount:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal17, {})
		registerVal24:completeAnimation()
		registerVal2.glowBundleOutline:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal24, {})
		registerVal25:completeAnimation()
		registerVal2.IncentiveRare:setLeftRight(true, false, -32.930000, 111.070000)
		registerVal2.IncentiveRare:setTopBottom(true, false, -92.460000, 87.540000)
		registerVal2.IncentiveRare:setAlpha(1.000000)
		registerVal2.clipFinished(registerVal25, {})
		registerVal26:completeAnimation()
		registerVal2.IncentiveWeapon:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal26, {})
		registerVal29:completeAnimation()
		registerVal2.IncentiveNumberbacker:setLeftRight(true, false, -45.000000, 123.000000)
		registerVal2.IncentiveNumberbacker:setTopBottom(true, false, 35.000000, 107.000000)
		registerVal2.IncentiveNumberbacker:setAlpha(1.000000)
		registerVal2.clipFinished(registerVal29, {})
		registerVal30:completeAnimation()
		registerVal2.WeaponIncentiveCount:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal30, {})
		registerVal31:completeAnimation()
		registerVal2.WeaponIncentiveCount0:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal31, {})
		registerVal32:completeAnimation()
		registerVal2.RareIncentiveCount0:setLeftRight(true, false, -61.930000, 138.070000)
		registerVal2.RareIncentiveCount0:setTopBottom(true, false, 54.750000, 88.750000)
		registerVal2.RareIncentiveCount0:setAlpha(1.000000)
		registerVal2.clipFinished(registerVal32, {})
		registerVal33:completeAnimation()
		registerVal2.RareIncentiveCount:setLeftRight(true, false, -61.930000, 138.070000)
		registerVal2.RareIncentiveCount:setTopBottom(true, false, 53.750000, 87.750000)
		registerVal2.RareIncentiveCount:setAlpha(1.000000)
		registerVal2.clipFinished(registerVal33, {})
	end

	registerVal44.Focus = __FUNC_86B8_
	registerVal43.IncentiveRare = registerVal44
	registerVal44 = {}
	local function __FUNC_91C6_()
		registerVal2:setupElementClipCounter(35.000000)
		registerVal3:completeAnimation()
		registerVal2.glow00:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal3, {})
		registerVal4:completeAnimation()
		registerVal2.BundleOnOpen:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal4, {})
		registerVal5:completeAnimation()
		registerVal2.SixPackCommonBundleOnOpen:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal5, {})
		registerVal6:completeAnimation()
		registerVal2.smokewidget:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal6, {})
		registerVal7:completeAnimation()
		registerVal2.fxEmber2:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal7, {})
		registerVal8:completeAnimation()
		registerVal2.fxEmber:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal8, {})
		registerVal9:completeAnimation()
		registerVal2.RareOn:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal9, {})
		registerVal10:completeAnimation()
		registerVal2.CommonOn:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal10, {})
		registerVal11:completeAnimation()
		registerVal2.fxglow:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal11, {})
		registerVal12:completeAnimation()
		registerVal2.glow0:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal12, {})
		registerVal13:completeAnimation()
		registerVal2.BribeOn:setLeftRight(false, false, -80.500000, 80.500000)
		registerVal2.BribeOn:setTopBottom(true, false, -40.460000, 120.540000)
		registerVal2.BribeOn:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal13, {})
		registerVal14:completeAnimation()
		registerVal2.glowBribe:setLeftRight(false, false, -80.500000, 80.500000)
		registerVal2.glowBribe:setTopBottom(true, false, -40.460000, 120.540000)
		registerVal2.glowBribe:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal14, {})
		registerVal15:completeAnimation()
		registerVal2.BundleOn:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal15, {})
		registerVal16:completeAnimation()
		registerVal2.glowBundle:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal16, {})
		registerVal17:completeAnimation()
		registerVal2.BundleCount:setRGB(0.970000, 0.950000, 0.680000)
		registerVal2.BundleCount:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal17, {})
		registerVal18:completeAnimation()
		registerVal2.BundleExperimentRareCount:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal18, {})
		registerVal19:completeAnimation()
		registerVal2.CodeBundleRareCount:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal19, {})
		registerVal20:completeAnimation()
		registerVal2.NoDupesRareCount:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal20, {})
		registerVal21:completeAnimation()
		registerVal2.HundredBundleCount:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal21, {})
		registerVal22:completeAnimation()
		registerVal2.DailyDoubleRareCount:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal22, {})
		registerVal23:completeAnimation()
		registerVal2.SixPackCommonCount:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal23, {})
		registerVal24:completeAnimation()
		registerVal2.glowBundleOutline:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal24, {})
		registerVal25:completeAnimation()
		registerVal2.IncentiveRare:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal25, {})
		registerVal26:completeAnimation()
		registerVal2.IncentiveWeapon:setAlpha(1.000000)
		registerVal2.clipFinished(registerVal26, {})
		registerVal27:completeAnimation()
		registerVal2.GenericRewardImage:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal27, {})
		registerVal29:completeAnimation()
		registerVal2.IncentiveNumberbacker:setLeftRight(true, false, -45.000000, 123.000000)
		registerVal2.IncentiveNumberbacker:setTopBottom(true, false, 0.000000, 72.000000)
		registerVal2.IncentiveNumberbacker:setAlpha(1.000000)
		registerVal2.clipFinished(registerVal29, {})
		registerVal30:completeAnimation()
		registerVal2.WeaponIncentiveCount:setLeftRight(true, false, -61.500000, 138.500000)
		registerVal2.WeaponIncentiveCount:setTopBottom(true, false, 19.000000, 53.000000)
		registerVal2.WeaponIncentiveCount:setAlpha(0.750000)
		registerVal2.clipFinished(registerVal30, {})
		registerVal31:completeAnimation()
		registerVal2.WeaponIncentiveCount0:setLeftRight(true, false, -61.500000, 138.500000)
		registerVal2.WeaponIncentiveCount0:setTopBottom(true, false, 18.000000, 52.000000)
		registerVal2.WeaponIncentiveCount0:setAlpha(1.000000)
		registerVal2.clipFinished(registerVal31, {})
		registerVal33:completeAnimation()
		registerVal2.RareIncentiveCount:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal33, {})
		registerVal34:completeAnimation()
		registerVal2.GenericRewardCount0:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal34, {})
		registerVal35:completeAnimation()
		registerVal2.GenericRewardCount:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal35, {})
		registerVal36:completeAnimation()
		registerVal2.WeaponBribe3Count0:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal36, {})
		registerVal37:completeAnimation()
		registerVal2.WeaponBribe3Count:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal37, {})
		registerVal38:completeAnimation()
		registerVal2.LimitedEditionCamoCount0:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal38, {})
		registerVal39:completeAnimation()
		registerVal2.LimitedEditionCamoCount:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal39, {})
	end

	registerVal44.DefaultClip = __FUNC_91C6_
	local function __FUNC_A167_()
		registerVal2:setupElementClipCounter(21.000000)
		registerVal3:completeAnimation()
		registerVal2.glow00:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal3, {})
		registerVal4:completeAnimation()
		registerVal2.BundleOnOpen:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal4, {})
		registerVal6:completeAnimation()
		registerVal2.smokewidget:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal6, {})
		registerVal7:completeAnimation()
		registerVal2.fxEmber2:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal7, {})
		registerVal8:completeAnimation()
		registerVal2.fxEmber:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal8, {})
		registerVal9:completeAnimation()
		registerVal2.RareOn:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal9, {})
		registerVal10:completeAnimation()
		registerVal2.CommonOn:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal10, {})
		registerVal11:completeAnimation()
		registerVal2.fxglow:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal11, {})
		registerVal12:completeAnimation()
		registerVal2.glow0:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal12, {})
		registerVal13:completeAnimation()
		registerVal2.BribeOn:setLeftRight(false, false, -80.500000, 80.500000)
		registerVal2.BribeOn:setTopBottom(true, false, -40.460000, 120.540000)
		registerVal2.BribeOn:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal13, {})
		registerVal14:completeAnimation()
		registerVal2.glowBribe:setLeftRight(false, false, -80.500000, 80.500000)
		registerVal2.glowBribe:setTopBottom(true, false, -40.460000, 120.540000)
		registerVal2.glowBribe:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal14, {})
		registerVal15:completeAnimation()
		registerVal2.BundleOn:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal15, {})
		registerVal16:completeAnimation()
		registerVal2.glowBundle:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal16, {})
		registerVal17:completeAnimation()
		registerVal2.BundleCount:setRGB(0.970000, 0.950000, 0.680000)
		registerVal2.BundleCount:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal17, {})
		registerVal24:completeAnimation()
		registerVal2.glowBundleOutline:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal24, {})
		registerVal25:completeAnimation()
		registerVal2.IncentiveRare:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal25, {})
		registerVal26:completeAnimation()
		registerVal2.IncentiveWeapon:setAlpha(1.000000)
		registerVal2.clipFinished(registerVal26, {})
		registerVal29:completeAnimation()
		registerVal2.IncentiveNumberbacker:setLeftRight(true, false, -45.000000, 123.000000)
		registerVal2.IncentiveNumberbacker:setTopBottom(true, false, 0.000000, 72.000000)
		registerVal2.IncentiveNumberbacker:setAlpha(1.000000)
		registerVal2.clipFinished(registerVal29, {})
		registerVal30:completeAnimation()
		registerVal2.WeaponIncentiveCount:setAlpha(0.750000)
		registerVal2.clipFinished(registerVal30, {})
		registerVal31:completeAnimation()
		registerVal2.WeaponIncentiveCount0:setAlpha(1.000000)
		registerVal2.clipFinished(registerVal31, {})
		registerVal33:completeAnimation()
		registerVal2.RareIncentiveCount:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal33, {})
	end

	registerVal44.Focus = __FUNC_A167_
	registerVal43.IncentiveWeapon = registerVal44
	registerVal44 = {}
	local function __FUNC_AAEF_()
		registerVal2:setupElementClipCounter(35.000000)
		registerVal3:completeAnimation()
		registerVal2.glow00:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal3, {})
		registerVal4:completeAnimation()
		registerVal2.BundleOnOpen:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal4, {})
		registerVal5:completeAnimation()
		registerVal2.SixPackCommonBundleOnOpen:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal5, {})
		registerVal6:completeAnimation()
		registerVal2.smokewidget:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal6, {})
		registerVal7:completeAnimation()
		registerVal2.fxEmber2:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal7, {})
		registerVal8:completeAnimation()
		registerVal2.fxEmber:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal8, {})
		registerVal9:completeAnimation()
		registerVal2.RareOn:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal9, {})
		registerVal10:completeAnimation()
		registerVal2.CommonOn:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal10, {})
		registerVal11:completeAnimation()
		registerVal2.fxglow:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal11, {})
		registerVal12:completeAnimation()
		registerVal2.glow0:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal12, {})
		registerVal13:completeAnimation()
		registerVal2.BribeOn:setLeftRight(false, false, -80.500000, 80.500000)
		registerVal2.BribeOn:setTopBottom(true, false, -40.460000, 120.540000)
		registerVal2.BribeOn:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal13, {})
		registerVal14:completeAnimation()
		registerVal2.glowBribe:setLeftRight(false, false, -80.500000, 80.500000)
		registerVal2.glowBribe:setTopBottom(true, false, -40.460000, 120.540000)
		registerVal2.glowBribe:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal14, {})
		registerVal15:completeAnimation()
		registerVal2.BundleOn:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal15, {})
		registerVal16:completeAnimation()
		registerVal2.glowBundle:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal16, {})
		registerVal17:completeAnimation()
		registerVal2.BundleCount:setRGB(0.970000, 0.950000, 0.680000)
		registerVal2.BundleCount:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal17, {})
		registerVal18:completeAnimation()
		registerVal2.BundleExperimentRareCount:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal18, {})
		registerVal19:completeAnimation()
		registerVal2.CodeBundleRareCount:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal19, {})
		registerVal20:completeAnimation()
		registerVal2.NoDupesRareCount:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal20, {})
		registerVal21:completeAnimation()
		registerVal2.HundredBundleCount:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal21, {})
		registerVal22:completeAnimation()
		registerVal2.DailyDoubleRareCount:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal22, {})
		registerVal23:completeAnimation()
		registerVal2.SixPackCommonCount:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal23, {})
		registerVal24:completeAnimation()
		registerVal2.glowBundleOutline:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal24, {})
		registerVal25:completeAnimation()
		registerVal2.IncentiveRare:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal25, {})
		registerVal26:completeAnimation()
		registerVal2.IncentiveWeapon:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal26, {})
		registerVal27:completeAnimation()
		registerVal2.GenericRewardImage:setAlpha(1.000000)
		registerVal2.clipFinished(registerVal27, {})
		registerVal29:completeAnimation()
		registerVal2.IncentiveNumberbacker:setLeftRight(true, false, -45.000000, 123.000000)
		registerVal2.IncentiveNumberbacker:setTopBottom(true, false, 0.000000, 72.000000)
		registerVal2.IncentiveNumberbacker:setAlpha(1.000000)
		registerVal2.clipFinished(registerVal29, {})
		registerVal30:completeAnimation()
		registerVal2.WeaponIncentiveCount:setLeftRight(true, false, -61.500000, 138.500000)
		registerVal2.WeaponIncentiveCount:setTopBottom(true, false, 19.000000, 53.000000)
		registerVal2.WeaponIncentiveCount:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal30, {})
		registerVal31:completeAnimation()
		registerVal2.WeaponIncentiveCount0:setLeftRight(true, false, -61.500000, 138.500000)
		registerVal2.WeaponIncentiveCount0:setTopBottom(true, false, 18.000000, 52.000000)
		registerVal2.WeaponIncentiveCount0:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal31, {})
		registerVal33:completeAnimation()
		registerVal2.RareIncentiveCount:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal33, {})
		registerVal34:completeAnimation()
		registerVal2.GenericRewardCount0:setAlpha(0.750000)
		registerVal2.clipFinished(registerVal34, {})
		registerVal35:completeAnimation()
		registerVal2.GenericRewardCount:setAlpha(1.000000)
		registerVal2.clipFinished(registerVal35, {})
		registerVal36:completeAnimation()
		registerVal2.WeaponBribe3Count0:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal36, {})
		registerVal37:completeAnimation()
		registerVal2.WeaponBribe3Count:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal37, {})
		registerVal38:completeAnimation()
		registerVal2.LimitedEditionCamoCount0:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal38, {})
		registerVal39:completeAnimation()
		registerVal2.LimitedEditionCamoCount:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal39, {})
	end

	registerVal44.DefaultClip = __FUNC_AAEF_
	local function __FUNC_BA8F_()
		registerVal2:setupElementClipCounter(24.000000)
		registerVal3:completeAnimation()
		registerVal2.glow00:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal3, {})
		registerVal4:completeAnimation()
		registerVal2.BundleOnOpen:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal4, {})
		registerVal6:completeAnimation()
		registerVal2.smokewidget:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal6, {})
		registerVal7:completeAnimation()
		registerVal2.fxEmber2:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal7, {})
		registerVal8:completeAnimation()
		registerVal2.fxEmber:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal8, {})
		registerVal9:completeAnimation()
		registerVal2.RareOn:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal9, {})
		registerVal10:completeAnimation()
		registerVal2.CommonOn:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal10, {})
		registerVal11:completeAnimation()
		registerVal2.fxglow:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal11, {})
		registerVal12:completeAnimation()
		registerVal2.glow0:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal12, {})
		registerVal13:completeAnimation()
		registerVal2.BribeOn:setLeftRight(false, false, -80.500000, 80.500000)
		registerVal2.BribeOn:setTopBottom(true, false, -40.460000, 120.540000)
		registerVal2.BribeOn:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal13, {})
		registerVal14:completeAnimation()
		registerVal2.glowBribe:setLeftRight(false, false, -80.500000, 80.500000)
		registerVal2.glowBribe:setTopBottom(true, false, -40.460000, 120.540000)
		registerVal2.glowBribe:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal14, {})
		registerVal15:completeAnimation()
		registerVal2.BundleOn:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal15, {})
		registerVal16:completeAnimation()
		registerVal2.glowBundle:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal16, {})
		registerVal17:completeAnimation()
		registerVal2.BundleCount:setRGB(0.970000, 0.950000, 0.680000)
		registerVal2.BundleCount:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal17, {})
		registerVal24:completeAnimation()
		registerVal2.glowBundleOutline:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal24, {})
		registerVal25:completeAnimation()
		registerVal2.IncentiveRare:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal25, {})
		registerVal26:completeAnimation()
		registerVal2.IncentiveWeapon:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal26, {})
		registerVal27:completeAnimation()
		registerVal2.GenericRewardImage:setAlpha(1.000000)
		registerVal2.clipFinished(registerVal27, {})
		registerVal29:completeAnimation()
		registerVal2.IncentiveNumberbacker:setLeftRight(true, false, -45.000000, 123.000000)
		registerVal2.IncentiveNumberbacker:setTopBottom(true, false, 0.000000, 72.000000)
		registerVal2.IncentiveNumberbacker:setAlpha(1.000000)
		registerVal2.clipFinished(registerVal29, {})
		registerVal30:completeAnimation()
		registerVal2.WeaponIncentiveCount:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal30, {})
		registerVal31:completeAnimation()
		registerVal2.WeaponIncentiveCount0:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal31, {})
		registerVal33:completeAnimation()
		registerVal2.RareIncentiveCount:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal33, {})
		registerVal34:completeAnimation()
		registerVal2.GenericRewardCount0:setAlpha(0.750000)
		registerVal2.clipFinished(registerVal34, {})
		registerVal35:completeAnimation()
		registerVal2.GenericRewardCount:setAlpha(1.000000)
		registerVal2.clipFinished(registerVal35, {})
	end

	registerVal44.Focus = __FUNC_BA8F_
	registerVal43.GenericReward = registerVal44
	registerVal44 = {}
	local function __FUNC_C538_()
		registerVal2:setupElementClipCounter(29.000000)
		registerVal3:completeAnimation()
		registerVal2.glow00:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal3, {})
		registerVal4:completeAnimation()
		registerVal2.BundleOnOpen:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal4, {})
		registerVal5:completeAnimation()
		registerVal2.SixPackCommonBundleOnOpen:setAlpha(1.000000)
		registerVal2.clipFinished(registerVal5, {})
		registerVal6:completeAnimation()
		registerVal2.smokewidget:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal6, {})
		registerVal7:completeAnimation()
		registerVal2.fxEmber2:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal7, {})
		registerVal8:completeAnimation()
		registerVal2.fxEmber:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal8, {})
		registerVal9:completeAnimation()
		registerVal2.RareOn:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal9, {})
		registerVal10:completeAnimation()
		registerVal2.CommonOn:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal10, {})
		registerVal11:completeAnimation()
		registerVal2.fxglow:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal11, {})
		registerVal12:completeAnimation()
		registerVal2.glow0:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal12, {})
		registerVal13:completeAnimation()
		registerVal2.BribeOn:setLeftRight(false, false, -80.500000, 80.500000)
		registerVal2.BribeOn:setTopBottom(true, false, -40.460000, 120.540000)
		registerVal2.BribeOn:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal13, {})
		registerVal14:completeAnimation()
		registerVal2.glowBribe:setLeftRight(false, false, -80.500000, 80.500000)
		registerVal2.glowBribe:setTopBottom(true, false, -40.460000, 120.540000)
		registerVal2.glowBribe:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal14, {})
		registerVal15:completeAnimation()
		registerVal2.BundleOn:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal15, {})
		registerVal16:completeAnimation()
		registerVal2.glowBundle:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal16, {})
		registerVal17:completeAnimation()
		registerVal2.BundleCount:setRGB(0.970000, 0.950000, 0.680000)
		registerVal2.BundleCount:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal17, {})
		registerVal18:completeAnimation()
		registerVal2.BundleExperimentRareCount:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal18, {})
		registerVal19:completeAnimation()
		registerVal2.CodeBundleRareCount:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal19, {})
		registerVal20:completeAnimation()
		registerVal2.NoDupesRareCount:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal20, {})
		registerVal21:completeAnimation()
		registerVal2.HundredBundleCount:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal21, {})
		registerVal22:completeAnimation()
		registerVal2.DailyDoubleRareCount:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal22, {})
		registerVal23:completeAnimation()
		registerVal2.SixPackCommonCount:setAlpha(1.000000)
		registerVal2.clipFinished(registerVal23, {})
		registerVal24:completeAnimation()
		registerVal2.glowBundleOutline:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal24, {})
		registerVal27:completeAnimation()
		registerVal2.GenericRewardImage:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal27, {})
		registerVal34:completeAnimation()
		registerVal2.GenericRewardCount0:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal34, {})
		registerVal35:completeAnimation()
		registerVal2.GenericRewardCount:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal35, {})
		registerVal36:completeAnimation()
		registerVal2.WeaponBribe3Count0:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal36, {})
		registerVal37:completeAnimation()
		registerVal2.WeaponBribe3Count:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal37, {})
		registerVal38:completeAnimation()
		registerVal2.LimitedEditionCamoCount0:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal38, {})
		registerVal39:completeAnimation()
		registerVal2.LimitedEditionCamoCount:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal39, {})
	end

	registerVal44.DefaultClip = __FUNC_C538_
	local function __FUNC_D179_()
		registerVal2:setupElementClipCounter(14.000000)
		registerVal3:completeAnimation()
		registerVal2.glow00:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal3, {})
		registerVal4:completeAnimation()
		registerVal2.BundleOnOpen:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal4, {})
		registerVal5:completeAnimation()
		registerVal2.SixPackCommonBundleOnOpen:setAlpha(1.000000)
		registerVal2.clipFinished(registerVal5, {})
		registerVal6:completeAnimation()
		registerVal2.smokewidget:setLeftRight(true, false, -43.250000, 126.350000)
		registerVal2.smokewidget:setTopBottom(true, false, -69.960000, 108.540000)
		registerVal2.smokewidget:setRGB(1.000000, 1.000000, 1.000000)
		registerVal2.smokewidget:setAlpha(1.000000)
		registerVal2.clipFinished(registerVal6, {})
		registerVal7:completeAnimation()
		registerVal2.fxEmber2:setLeftRight(true, false, -30.450000, 113.550000)
		registerVal2.fxEmber2:setTopBottom(true, false, -54.960000, 125.040000)
		registerVal2.fxEmber2:setRGB(1.000000, 1.000000, 1.000000)
		registerVal2.fxEmber2:setAlpha(1.000000)
		registerVal2.clipFinished(registerVal7, {})
		registerVal8:completeAnimation()
		registerVal2.fxEmber:setLeftRight(true, false, -34.250000, 117.350000)
		registerVal2.fxEmber:setTopBottom(true, false, -42.460000, 147.040000)
		registerVal2.fxEmber:setRGB(1.000000, 1.000000, 1.000000)
		registerVal2.fxEmber:setAlpha(1.000000)
		registerVal2.clipFinished(registerVal8, {})
		registerVal9:completeAnimation()
		registerVal2.RareOn:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal9, {})
		registerVal10:completeAnimation()
		registerVal2.CommonOn:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal10, {})
		registerVal12:completeAnimation()
		registerVal2.glow0:setRGB(0.220000, 0.930000, 0.930000)
		registerVal2.glow0:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal12, {})
		registerVal13:completeAnimation()
		registerVal2.BribeOn:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal13, {})
		registerVal14:completeAnimation()
		registerVal2.glowBribe:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal14, {})
		registerVal16:completeAnimation()
		registerVal2.glowBundle:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal16, {})
		local function __FUNC_D94C_(arg0, arg1)
			local function __FUNC_DAC7_(arg0, arg1)
				if not arg1.interrupted then
					arg0:beginAnimation("keyframe", 809.000000, false, false, CoD.TweenType.Linear)
				end
				arg0:setAlpha(0.800000)
				if arg1.interrupted then
					registerVal2.clipFinished(arg0, arg1)
				else
					arg0:registerEventHandler("transition_complete_keyframe", registerVal2.clipFinished)
				end
			end

			if arg1.interrupted then
				__FUNC_DAC7_(arg0, arg1)
				return 
			end
			arg0:beginAnimation("keyframe", 740.000000, false, false, CoD.TweenType.Linear)
			arg0:setAlpha(1.000000)
			arg0:registerEventHandler("transition_complete_keyframe", __FUNC_DAC7_)
		end

		registerVal23:completeAnimation()
		registerVal2.SixPackCommonCount:setAlpha(0.800000)
		__FUNC_D94C_(registerVal23, {})
		local function __FUNC_DC79_(arg0, arg1)
			local function __FUNC_DDD0_(arg0, arg1)
				if not arg1.interrupted then
					arg0:beginAnimation("keyframe", 809.000000, false, false, CoD.TweenType.Linear)
				end
				arg0:setRGB(1.000000, 1.000000, 1.000000)
				arg0:setAlpha(0.000000)
				if arg1.interrupted then
					registerVal2.clipFinished(arg0, arg1)
				else
					arg0:registerEventHandler("transition_complete_keyframe", registerVal2.clipFinished)
				end
			end

			if arg1.interrupted then
				__FUNC_DDD0_(arg0, arg1)
				return 
			end
			arg0:beginAnimation("keyframe", 740.000000, false, false, CoD.TweenType.Linear)
			arg0:registerEventHandler("transition_complete_keyframe", __FUNC_DDD0_)
		end

		registerVal24:completeAnimation()
		registerVal2.glowBundleOutline:setRGB(1.000000, 1.000000, 1.000000)
		registerVal2.glowBundleOutline:setAlpha(0.000000)
		__FUNC_DC79_(registerVal24, {})
		registerVal2.nextClip = "Focus"
	end

	registerVal44.Focus = __FUNC_D179_
	registerVal43.SixPackCommonBundle = registerVal44
	registerVal44 = {}
	local function __FUNC_DFAE_()
		registerVal2:setupElementClipCounter(29.000000)
		registerVal3:completeAnimation()
		registerVal2.glow00:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal3, {})
		registerVal4:completeAnimation()
		registerVal2.BundleOnOpen:setAlpha(1.000000)
		registerVal2.clipFinished(registerVal4, {})
		registerVal5:completeAnimation()
		registerVal2.SixPackCommonBundleOnOpen:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal5, {})
		registerVal6:completeAnimation()
		registerVal2.smokewidget:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal6, {})
		registerVal7:completeAnimation()
		registerVal2.fxEmber2:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal7, {})
		registerVal8:completeAnimation()
		registerVal2.fxEmber:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal8, {})
		registerVal9:completeAnimation()
		registerVal2.RareOn:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal9, {})
		registerVal10:completeAnimation()
		registerVal2.CommonOn:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal10, {})
		registerVal11:completeAnimation()
		registerVal2.fxglow:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal11, {})
		registerVal12:completeAnimation()
		registerVal2.glow0:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal12, {})
		registerVal13:completeAnimation()
		registerVal2.BribeOn:setLeftRight(false, false, -80.500000, 80.500000)
		registerVal2.BribeOn:setTopBottom(true, false, -40.460000, 120.540000)
		registerVal2.BribeOn:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal13, {})
		registerVal14:completeAnimation()
		registerVal2.glowBribe:setLeftRight(false, false, -80.500000, 80.500000)
		registerVal2.glowBribe:setTopBottom(true, false, -40.460000, 120.540000)
		registerVal2.glowBribe:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal14, {})
		registerVal15:completeAnimation()
		registerVal2.BundleOn:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal15, {})
		registerVal16:completeAnimation()
		registerVal2.glowBundle:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal16, {})
		registerVal17:completeAnimation()
		registerVal2.BundleCount:setRGB(0.970000, 0.950000, 0.680000)
		registerVal2.BundleCount:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal17, {})
		registerVal18:completeAnimation()
		registerVal2.BundleExperimentRareCount:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal18, {})
		registerVal19:completeAnimation()
		registerVal2.CodeBundleRareCount:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal19, {})
		registerVal20:completeAnimation()
		registerVal2.NoDupesRareCount:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal20, {})
		registerVal21:completeAnimation()
		registerVal2.HundredBundleCount:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal21, {})
		registerVal22:completeAnimation()
		registerVal2.DailyDoubleRareCount:setAlpha(1.000000)
		registerVal2.clipFinished(registerVal22, {})
		registerVal23:completeAnimation()
		registerVal2.SixPackCommonCount:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal23, {})
		registerVal24:completeAnimation()
		registerVal2.glowBundleOutline:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal24, {})
		registerVal27:completeAnimation()
		registerVal2.GenericRewardImage:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal27, {})
		registerVal34:completeAnimation()
		registerVal2.GenericRewardCount0:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal34, {})
		registerVal35:completeAnimation()
		registerVal2.GenericRewardCount:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal35, {})
		registerVal36:completeAnimation()
		registerVal2.WeaponBribe3Count0:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal36, {})
		registerVal37:completeAnimation()
		registerVal2.WeaponBribe3Count:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal37, {})
		registerVal38:completeAnimation()
		registerVal2.LimitedEditionCamoCount0:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal38, {})
		registerVal39:completeAnimation()
		registerVal2.LimitedEditionCamoCount:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal39, {})
	end

	registerVal44.DefaultClip = __FUNC_DFAE_
	local function __FUNC_EBED_()
		registerVal2:setupElementClipCounter(14.000000)
		registerVal3:completeAnimation()
		registerVal2.glow00:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal3, {})
		registerVal4:completeAnimation()
		registerVal2.BundleOnOpen:setAlpha(1.000000)
		registerVal2.clipFinished(registerVal4, {})
		registerVal6:completeAnimation()
		registerVal2.smokewidget:setLeftRight(true, false, -43.250000, 126.350000)
		registerVal2.smokewidget:setTopBottom(true, false, -69.960000, 108.540000)
		registerVal2.smokewidget:setRGB(0.220000, 0.930000, 0.930000)
		registerVal2.smokewidget:setAlpha(1.000000)
		registerVal2.clipFinished(registerVal6, {})
		registerVal7:completeAnimation()
		registerVal2.fxEmber2:setLeftRight(true, false, -30.450000, 113.550000)
		registerVal2.fxEmber2:setTopBottom(true, false, -54.960000, 125.040000)
		registerVal2.fxEmber2:setRGB(0.220000, 0.930000, 0.930000)
		registerVal2.fxEmber2:setAlpha(1.000000)
		registerVal2.clipFinished(registerVal7, {})
		registerVal8:completeAnimation()
		registerVal2.fxEmber:setLeftRight(true, false, -34.250000, 117.350000)
		registerVal2.fxEmber:setTopBottom(true, false, -42.460000, 147.040000)
		registerVal2.fxEmber:setRGB(0.220000, 0.930000, 0.930000)
		registerVal2.fxEmber:setAlpha(1.000000)
		registerVal2.clipFinished(registerVal8, {})
		registerVal9:completeAnimation()
		registerVal2.RareOn:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal9, {})
		registerVal10:completeAnimation()
		registerVal2.CommonOn:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal10, {})
		registerVal12:completeAnimation()
		registerVal2.glow0:setRGB(0.220000, 0.930000, 0.930000)
		registerVal2.glow0:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal12, {})
		registerVal13:completeAnimation()
		registerVal2.BribeOn:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal13, {})
		registerVal14:completeAnimation()
		registerVal2.glowBribe:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal14, {})
		registerVal15:completeAnimation()
		registerVal2.BundleOn:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal15, {})
		registerVal16:completeAnimation()
		registerVal2.glowBundle:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal16, {})
		local function __FUNC_F3B1_(arg0, arg1)
			local function __FUNC_F52B_(arg0, arg1)
				if not arg1.interrupted then
					arg0:beginAnimation("keyframe", 809.000000, false, false, CoD.TweenType.Linear)
				end
				arg0:setAlpha(0.800000)
				if arg1.interrupted then
					registerVal2.clipFinished(arg0, arg1)
				else
					arg0:registerEventHandler("transition_complete_keyframe", registerVal2.clipFinished)
				end
			end

			if arg1.interrupted then
				__FUNC_F52B_(arg0, arg1)
				return 
			end
			arg0:beginAnimation("keyframe", 740.000000, false, false, CoD.TweenType.Linear)
			arg0:setAlpha(1.000000)
			arg0:registerEventHandler("transition_complete_keyframe", __FUNC_F52B_)
		end

		registerVal22:completeAnimation()
		registerVal2.DailyDoubleRareCount:setAlpha(0.800000)
		__FUNC_F3B1_(registerVal22, {})
		local function __FUNC_F6DD_(arg0, arg1)
			local function __FUNC_F857_(arg0, arg1)
				if not arg1.interrupted then
					arg0:beginAnimation("keyframe", 809.000000, false, false, CoD.TweenType.Linear)
				end
				arg0:setRGB(0.220000, 0.930000, 0.930000)
				arg0:setAlpha(0.000000)
				if arg1.interrupted then
					registerVal2.clipFinished(arg0, arg1)
				else
					arg0:registerEventHandler("transition_complete_keyframe", registerVal2.clipFinished)
				end
			end

			if arg1.interrupted then
				__FUNC_F857_(arg0, arg1)
				return 
			end
			arg0:beginAnimation("keyframe", 740.000000, false, false, CoD.TweenType.Linear)
			arg0:setAlpha(1.000000)
			arg0:registerEventHandler("transition_complete_keyframe", __FUNC_F857_)
		end

		registerVal24:completeAnimation()
		registerVal2.glowBundleOutline:setRGB(0.220000, 0.930000, 0.930000)
		registerVal2.glowBundleOutline:setAlpha(0.000000)
		__FUNC_F6DD_(registerVal24, {})
		registerVal2.nextClip = "Focus"
	end

	registerVal44.Focus = __FUNC_EBED_
	registerVal43.DailyDoubleRareBundle = registerVal44
	registerVal44 = {}
	local function __FUNC_FA37_()
		registerVal2:setupElementClipCounter(29.000000)
		registerVal3:completeAnimation()
		registerVal2.glow00:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal3, {})
		registerVal4:completeAnimation()
		registerVal2.BundleOnOpen:setAlpha(1.000000)
		registerVal2.clipFinished(registerVal4, {})
		registerVal5:completeAnimation()
		registerVal2.SixPackCommonBundleOnOpen:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal5, {})
		registerVal6:completeAnimation()
		registerVal2.smokewidget:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal6, {})
		registerVal7:completeAnimation()
		registerVal2.fxEmber2:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal7, {})
		registerVal8:completeAnimation()
		registerVal2.fxEmber:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal8, {})
		registerVal9:completeAnimation()
		registerVal2.RareOn:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal9, {})
		registerVal10:completeAnimation()
		registerVal2.CommonOn:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal10, {})
		registerVal11:completeAnimation()
		registerVal2.fxglow:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal11, {})
		registerVal12:completeAnimation()
		registerVal2.glow0:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal12, {})
		registerVal13:completeAnimation()
		registerVal2.BribeOn:setLeftRight(false, false, -80.500000, 80.500000)
		registerVal2.BribeOn:setTopBottom(true, false, -40.460000, 120.540000)
		registerVal2.BribeOn:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal13, {})
		registerVal14:completeAnimation()
		registerVal2.glowBribe:setLeftRight(false, false, -80.500000, 80.500000)
		registerVal2.glowBribe:setTopBottom(true, false, -40.460000, 120.540000)
		registerVal2.glowBribe:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal14, {})
		registerVal15:completeAnimation()
		registerVal2.BundleOn:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal15, {})
		registerVal16:completeAnimation()
		registerVal2.glowBundle:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal16, {})
		registerVal17:completeAnimation()
		registerVal2.BundleCount:setRGB(0.970000, 0.950000, 0.680000)
		registerVal2.BundleCount:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal17, {})
		registerVal18:completeAnimation()
		registerVal2.BundleExperimentRareCount:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal18, {})
		registerVal19:completeAnimation()
		registerVal2.CodeBundleRareCount:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal19, {})
		registerVal20:completeAnimation()
		registerVal2.NoDupesRareCount:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal20, {})
		registerVal21:completeAnimation()
		registerVal2.HundredBundleCount:setAlpha(1.000000)
		registerVal2.clipFinished(registerVal21, {})
		registerVal22:completeAnimation()
		registerVal2.DailyDoubleRareCount:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal22, {})
		registerVal23:completeAnimation()
		registerVal2.SixPackCommonCount:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal23, {})
		registerVal24:completeAnimation()
		registerVal2.glowBundleOutline:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal24, {})
		registerVal27:completeAnimation()
		registerVal2.GenericRewardImage:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal27, {})
		registerVal34:completeAnimation()
		registerVal2.GenericRewardCount0:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal34, {})
		registerVal35:completeAnimation()
		registerVal2.GenericRewardCount:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal35, {})
		registerVal36:completeAnimation()
		registerVal2.WeaponBribe3Count0:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal36, {})
		registerVal37:completeAnimation()
		registerVal2.WeaponBribe3Count:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal37, {})
		registerVal38:completeAnimation()
		registerVal2.LimitedEditionCamoCount0:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal38, {})
		registerVal39:completeAnimation()
		registerVal2.LimitedEditionCamoCount:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal39, {})
	end

	registerVal44.DefaultClip = __FUNC_FA37_
	local function __FUNC_10675_()
		registerVal2:setupElementClipCounter(14.000000)
		registerVal3:completeAnimation()
		registerVal2.glow00:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal3, {})
		registerVal4:completeAnimation()
		registerVal2.BundleOnOpen:setAlpha(1.000000)
		registerVal2.clipFinished(registerVal4, {})
		registerVal6:completeAnimation()
		registerVal2.smokewidget:setLeftRight(true, false, -43.250000, 126.350000)
		registerVal2.smokewidget:setTopBottom(true, false, -69.960000, 108.540000)
		registerVal2.smokewidget:setRGB(0.220000, 0.930000, 0.930000)
		registerVal2.smokewidget:setAlpha(1.000000)
		registerVal2.clipFinished(registerVal6, {})
		registerVal7:completeAnimation()
		registerVal2.fxEmber2:setLeftRight(true, false, -30.450000, 113.550000)
		registerVal2.fxEmber2:setTopBottom(true, false, -54.960000, 125.040000)
		registerVal2.fxEmber2:setRGB(0.220000, 0.930000, 0.930000)
		registerVal2.fxEmber2:setAlpha(1.000000)
		registerVal2.clipFinished(registerVal7, {})
		registerVal8:completeAnimation()
		registerVal2.fxEmber:setLeftRight(true, false, -34.250000, 117.350000)
		registerVal2.fxEmber:setTopBottom(true, false, -42.460000, 147.040000)
		registerVal2.fxEmber:setRGB(0.220000, 0.930000, 0.930000)
		registerVal2.fxEmber:setAlpha(1.000000)
		registerVal2.clipFinished(registerVal8, {})
		registerVal9:completeAnimation()
		registerVal2.RareOn:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal9, {})
		registerVal10:completeAnimation()
		registerVal2.CommonOn:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal10, {})
		registerVal12:completeAnimation()
		registerVal2.glow0:setRGB(0.220000, 0.930000, 0.930000)
		registerVal2.glow0:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal12, {})
		registerVal13:completeAnimation()
		registerVal2.BribeOn:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal13, {})
		registerVal14:completeAnimation()
		registerVal2.glowBribe:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal14, {})
		registerVal15:completeAnimation()
		registerVal2.BundleOn:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal15, {})
		registerVal16:completeAnimation()
		registerVal2.glowBundle:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal16, {})
		local function __FUNC_10E37_(arg0, arg1)
			local function __FUNC_10FAF_(arg0, arg1)
				if not arg1.interrupted then
					arg0:beginAnimation("keyframe", 809.000000, false, false, CoD.TweenType.Linear)
				end
				arg0:setAlpha(0.800000)
				if arg1.interrupted then
					registerVal2.clipFinished(arg0, arg1)
				else
					arg0:registerEventHandler("transition_complete_keyframe", registerVal2.clipFinished)
				end
			end

			if arg1.interrupted then
				__FUNC_10FAF_(arg0, arg1)
				return 
			end
			arg0:beginAnimation("keyframe", 740.000000, false, false, CoD.TweenType.Linear)
			arg0:setAlpha(1.000000)
			arg0:registerEventHandler("transition_complete_keyframe", __FUNC_10FAF_)
		end

		registerVal21:completeAnimation()
		registerVal2.HundredBundleCount:setAlpha(0.800000)
		__FUNC_10E37_(registerVal21, {})
		local function __FUNC_11161_(arg0, arg1)
			local function __FUNC_112DB_(arg0, arg1)
				if not arg1.interrupted then
					arg0:beginAnimation("keyframe", 809.000000, false, false, CoD.TweenType.Linear)
				end
				arg0:setRGB(0.220000, 0.930000, 0.930000)
				arg0:setAlpha(0.000000)
				if arg1.interrupted then
					registerVal2.clipFinished(arg0, arg1)
				else
					arg0:registerEventHandler("transition_complete_keyframe", registerVal2.clipFinished)
				end
			end

			if arg1.interrupted then
				__FUNC_112DB_(arg0, arg1)
				return 
			end
			arg0:beginAnimation("keyframe", 740.000000, false, false, CoD.TweenType.Linear)
			arg0:setAlpha(1.000000)
			arg0:registerEventHandler("transition_complete_keyframe", __FUNC_112DB_)
		end

		registerVal24:completeAnimation()
		registerVal2.glowBundleOutline:setRGB(0.220000, 0.930000, 0.930000)
		registerVal2.glowBundleOutline:setAlpha(0.000000)
		__FUNC_11161_(registerVal24, {})
		registerVal2.nextClip = "Focus"
	end

	registerVal44.Focus = __FUNC_10675_
	registerVal43.HundredBundle = registerVal44
	registerVal44 = {}
	local function __FUNC_114BB_()
		registerVal2:setupElementClipCounter(29.000000)
		registerVal3:completeAnimation()
		registerVal2.glow00:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal3, {})
		registerVal4:completeAnimation()
		registerVal2.BundleOnOpen:setAlpha(1.000000)
		registerVal2.clipFinished(registerVal4, {})
		registerVal5:completeAnimation()
		registerVal2.SixPackCommonBundleOnOpen:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal5, {})
		registerVal6:completeAnimation()
		registerVal2.smokewidget:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal6, {})
		registerVal7:completeAnimation()
		registerVal2.fxEmber2:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal7, {})
		registerVal8:completeAnimation()
		registerVal2.fxEmber:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal8, {})
		registerVal9:completeAnimation()
		registerVal2.RareOn:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal9, {})
		registerVal10:completeAnimation()
		registerVal2.CommonOn:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal10, {})
		registerVal11:completeAnimation()
		registerVal2.fxglow:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal11, {})
		registerVal12:completeAnimation()
		registerVal2.glow0:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal12, {})
		registerVal13:completeAnimation()
		registerVal2.BribeOn:setLeftRight(false, false, -80.500000, 80.500000)
		registerVal2.BribeOn:setTopBottom(true, false, -40.460000, 120.540000)
		registerVal2.BribeOn:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal13, {})
		registerVal14:completeAnimation()
		registerVal2.glowBribe:setLeftRight(false, false, -80.500000, 80.500000)
		registerVal2.glowBribe:setTopBottom(true, false, -40.460000, 120.540000)
		registerVal2.glowBribe:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal14, {})
		registerVal15:completeAnimation()
		registerVal2.BundleOn:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal15, {})
		registerVal16:completeAnimation()
		registerVal2.glowBundle:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal16, {})
		registerVal17:completeAnimation()
		registerVal2.BundleCount:setRGB(0.970000, 0.950000, 0.680000)
		registerVal2.BundleCount:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal17, {})
		registerVal18:completeAnimation()
		registerVal2.BundleExperimentRareCount:setAlpha(1.000000)
		registerVal2.clipFinished(registerVal18, {})
		registerVal19:completeAnimation()
		registerVal2.CodeBundleRareCount:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal19, {})
		registerVal20:completeAnimation()
		registerVal2.NoDupesRareCount:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal20, {})
		registerVal21:completeAnimation()
		registerVal2.HundredBundleCount:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal21, {})
		registerVal22:completeAnimation()
		registerVal2.DailyDoubleRareCount:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal22, {})
		registerVal23:completeAnimation()
		registerVal2.SixPackCommonCount:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal23, {})
		registerVal24:completeAnimation()
		registerVal2.glowBundleOutline:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal24, {})
		registerVal27:completeAnimation()
		registerVal2.GenericRewardImage:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal27, {})
		registerVal34:completeAnimation()
		registerVal2.GenericRewardCount0:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal34, {})
		registerVal35:completeAnimation()
		registerVal2.GenericRewardCount:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal35, {})
		registerVal36:completeAnimation()
		registerVal2.WeaponBribe3Count0:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal36, {})
		registerVal37:completeAnimation()
		registerVal2.WeaponBribe3Count:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal37, {})
		registerVal38:completeAnimation()
		registerVal2.LimitedEditionCamoCount0:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal38, {})
		registerVal39:completeAnimation()
		registerVal2.LimitedEditionCamoCount:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal39, {})
	end

	registerVal44.DefaultClip = __FUNC_114BB_
	local function __FUNC_120F9_()
		registerVal2:setupElementClipCounter(15.000000)
		registerVal3:completeAnimation()
		registerVal2.glow00:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal3, {})
		registerVal4:completeAnimation()
		registerVal2.BundleOnOpen:setAlpha(1.000000)
		registerVal2.clipFinished(registerVal4, {})
		registerVal6:completeAnimation()
		registerVal2.smokewidget:setLeftRight(true, false, -43.250000, 126.350000)
		registerVal2.smokewidget:setTopBottom(true, false, -69.960000, 108.540000)
		registerVal2.smokewidget:setRGB(0.220000, 0.930000, 0.930000)
		registerVal2.smokewidget:setAlpha(1.000000)
		registerVal2.clipFinished(registerVal6, {})
		registerVal7:completeAnimation()
		registerVal2.fxEmber2:setLeftRight(true, false, -30.450000, 113.550000)
		registerVal2.fxEmber2:setTopBottom(true, false, -54.960000, 125.040000)
		registerVal2.fxEmber2:setRGB(0.220000, 0.930000, 0.930000)
		registerVal2.fxEmber2:setAlpha(1.000000)
		registerVal2.clipFinished(registerVal7, {})
		registerVal8:completeAnimation()
		registerVal2.fxEmber:setLeftRight(true, false, -34.250000, 117.350000)
		registerVal2.fxEmber:setTopBottom(true, false, -42.460000, 147.040000)
		registerVal2.fxEmber:setRGB(0.220000, 0.930000, 0.930000)
		registerVal2.fxEmber:setAlpha(1.000000)
		registerVal2.clipFinished(registerVal8, {})
		registerVal9:completeAnimation()
		registerVal2.RareOn:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal9, {})
		registerVal10:completeAnimation()
		registerVal2.CommonOn:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal10, {})
		registerVal12:completeAnimation()
		registerVal2.glow0:setRGB(0.220000, 0.930000, 0.930000)
		registerVal2.glow0:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal12, {})
		registerVal13:completeAnimation()
		registerVal2.BribeOn:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal13, {})
		registerVal14:completeAnimation()
		registerVal2.glowBribe:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal14, {})
		registerVal15:completeAnimation()
		registerVal2.BundleOn:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal15, {})
		registerVal16:completeAnimation()
		registerVal2.glowBundle:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal16, {})
		local function __FUNC_12924_(arg0, arg1)
			local function __FUNC_12A9F_(arg0, arg1)
				if not arg1.interrupted then
					arg0:beginAnimation("keyframe", 809.000000, false, false, CoD.TweenType.Linear)
				end
				arg0:setAlpha(0.800000)
				if arg1.interrupted then
					registerVal2.clipFinished(arg0, arg1)
				else
					arg0:registerEventHandler("transition_complete_keyframe", registerVal2.clipFinished)
				end
			end

			if arg1.interrupted then
				__FUNC_12A9F_(arg0, arg1)
				return 
			end
			arg0:beginAnimation("keyframe", 740.000000, false, false, CoD.TweenType.Linear)
			arg0:setAlpha(1.000000)
			arg0:registerEventHandler("transition_complete_keyframe", __FUNC_12A9F_)
		end

		registerVal18:completeAnimation()
		registerVal2.BundleExperimentRareCount:setAlpha(0.800000)
		__FUNC_12924_(registerVal18, {})
		registerVal22:completeAnimation()
		registerVal2.DailyDoubleRareCount:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal22, {})
		local function __FUNC_12C51_(arg0, arg1)
			local function __FUNC_12DCB_(arg0, arg1)
				if not arg1.interrupted then
					arg0:beginAnimation("keyframe", 809.000000, false, false, CoD.TweenType.Linear)
				end
				arg0:setRGB(0.220000, 0.930000, 0.930000)
				arg0:setAlpha(0.000000)
				if arg1.interrupted then
					registerVal2.clipFinished(arg0, arg1)
				else
					arg0:registerEventHandler("transition_complete_keyframe", registerVal2.clipFinished)
				end
			end

			if arg1.interrupted then
				__FUNC_12DCB_(arg0, arg1)
				return 
			end
			arg0:beginAnimation("keyframe", 740.000000, false, false, CoD.TweenType.Linear)
			arg0:setAlpha(1.000000)
			arg0:registerEventHandler("transition_complete_keyframe", __FUNC_12DCB_)
		end

		registerVal24:completeAnimation()
		registerVal2.glowBundleOutline:setRGB(0.220000, 0.930000, 0.930000)
		registerVal2.glowBundleOutline:setAlpha(0.000000)
		__FUNC_12C51_(registerVal24, {})
		registerVal2.nextClip = "Focus"
	end

	registerVal44.Focus = __FUNC_120F9_
	registerVal43.BundleExperimentRareBundle = registerVal44
	registerVal44 = {}
	local function __FUNC_12FAB_()
		registerVal2:setupElementClipCounter(29.000000)
		registerVal3:completeAnimation()
		registerVal2.glow00:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal3, {})
		registerVal4:completeAnimation()
		registerVal2.BundleOnOpen:setAlpha(1.000000)
		registerVal2.clipFinished(registerVal4, {})
		registerVal5:completeAnimation()
		registerVal2.SixPackCommonBundleOnOpen:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal5, {})
		registerVal6:completeAnimation()
		registerVal2.smokewidget:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal6, {})
		registerVal7:completeAnimation()
		registerVal2.fxEmber2:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal7, {})
		registerVal8:completeAnimation()
		registerVal2.fxEmber:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal8, {})
		registerVal9:completeAnimation()
		registerVal2.RareOn:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal9, {})
		registerVal10:completeAnimation()
		registerVal2.CommonOn:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal10, {})
		registerVal11:completeAnimation()
		registerVal2.fxglow:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal11, {})
		registerVal12:completeAnimation()
		registerVal2.glow0:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal12, {})
		registerVal13:completeAnimation()
		registerVal2.BribeOn:setLeftRight(false, false, -80.500000, 80.500000)
		registerVal2.BribeOn:setTopBottom(true, false, -40.460000, 120.540000)
		registerVal2.BribeOn:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal13, {})
		registerVal14:completeAnimation()
		registerVal2.glowBribe:setLeftRight(false, false, -80.500000, 80.500000)
		registerVal2.glowBribe:setTopBottom(true, false, -40.460000, 120.540000)
		registerVal2.glowBribe:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal14, {})
		registerVal15:completeAnimation()
		registerVal2.BundleOn:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal15, {})
		registerVal16:completeAnimation()
		registerVal2.glowBundle:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal16, {})
		registerVal17:completeAnimation()
		registerVal2.BundleCount:setRGB(0.970000, 0.950000, 0.680000)
		registerVal2.BundleCount:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal17, {})
		registerVal18:completeAnimation()
		registerVal2.BundleExperimentRareCount:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal18, {})
		registerVal19:completeAnimation()
		registerVal2.CodeBundleRareCount:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal19, {})
		registerVal20:completeAnimation()
		registerVal2.NoDupesRareCount:setAlpha(1.000000)
		registerVal2.clipFinished(registerVal20, {})
		registerVal21:completeAnimation()
		registerVal2.HundredBundleCount:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal21, {})
		registerVal22:completeAnimation()
		registerVal2.DailyDoubleRareCount:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal22, {})
		registerVal23:completeAnimation()
		registerVal2.SixPackCommonCount:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal23, {})
		registerVal24:completeAnimation()
		registerVal2.glowBundleOutline:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal24, {})
		registerVal27:completeAnimation()
		registerVal2.GenericRewardImage:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal27, {})
		registerVal34:completeAnimation()
		registerVal2.GenericRewardCount0:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal34, {})
		registerVal35:completeAnimation()
		registerVal2.GenericRewardCount:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal35, {})
		registerVal36:completeAnimation()
		registerVal2.WeaponBribe3Count0:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal36, {})
		registerVal37:completeAnimation()
		registerVal2.WeaponBribe3Count:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal37, {})
		registerVal38:completeAnimation()
		registerVal2.LimitedEditionCamoCount0:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal38, {})
		registerVal39:completeAnimation()
		registerVal2.LimitedEditionCamoCount:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal39, {})
	end

	registerVal44.DefaultClip = __FUNC_12FAB_
	local function __FUNC_13BE9_()
		registerVal2:setupElementClipCounter(15.000000)
		registerVal3:completeAnimation()
		registerVal2.glow00:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal3, {})
		registerVal4:completeAnimation()
		registerVal2.BundleOnOpen:setAlpha(1.000000)
		registerVal2.clipFinished(registerVal4, {})
		registerVal6:completeAnimation()
		registerVal2.smokewidget:setLeftRight(true, false, -43.250000, 126.350000)
		registerVal2.smokewidget:setTopBottom(true, false, -69.960000, 108.540000)
		registerVal2.smokewidget:setRGB(0.220000, 0.930000, 0.930000)
		registerVal2.smokewidget:setAlpha(1.000000)
		registerVal2.clipFinished(registerVal6, {})
		registerVal7:completeAnimation()
		registerVal2.fxEmber2:setLeftRight(true, false, -30.450000, 113.550000)
		registerVal2.fxEmber2:setTopBottom(true, false, -54.960000, 125.040000)
		registerVal2.fxEmber2:setRGB(0.220000, 0.930000, 0.930000)
		registerVal2.fxEmber2:setAlpha(1.000000)
		registerVal2.clipFinished(registerVal7, {})
		registerVal8:completeAnimation()
		registerVal2.fxEmber:setLeftRight(true, false, -34.250000, 117.350000)
		registerVal2.fxEmber:setTopBottom(true, false, -42.460000, 147.040000)
		registerVal2.fxEmber:setRGB(0.220000, 0.930000, 0.930000)
		registerVal2.fxEmber:setAlpha(1.000000)
		registerVal2.clipFinished(registerVal8, {})
		registerVal9:completeAnimation()
		registerVal2.RareOn:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal9, {})
		registerVal10:completeAnimation()
		registerVal2.CommonOn:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal10, {})
		registerVal12:completeAnimation()
		registerVal2.glow0:setRGB(0.220000, 0.930000, 0.930000)
		registerVal2.glow0:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal12, {})
		registerVal13:completeAnimation()
		registerVal2.BribeOn:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal13, {})
		registerVal14:completeAnimation()
		registerVal2.glowBribe:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal14, {})
		registerVal15:completeAnimation()
		registerVal2.BundleOn:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal15, {})
		registerVal16:completeAnimation()
		registerVal2.glowBundle:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal16, {})
		local function __FUNC_1440B_(arg0, arg1)
			local function __FUNC_14583_(arg0, arg1)
				if not arg1.interrupted then
					arg0:beginAnimation("keyframe", 809.000000, false, false, CoD.TweenType.Linear)
				end
				arg0:setAlpha(0.800000)
				if arg1.interrupted then
					registerVal2.clipFinished(arg0, arg1)
				else
					arg0:registerEventHandler("transition_complete_keyframe", registerVal2.clipFinished)
				end
			end

			if arg1.interrupted then
				__FUNC_14583_(arg0, arg1)
				return 
			end
			arg0:beginAnimation("keyframe", 740.000000, false, false, CoD.TweenType.Linear)
			arg0:setAlpha(1.000000)
			arg0:registerEventHandler("transition_complete_keyframe", __FUNC_14583_)
		end

		registerVal20:completeAnimation()
		registerVal2.NoDupesRareCount:setAlpha(0.800000)
		__FUNC_1440B_(registerVal20, {})
		registerVal22:completeAnimation()
		registerVal2.DailyDoubleRareCount:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal22, {})
		local function __FUNC_14735_(arg0, arg1)
			local function __FUNC_148AF_(arg0, arg1)
				if not arg1.interrupted then
					arg0:beginAnimation("keyframe", 809.000000, false, false, CoD.TweenType.Linear)
				end
				arg0:setRGB(0.220000, 0.930000, 0.930000)
				arg0:setAlpha(0.000000)
				if arg1.interrupted then
					registerVal2.clipFinished(arg0, arg1)
				else
					arg0:registerEventHandler("transition_complete_keyframe", registerVal2.clipFinished)
				end
			end

			if arg1.interrupted then
				__FUNC_148AF_(arg0, arg1)
				return 
			end
			arg0:beginAnimation("keyframe", 740.000000, false, false, CoD.TweenType.Linear)
			arg0:setAlpha(1.000000)
			arg0:registerEventHandler("transition_complete_keyframe", __FUNC_148AF_)
		end

		registerVal24:completeAnimation()
		registerVal2.glowBundleOutline:setRGB(0.220000, 0.930000, 0.930000)
		registerVal2.glowBundleOutline:setAlpha(0.000000)
		__FUNC_14735_(registerVal24, {})
		registerVal2.nextClip = "Focus"
	end

	registerVal44.Focus = __FUNC_13BE9_
	registerVal43.NoDupesRareBundle = registerVal44
	registerVal44 = {}
	local function __FUNC_14A8F_()
		registerVal2:setupElementClipCounter(29.000000)
		registerVal3:completeAnimation()
		registerVal2.glow00:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal3, {})
		registerVal4:completeAnimation()
		registerVal2.BundleOnOpen:setAlpha(1.000000)
		registerVal2.clipFinished(registerVal4, {})
		registerVal5:completeAnimation()
		registerVal2.SixPackCommonBundleOnOpen:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal5, {})
		registerVal6:completeAnimation()
		registerVal2.smokewidget:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal6, {})
		registerVal7:completeAnimation()
		registerVal2.fxEmber2:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal7, {})
		registerVal8:completeAnimation()
		registerVal2.fxEmber:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal8, {})
		registerVal9:completeAnimation()
		registerVal2.RareOn:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal9, {})
		registerVal10:completeAnimation()
		registerVal2.CommonOn:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal10, {})
		registerVal11:completeAnimation()
		registerVal2.fxglow:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal11, {})
		registerVal12:completeAnimation()
		registerVal2.glow0:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal12, {})
		registerVal13:completeAnimation()
		registerVal2.BribeOn:setLeftRight(false, false, -80.500000, 80.500000)
		registerVal2.BribeOn:setTopBottom(true, false, -40.460000, 120.540000)
		registerVal2.BribeOn:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal13, {})
		registerVal14:completeAnimation()
		registerVal2.glowBribe:setLeftRight(false, false, -80.500000, 80.500000)
		registerVal2.glowBribe:setTopBottom(true, false, -40.460000, 120.540000)
		registerVal2.glowBribe:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal14, {})
		registerVal15:completeAnimation()
		registerVal2.BundleOn:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal15, {})
		registerVal16:completeAnimation()
		registerVal2.glowBundle:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal16, {})
		registerVal17:completeAnimation()
		registerVal2.BundleCount:setRGB(0.970000, 0.950000, 0.680000)
		registerVal2.BundleCount:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal17, {})
		registerVal18:completeAnimation()
		registerVal2.BundleExperimentRareCount:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal18, {})
		registerVal19:completeAnimation()
		registerVal2.CodeBundleRareCount:setAlpha(1.000000)
		registerVal2.clipFinished(registerVal19, {})
		registerVal20:completeAnimation()
		registerVal2.NoDupesRareCount:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal20, {})
		registerVal21:completeAnimation()
		registerVal2.HundredBundleCount:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal21, {})
		registerVal22:completeAnimation()
		registerVal2.DailyDoubleRareCount:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal22, {})
		registerVal23:completeAnimation()
		registerVal2.SixPackCommonCount:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal23, {})
		registerVal24:completeAnimation()
		registerVal2.glowBundleOutline:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal24, {})
		registerVal27:completeAnimation()
		registerVal2.GenericRewardImage:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal27, {})
		registerVal34:completeAnimation()
		registerVal2.GenericRewardCount0:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal34, {})
		registerVal35:completeAnimation()
		registerVal2.GenericRewardCount:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal35, {})
		registerVal36:completeAnimation()
		registerVal2.WeaponBribe3Count0:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal36, {})
		registerVal37:completeAnimation()
		registerVal2.WeaponBribe3Count:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal37, {})
		registerVal38:completeAnimation()
		registerVal2.LimitedEditionCamoCount0:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal38, {})
		registerVal39:completeAnimation()
		registerVal2.LimitedEditionCamoCount:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal39, {})
	end

	registerVal44.DefaultClip = __FUNC_14A8F_
	local function __FUNC_156CD_()
		registerVal2:setupElementClipCounter(16.000000)
		registerVal3:completeAnimation()
		registerVal2.glow00:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal3, {})
		registerVal4:completeAnimation()
		registerVal2.BundleOnOpen:setAlpha(1.000000)
		registerVal2.clipFinished(registerVal4, {})
		registerVal6:completeAnimation()
		registerVal2.smokewidget:setLeftRight(true, false, -43.250000, 126.350000)
		registerVal2.smokewidget:setTopBottom(true, false, -69.960000, 108.540000)
		registerVal2.smokewidget:setRGB(0.220000, 0.930000, 0.930000)
		registerVal2.smokewidget:setAlpha(1.000000)
		registerVal2.clipFinished(registerVal6, {})
		registerVal7:completeAnimation()
		registerVal2.fxEmber2:setLeftRight(true, false, -30.450000, 113.550000)
		registerVal2.fxEmber2:setTopBottom(true, false, -54.960000, 125.040000)
		registerVal2.fxEmber2:setRGB(0.220000, 0.930000, 0.930000)
		registerVal2.fxEmber2:setAlpha(1.000000)
		registerVal2.clipFinished(registerVal7, {})
		registerVal8:completeAnimation()
		registerVal2.fxEmber:setLeftRight(true, false, -34.250000, 117.350000)
		registerVal2.fxEmber:setTopBottom(true, false, -42.460000, 147.040000)
		registerVal2.fxEmber:setRGB(0.220000, 0.930000, 0.930000)
		registerVal2.fxEmber:setAlpha(1.000000)
		registerVal2.clipFinished(registerVal8, {})
		registerVal9:completeAnimation()
		registerVal2.RareOn:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal9, {})
		registerVal10:completeAnimation()
		registerVal2.CommonOn:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal10, {})
		registerVal12:completeAnimation()
		registerVal2.glow0:setRGB(0.220000, 0.930000, 0.930000)
		registerVal2.glow0:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal12, {})
		registerVal13:completeAnimation()
		registerVal2.BribeOn:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal13, {})
		registerVal14:completeAnimation()
		registerVal2.glowBribe:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal14, {})
		registerVal15:completeAnimation()
		registerVal2.BundleOn:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal15, {})
		registerVal16:completeAnimation()
		registerVal2.glowBundle:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal16, {})
		registerVal18:completeAnimation()
		registerVal2.BundleExperimentRareCount:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal18, {})
		local function __FUNC_15F59_(arg0, arg1)
			local function __FUNC_160D3_(arg0, arg1)
				if not arg1.interrupted then
					arg0:beginAnimation("keyframe", 809.000000, false, false, CoD.TweenType.Linear)
				end
				arg0:setAlpha(0.800000)
				if arg1.interrupted then
					registerVal2.clipFinished(arg0, arg1)
				else
					arg0:registerEventHandler("transition_complete_keyframe", registerVal2.clipFinished)
				end
			end

			if arg1.interrupted then
				__FUNC_160D3_(arg0, arg1)
				return 
			end
			arg0:beginAnimation("keyframe", 740.000000, false, false, CoD.TweenType.Linear)
			arg0:setAlpha(1.000000)
			arg0:registerEventHandler("transition_complete_keyframe", __FUNC_160D3_)
		end

		registerVal19:completeAnimation()
		registerVal2.CodeBundleRareCount:setAlpha(0.800000)
		__FUNC_15F59_(registerVal19, {})
		registerVal22:completeAnimation()
		registerVal2.DailyDoubleRareCount:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal22, {})
		local function __FUNC_16285_(arg0, arg1)
			local function __FUNC_163FF_(arg0, arg1)
				if not arg1.interrupted then
					arg0:beginAnimation("keyframe", 809.000000, false, false, CoD.TweenType.Linear)
				end
				arg0:setRGB(0.220000, 0.930000, 0.930000)
				arg0:setAlpha(0.000000)
				if arg1.interrupted then
					registerVal2.clipFinished(arg0, arg1)
				else
					arg0:registerEventHandler("transition_complete_keyframe", registerVal2.clipFinished)
				end
			end

			if arg1.interrupted then
				__FUNC_163FF_(arg0, arg1)
				return 
			end
			arg0:beginAnimation("keyframe", 740.000000, false, false, CoD.TweenType.Linear)
			arg0:setAlpha(1.000000)
			arg0:registerEventHandler("transition_complete_keyframe", __FUNC_163FF_)
		end

		registerVal24:completeAnimation()
		registerVal2.glowBundleOutline:setRGB(0.220000, 0.930000, 0.930000)
		registerVal2.glowBundleOutline:setAlpha(0.000000)
		__FUNC_16285_(registerVal24, {})
		registerVal2.nextClip = "Focus"
	end

	registerVal44.Focus = __FUNC_156CD_
	registerVal43.CodeBundleRareBundle = registerVal44
	registerVal44 = {}
	local function __FUNC_165DF_()
		registerVal2:setupElementClipCounter(36.000000)
		registerVal3:completeAnimation()
		registerVal2.glow00:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal3, {})
		registerVal4:completeAnimation()
		registerVal2.BundleOnOpen:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal4, {})
		registerVal5:completeAnimation()
		registerVal2.SixPackCommonBundleOnOpen:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal5, {})
		registerVal6:completeAnimation()
		registerVal2.smokewidget:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal6, {})
		registerVal7:completeAnimation()
		registerVal2.fxEmber2:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal7, {})
		registerVal8:completeAnimation()
		registerVal2.fxEmber:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal8, {})
		registerVal9:completeAnimation()
		registerVal2.RareOn:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal9, {})
		registerVal10:completeAnimation()
		registerVal2.CommonOn:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal10, {})
		registerVal11:completeAnimation()
		registerVal2.fxglow:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal11, {})
		registerVal12:completeAnimation()
		registerVal2.glow0:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal12, {})
		registerVal13:completeAnimation()
		registerVal2.BribeOn:setLeftRight(false, false, -80.500000, 80.500000)
		registerVal2.BribeOn:setTopBottom(true, false, -40.460000, 120.540000)
		registerVal2.BribeOn:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal13, {})
		registerVal14:completeAnimation()
		registerVal2.glowBribe:setLeftRight(false, false, -80.500000, 80.500000)
		registerVal2.glowBribe:setTopBottom(true, false, -40.460000, 120.540000)
		registerVal2.glowBribe:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal14, {})
		registerVal15:completeAnimation()
		registerVal2.BundleOn:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal15, {})
		registerVal16:completeAnimation()
		registerVal2.glowBundle:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal16, {})
		registerVal17:completeAnimation()
		registerVal2.BundleCount:setRGB(0.970000, 0.950000, 0.680000)
		registerVal2.BundleCount:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal17, {})
		registerVal18:completeAnimation()
		registerVal2.BundleExperimentRareCount:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal18, {})
		registerVal19:completeAnimation()
		registerVal2.CodeBundleRareCount:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal19, {})
		registerVal20:completeAnimation()
		registerVal2.NoDupesRareCount:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal20, {})
		registerVal21:completeAnimation()
		registerVal2.HundredBundleCount:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal21, {})
		registerVal22:completeAnimation()
		registerVal2.DailyDoubleRareCount:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal22, {})
		registerVal23:completeAnimation()
		registerVal2.SixPackCommonCount:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal23, {})
		registerVal24:completeAnimation()
		registerVal2.glowBundleOutline:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal24, {})
		registerVal25:completeAnimation()
		registerVal2.IncentiveRare:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal25, {})
		registerVal26:completeAnimation()
		registerVal2.IncentiveWeapon:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal26, {})
		registerVal27:completeAnimation()
		registerVal2.GenericRewardImage:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal27, {})
		registerVal28:completeAnimation()
		registerVal2.GenericRewardImage0:setAlpha(1.000000)
		registerVal2.clipFinished(registerVal28, {})
		registerVal29:completeAnimation()
		registerVal2.IncentiveNumberbacker:setLeftRight(true, false, -45.000000, 123.000000)
		registerVal2.IncentiveNumberbacker:setTopBottom(true, false, 35.000000, 107.000000)
		registerVal2.IncentiveNumberbacker:setAlpha(1.000000)
		registerVal2.clipFinished(registerVal29, {})
		registerVal30:completeAnimation()
		registerVal2.WeaponIncentiveCount:setLeftRight(true, false, -61.500000, 138.500000)
		registerVal2.WeaponIncentiveCount:setTopBottom(true, false, 19.000000, 53.000000)
		registerVal2.WeaponIncentiveCount:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal30, {})
		registerVal31:completeAnimation()
		registerVal2.WeaponIncentiveCount0:setLeftRight(true, false, -61.500000, 138.500000)
		registerVal2.WeaponIncentiveCount0:setTopBottom(true, false, 18.000000, 52.000000)
		registerVal2.WeaponIncentiveCount0:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal31, {})
		registerVal33:completeAnimation()
		registerVal2.RareIncentiveCount:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal33, {})
		registerVal34:completeAnimation()
		registerVal2.GenericRewardCount0:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal34, {})
		registerVal35:completeAnimation()
		registerVal2.GenericRewardCount:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal35, {})
		registerVal36:completeAnimation()
		registerVal2.WeaponBribe3Count0:setLeftRight(true, false, -61.930000, 138.070000)
		registerVal2.WeaponBribe3Count0:setTopBottom(true, false, 54.750000, 88.750000)
		registerVal2.WeaponBribe3Count0:setAlpha(0.750000)
		registerVal2.clipFinished(registerVal36, {})
		registerVal37:completeAnimation()
		registerVal2.WeaponBribe3Count:setLeftRight(true, false, -61.930000, 138.070000)
		registerVal2.WeaponBribe3Count:setTopBottom(true, false, 53.750000, 87.750000)
		registerVal2.WeaponBribe3Count:setAlpha(1.000000)
		registerVal2.clipFinished(registerVal37, {})
		registerVal38:completeAnimation()
		registerVal2.LimitedEditionCamoCount0:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal38, {})
		registerVal39:completeAnimation()
		registerVal2.LimitedEditionCamoCount:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal39, {})
	end

	registerVal44.DefaultClip = __FUNC_165DF_
	local function __FUNC_176A3_()
		registerVal2:setupElementClipCounter(27.000000)
		registerVal3:completeAnimation()
		registerVal2.glow00:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal3, {})
		registerVal4:completeAnimation()
		registerVal2.BundleOnOpen:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal4, {})
		registerVal6:completeAnimation()
		registerVal2.smokewidget:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal6, {})
		registerVal7:completeAnimation()
		registerVal2.fxEmber2:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal7, {})
		registerVal8:completeAnimation()
		registerVal2.fxEmber:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal8, {})
		registerVal9:completeAnimation()
		registerVal2.RareOn:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal9, {})
		registerVal10:completeAnimation()
		registerVal2.CommonOn:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal10, {})
		registerVal11:completeAnimation()
		registerVal2.fxglow:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal11, {})
		registerVal12:completeAnimation()
		registerVal2.glow0:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal12, {})
		registerVal13:completeAnimation()
		registerVal2.BribeOn:setLeftRight(false, false, -80.500000, 80.500000)
		registerVal2.BribeOn:setTopBottom(true, false, -40.460000, 120.540000)
		registerVal2.BribeOn:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal13, {})
		registerVal14:completeAnimation()
		registerVal2.glowBribe:setLeftRight(false, false, -80.500000, 80.500000)
		registerVal2.glowBribe:setTopBottom(true, false, -40.460000, 120.540000)
		registerVal2.glowBribe:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal14, {})
		registerVal15:completeAnimation()
		registerVal2.BundleOn:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal15, {})
		registerVal16:completeAnimation()
		registerVal2.glowBundle:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal16, {})
		registerVal17:completeAnimation()
		registerVal2.BundleCount:setRGB(0.970000, 0.950000, 0.680000)
		registerVal2.BundleCount:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal17, {})
		registerVal24:completeAnimation()
		registerVal2.glowBundleOutline:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal24, {})
		registerVal25:completeAnimation()
		registerVal2.IncentiveRare:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal25, {})
		registerVal26:completeAnimation()
		registerVal2.IncentiveWeapon:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal26, {})
		registerVal27:completeAnimation()
		registerVal2.GenericRewardImage:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal27, {})
		registerVal28:completeAnimation()
		registerVal2.GenericRewardImage0:setAlpha(1.000000)
		registerVal2.clipFinished(registerVal28, {})
		registerVal29:completeAnimation()
		registerVal2.IncentiveNumberbacker:setLeftRight(true, false, -45.000000, 123.000000)
		registerVal2.IncentiveNumberbacker:setTopBottom(true, false, 35.000000, 107.000000)
		registerVal2.IncentiveNumberbacker:setAlpha(1.000000)
		registerVal2.clipFinished(registerVal29, {})
		registerVal30:completeAnimation()
		registerVal2.WeaponIncentiveCount:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal30, {})
		registerVal31:completeAnimation()
		registerVal2.WeaponIncentiveCount0:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal31, {})
		registerVal33:completeAnimation()
		registerVal2.RareIncentiveCount:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal33, {})
		registerVal34:completeAnimation()
		registerVal2.GenericRewardCount0:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal34, {})
		registerVal35:completeAnimation()
		registerVal2.GenericRewardCount:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal35, {})
		registerVal36:completeAnimation()
		registerVal2.WeaponBribe3Count0:setLeftRight(true, false, -61.930000, 138.070000)
		registerVal2.WeaponBribe3Count0:setTopBottom(true, false, 54.750000, 88.750000)
		registerVal2.WeaponBribe3Count0:setAlpha(0.750000)
		registerVal2.clipFinished(registerVal36, {})
		registerVal37:completeAnimation()
		registerVal2.WeaponBribe3Count:setLeftRight(true, false, -61.930000, 138.070000)
		registerVal2.WeaponBribe3Count:setTopBottom(true, false, 53.750000, 87.750000)
		registerVal2.WeaponBribe3Count:setAlpha(1.000000)
		registerVal2.clipFinished(registerVal37, {})
	end

	registerVal44.Focus = __FUNC_176A3_
	registerVal43.WeaponBribe3 = registerVal44
	registerVal44 = {}
	local function __FUNC_1832F_()
		registerVal2:setupElementClipCounter(36.000000)
		registerVal3:completeAnimation()
		registerVal2.glow00:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal3, {})
		registerVal4:completeAnimation()
		registerVal2.BundleOnOpen:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal4, {})
		registerVal5:completeAnimation()
		registerVal2.SixPackCommonBundleOnOpen:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal5, {})
		registerVal6:completeAnimation()
		registerVal2.smokewidget:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal6, {})
		registerVal7:completeAnimation()
		registerVal2.fxEmber2:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal7, {})
		registerVal8:completeAnimation()
		registerVal2.fxEmber:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal8, {})
		registerVal9:completeAnimation()
		registerVal2.RareOn:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal9, {})
		registerVal10:completeAnimation()
		registerVal2.CommonOn:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal10, {})
		registerVal11:completeAnimation()
		registerVal2.fxglow:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal11, {})
		registerVal12:completeAnimation()
		registerVal2.glow0:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal12, {})
		registerVal13:completeAnimation()
		registerVal2.BribeOn:setLeftRight(false, false, -80.500000, 80.500000)
		registerVal2.BribeOn:setTopBottom(true, false, -40.460000, 120.540000)
		registerVal2.BribeOn:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal13, {})
		registerVal14:completeAnimation()
		registerVal2.glowBribe:setLeftRight(false, false, -80.500000, 80.500000)
		registerVal2.glowBribe:setTopBottom(true, false, -40.460000, 120.540000)
		registerVal2.glowBribe:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal14, {})
		registerVal15:completeAnimation()
		registerVal2.BundleOn:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal15, {})
		registerVal16:completeAnimation()
		registerVal2.glowBundle:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal16, {})
		registerVal17:completeAnimation()
		registerVal2.BundleCount:setRGB(0.970000, 0.950000, 0.680000)
		registerVal2.BundleCount:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal17, {})
		registerVal18:completeAnimation()
		registerVal2.BundleExperimentRareCount:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal18, {})
		registerVal19:completeAnimation()
		registerVal2.CodeBundleRareCount:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal19, {})
		registerVal20:completeAnimation()
		registerVal2.NoDupesRareCount:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal20, {})
		registerVal21:completeAnimation()
		registerVal2.HundredBundleCount:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal21, {})
		registerVal22:completeAnimation()
		registerVal2.DailyDoubleRareCount:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal22, {})
		registerVal23:completeAnimation()
		registerVal2.SixPackCommonCount:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal23, {})
		registerVal24:completeAnimation()
		registerVal2.glowBundleOutline:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal24, {})
		registerVal25:completeAnimation()
		registerVal2.IncentiveRare:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal25, {})
		registerVal26:completeAnimation()
		registerVal2.IncentiveWeapon:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal26, {})
		registerVal27:completeAnimation()
		registerVal2.GenericRewardImage:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal27, {})
		registerVal28:completeAnimation()
		registerVal2.GenericRewardImage0:setAlpha(1.000000)
		registerVal2.clipFinished(registerVal28, {})
		registerVal29:completeAnimation()
		registerVal2.IncentiveNumberbacker:setLeftRight(true, false, -45.000000, 123.000000)
		registerVal2.IncentiveNumberbacker:setTopBottom(true, false, 35.000000, 107.000000)
		registerVal2.IncentiveNumberbacker:setAlpha(1.000000)
		registerVal2.clipFinished(registerVal29, {})
		registerVal30:completeAnimation()
		registerVal2.WeaponIncentiveCount:setLeftRight(true, false, -61.500000, 138.500000)
		registerVal2.WeaponIncentiveCount:setTopBottom(true, false, 19.000000, 53.000000)
		registerVal2.WeaponIncentiveCount:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal30, {})
		registerVal31:completeAnimation()
		registerVal2.WeaponIncentiveCount0:setLeftRight(true, false, -61.500000, 138.500000)
		registerVal2.WeaponIncentiveCount0:setTopBottom(true, false, 18.000000, 52.000000)
		registerVal2.WeaponIncentiveCount0:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal31, {})
		registerVal33:completeAnimation()
		registerVal2.RareIncentiveCount:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal33, {})
		registerVal34:completeAnimation()
		registerVal2.GenericRewardCount0:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal34, {})
		registerVal35:completeAnimation()
		registerVal2.GenericRewardCount:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal35, {})
		registerVal36:completeAnimation()
		registerVal2.WeaponBribe3Count0:setLeftRight(true, false, -61.930000, 138.070000)
		registerVal2.WeaponBribe3Count0:setTopBottom(true, false, 54.750000, 88.750000)
		registerVal2.WeaponBribe3Count0:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal36, {})
		registerVal37:completeAnimation()
		registerVal2.WeaponBribe3Count:setLeftRight(true, false, -61.930000, 138.070000)
		registerVal2.WeaponBribe3Count:setTopBottom(true, false, 53.750000, 87.750000)
		registerVal2.WeaponBribe3Count:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal37, {})
		registerVal38:completeAnimation()
		registerVal2.LimitedEditionCamoCount0:setLeftRight(true, false, -61.930000, 138.070000)
		registerVal2.LimitedEditionCamoCount0:setTopBottom(true, false, 54.750000, 88.750000)
		registerVal2.LimitedEditionCamoCount0:setAlpha(0.750000)
		registerVal2.clipFinished(registerVal38, {})
		registerVal39:completeAnimation()
		registerVal2.LimitedEditionCamoCount:setLeftRight(true, false, -61.930000, 138.070000)
		registerVal2.LimitedEditionCamoCount:setTopBottom(true, false, 53.750000, 87.750000)
		registerVal2.LimitedEditionCamoCount:setAlpha(1.000000)
		registerVal2.clipFinished(registerVal39, {})
	end

	registerVal44.DefaultClip = __FUNC_1832F_
	local function __FUNC_19493_()
		registerVal2:setupElementClipCounter(29.000000)
		registerVal3:completeAnimation()
		registerVal2.glow00:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal3, {})
		registerVal4:completeAnimation()
		registerVal2.BundleOnOpen:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal4, {})
		registerVal6:completeAnimation()
		registerVal2.smokewidget:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal6, {})
		registerVal7:completeAnimation()
		registerVal2.fxEmber2:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal7, {})
		registerVal8:completeAnimation()
		registerVal2.fxEmber:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal8, {})
		registerVal9:completeAnimation()
		registerVal2.RareOn:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal9, {})
		registerVal10:completeAnimation()
		registerVal2.CommonOn:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal10, {})
		registerVal11:completeAnimation()
		registerVal2.fxglow:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal11, {})
		registerVal12:completeAnimation()
		registerVal2.glow0:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal12, {})
		registerVal13:completeAnimation()
		registerVal2.BribeOn:setLeftRight(false, false, -80.500000, 80.500000)
		registerVal2.BribeOn:setTopBottom(true, false, -40.460000, 120.540000)
		registerVal2.BribeOn:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal13, {})
		registerVal14:completeAnimation()
		registerVal2.glowBribe:setLeftRight(false, false, -80.500000, 80.500000)
		registerVal2.glowBribe:setTopBottom(true, false, -40.460000, 120.540000)
		registerVal2.glowBribe:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal14, {})
		registerVal15:completeAnimation()
		registerVal2.BundleOn:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal15, {})
		registerVal16:completeAnimation()
		registerVal2.glowBundle:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal16, {})
		registerVal17:completeAnimation()
		registerVal2.BundleCount:setRGB(0.970000, 0.950000, 0.680000)
		registerVal2.BundleCount:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal17, {})
		registerVal24:completeAnimation()
		registerVal2.glowBundleOutline:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal24, {})
		registerVal25:completeAnimation()
		registerVal2.IncentiveRare:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal25, {})
		registerVal26:completeAnimation()
		registerVal2.IncentiveWeapon:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal26, {})
		registerVal27:completeAnimation()
		registerVal2.GenericRewardImage:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal27, {})
		registerVal28:completeAnimation()
		registerVal2.GenericRewardImage0:setAlpha(1.000000)
		registerVal2.clipFinished(registerVal28, {})
		registerVal29:completeAnimation()
		registerVal2.IncentiveNumberbacker:setLeftRight(true, false, -45.000000, 123.000000)
		registerVal2.IncentiveNumberbacker:setTopBottom(true, false, 35.000000, 107.000000)
		registerVal2.IncentiveNumberbacker:setAlpha(1.000000)
		registerVal2.clipFinished(registerVal29, {})
		registerVal30:completeAnimation()
		registerVal2.WeaponIncentiveCount:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal30, {})
		registerVal31:completeAnimation()
		registerVal2.WeaponIncentiveCount0:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal31, {})
		registerVal33:completeAnimation()
		registerVal2.RareIncentiveCount:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal33, {})
		registerVal34:completeAnimation()
		registerVal2.GenericRewardCount0:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal34, {})
		registerVal35:completeAnimation()
		registerVal2.GenericRewardCount:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal35, {})
		registerVal36:completeAnimation()
		registerVal2.WeaponBribe3Count0:setLeftRight(true, false, -61.930000, 138.070000)
		registerVal2.WeaponBribe3Count0:setTopBottom(true, false, 54.750000, 88.750000)
		registerVal2.WeaponBribe3Count0:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal36, {})
		registerVal37:completeAnimation()
		registerVal2.WeaponBribe3Count:setLeftRight(true, false, -61.930000, 138.070000)
		registerVal2.WeaponBribe3Count:setTopBottom(true, false, 53.750000, 87.750000)
		registerVal2.WeaponBribe3Count:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal37, {})
		registerVal38:completeAnimation()
		registerVal2.LimitedEditionCamoCount0:setLeftRight(true, false, -61.930000, 138.070000)
		registerVal2.LimitedEditionCamoCount0:setTopBottom(true, false, 54.750000, 88.750000)
		registerVal2.LimitedEditionCamoCount0:setAlpha(0.750000)
		registerVal2.clipFinished(registerVal38, {})
		registerVal39:completeAnimation()
		registerVal2.LimitedEditionCamoCount:setLeftRight(true, false, -61.930000, 138.070000)
		registerVal2.LimitedEditionCamoCount:setTopBottom(true, false, 53.750000, 87.750000)
		registerVal2.LimitedEditionCamoCount:setAlpha(1.000000)
		registerVal2.clipFinished(registerVal39, {})
	end

	registerVal44.Focus = __FUNC_19493_
	registerVal43.LimitedEditionCamo = registerVal44
	registerVal44 = {}
	local function __FUNC_1A28A_()
		registerVal2:setupElementClipCounter(30.000000)
		registerVal3:completeAnimation()
		registerVal2.glow00:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal3, {})
		registerVal4:completeAnimation()
		registerVal2.BundleOnOpen:setAlpha(1.000000)
		registerVal2.clipFinished(registerVal4, {})
		registerVal5:completeAnimation()
		registerVal2.SixPackCommonBundleOnOpen:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal5, {})
		registerVal6:completeAnimation()
		registerVal2.smokewidget:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal6, {})
		registerVal7:completeAnimation()
		registerVal2.fxEmber2:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal7, {})
		registerVal8:completeAnimation()
		registerVal2.fxEmber:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal8, {})
		registerVal9:completeAnimation()
		registerVal2.RareOn:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal9, {})
		registerVal10:completeAnimation()
		registerVal2.CommonOn:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal10, {})
		registerVal11:completeAnimation()
		registerVal2.fxglow:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal11, {})
		registerVal12:completeAnimation()
		registerVal2.glow0:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal12, {})
		registerVal13:completeAnimation()
		registerVal2.BribeOn:setLeftRight(false, false, -80.500000, 80.500000)
		registerVal2.BribeOn:setTopBottom(true, false, -40.460000, 120.540000)
		registerVal2.BribeOn:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal13, {})
		registerVal14:completeAnimation()
		registerVal2.glowBribe:setLeftRight(false, false, -80.500000, 80.500000)
		registerVal2.glowBribe:setTopBottom(true, false, -40.460000, 120.540000)
		registerVal2.glowBribe:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal14, {})
		registerVal15:completeAnimation()
		registerVal2.BundleOn:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal15, {})
		registerVal16:completeAnimation()
		registerVal2.glowBundle:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal16, {})
		registerVal17:completeAnimation()
		registerVal2.BundleCount:setRGB(0.970000, 0.950000, 0.680000)
		registerVal2.BundleCount:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal17, {})
		registerVal18:completeAnimation()
		registerVal2.BundleExperimentRareCount:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal18, {})
		registerVal19:completeAnimation()
		registerVal2.CodeBundleRareCount:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal19, {})
		registerVal20:completeAnimation()
		registerVal2.NoDupesRareCount:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal20, {})
		registerVal21:completeAnimation()
		registerVal2.HundredBundleCount:setRGB(0.970000, 0.950000, 0.680000)
		registerVal2.HundredBundleCount:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal21, {})
		registerVal22:completeAnimation()
		registerVal2.DailyDoubleRareCount:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal22, {})
		registerVal23:completeAnimation()
		registerVal2.SixPackCommonCount:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal23, {})
		registerVal24:completeAnimation()
		registerVal2.glowBundleOutline:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal24, {})
		registerVal27:completeAnimation()
		registerVal2.GenericRewardImage:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal27, {})
		registerVal34:completeAnimation()
		registerVal2.GenericRewardCount0:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal34, {})
		registerVal35:completeAnimation()
		registerVal2.GenericRewardCount:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal35, {})
		registerVal36:completeAnimation()
		registerVal2.WeaponBribe3Count0:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal36, {})
		registerVal37:completeAnimation()
		registerVal2.WeaponBribe3Count:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal37, {})
		registerVal38:completeAnimation()
		registerVal2.LimitedEditionCamoCount0:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal38, {})
		registerVal39:completeAnimation()
		registerVal2.LimitedEditionCamoCount:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal39, {})
		registerVal40:completeAnimation()
		registerVal2.RareBundle10for5Count:setAlpha(1.000000)
		registerVal2.clipFinished(registerVal40, {})
	end

	registerVal44.DefaultClip = __FUNC_1A28A_
	local function __FUNC_1AF50_()
		registerVal2:setupElementClipCounter(14.000000)
		registerVal3:completeAnimation()
		registerVal2.glow00:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal3, {})
		registerVal4:completeAnimation()
		registerVal2.BundleOnOpen:setAlpha(1.000000)
		registerVal2.clipFinished(registerVal4, {})
		registerVal6:completeAnimation()
		registerVal2.smokewidget:setLeftRight(true, false, -43.250000, 126.350000)
		registerVal2.smokewidget:setTopBottom(true, false, -69.960000, 108.540000)
		registerVal2.smokewidget:setRGB(0.220000, 0.930000, 0.930000)
		registerVal2.smokewidget:setAlpha(1.000000)
		registerVal2.clipFinished(registerVal6, {})
		registerVal7:completeAnimation()
		registerVal2.fxEmber2:setLeftRight(true, false, -30.450000, 113.550000)
		registerVal2.fxEmber2:setTopBottom(true, false, -54.960000, 125.040000)
		registerVal2.fxEmber2:setRGB(0.220000, 0.930000, 0.930000)
		registerVal2.fxEmber2:setAlpha(1.000000)
		registerVal2.clipFinished(registerVal7, {})
		registerVal8:completeAnimation()
		registerVal2.fxEmber:setLeftRight(true, false, -34.250000, 117.350000)
		registerVal2.fxEmber:setTopBottom(true, false, -42.460000, 147.040000)
		registerVal2.fxEmber:setRGB(0.220000, 0.930000, 0.930000)
		registerVal2.fxEmber:setAlpha(1.000000)
		registerVal2.clipFinished(registerVal8, {})
		registerVal9:completeAnimation()
		registerVal2.RareOn:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal9, {})
		registerVal10:completeAnimation()
		registerVal2.CommonOn:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal10, {})
		registerVal12:completeAnimation()
		registerVal2.glow0:setRGB(0.220000, 0.930000, 0.930000)
		registerVal2.glow0:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal12, {})
		registerVal13:completeAnimation()
		registerVal2.BribeOn:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal13, {})
		registerVal14:completeAnimation()
		registerVal2.glowBribe:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal14, {})
		registerVal15:completeAnimation()
		registerVal2.BundleOn:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal15, {})
		registerVal16:completeAnimation()
		registerVal2.glowBundle:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal16, {})
		local function __FUNC_1B713_(arg0, arg1)
			local function __FUNC_1B88B_(arg0, arg1)
				if not arg1.interrupted then
					arg0:beginAnimation("keyframe", 809.000000, false, false, CoD.TweenType.Linear)
				end
				arg0:setAlpha(0.800000)
				if arg1.interrupted then
					registerVal2.clipFinished(arg0, arg1)
				else
					arg0:registerEventHandler("transition_complete_keyframe", registerVal2.clipFinished)
				end
			end

			if arg1.interrupted then
				__FUNC_1B88B_(arg0, arg1)
				return 
			end
			arg0:beginAnimation("keyframe", 740.000000, false, false, CoD.TweenType.Linear)
			arg0:setAlpha(1.000000)
			arg0:registerEventHandler("transition_complete_keyframe", __FUNC_1B88B_)
		end

		registerVal21:completeAnimation()
		registerVal2.HundredBundleCount:setAlpha(0.800000)
		__FUNC_1B713_(registerVal21, {})
		local function __FUNC_1BA3D_(arg0, arg1)
			local function __FUNC_1BBB7_(arg0, arg1)
				if not arg1.interrupted then
					arg0:beginAnimation("keyframe", 809.000000, false, false, CoD.TweenType.Linear)
				end
				arg0:setRGB(0.220000, 0.930000, 0.930000)
				arg0:setAlpha(0.000000)
				if arg1.interrupted then
					registerVal2.clipFinished(arg0, arg1)
				else
					arg0:registerEventHandler("transition_complete_keyframe", registerVal2.clipFinished)
				end
			end

			if arg1.interrupted then
				__FUNC_1BBB7_(arg0, arg1)
				return 
			end
			arg0:beginAnimation("keyframe", 740.000000, false, false, CoD.TweenType.Linear)
			arg0:setAlpha(1.000000)
			arg0:registerEventHandler("transition_complete_keyframe", __FUNC_1BBB7_)
		end

		registerVal24:completeAnimation()
		registerVal2.glowBundleOutline:setRGB(0.220000, 0.930000, 0.930000)
		registerVal2.glowBundleOutline:setAlpha(0.000000)
		__FUNC_1BA3D_(registerVal24, {})
		registerVal2.nextClip = "Focus"
	end

	registerVal44.Focus = __FUNC_1AF50_
	registerVal43.RareBundle10for5 = registerVal44
	registerVal44 = {}
	local function __FUNC_1BD97_()
		registerVal2:setupElementClipCounter(31.000000)
		registerVal3:completeAnimation()
		registerVal2.glow00:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal3, {})
		registerVal4:completeAnimation()
		registerVal2.BundleOnOpen:setAlpha(1.000000)
		registerVal2.clipFinished(registerVal4, {})
		registerVal5:completeAnimation()
		registerVal2.SixPackCommonBundleOnOpen:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal5, {})
		registerVal6:completeAnimation()
		registerVal2.smokewidget:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal6, {})
		registerVal7:completeAnimation()
		registerVal2.fxEmber2:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal7, {})
		registerVal8:completeAnimation()
		registerVal2.fxEmber:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal8, {})
		registerVal9:completeAnimation()
		registerVal2.RareOn:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal9, {})
		registerVal10:completeAnimation()
		registerVal2.CommonOn:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal10, {})
		registerVal11:completeAnimation()
		registerVal2.fxglow:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal11, {})
		registerVal12:completeAnimation()
		registerVal2.glow0:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal12, {})
		registerVal13:completeAnimation()
		registerVal2.BribeOn:setLeftRight(false, false, -80.500000, 80.500000)
		registerVal2.BribeOn:setTopBottom(true, false, -40.460000, 120.540000)
		registerVal2.BribeOn:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal13, {})
		registerVal14:completeAnimation()
		registerVal2.glowBribe:setLeftRight(false, false, -80.500000, 80.500000)
		registerVal2.glowBribe:setTopBottom(true, false, -40.460000, 120.540000)
		registerVal2.glowBribe:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal14, {})
		registerVal15:completeAnimation()
		registerVal2.BundleOn:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal15, {})
		registerVal16:completeAnimation()
		registerVal2.glowBundle:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal16, {})
		registerVal17:completeAnimation()
		registerVal2.BundleCount:setRGB(0.970000, 0.950000, 0.680000)
		registerVal2.BundleCount:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal17, {})
		registerVal18:completeAnimation()
		registerVal2.BundleExperimentRareCount:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal18, {})
		registerVal19:completeAnimation()
		registerVal2.CodeBundleRareCount:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal19, {})
		registerVal20:completeAnimation()
		registerVal2.NoDupesRareCount:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal20, {})
		registerVal21:completeAnimation()
		registerVal2.HundredBundleCount:setRGB(0.970000, 0.950000, 0.680000)
		registerVal2.HundredBundleCount:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal21, {})
		registerVal22:completeAnimation()
		registerVal2.DailyDoubleRareCount:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal22, {})
		registerVal23:completeAnimation()
		registerVal2.SixPackCommonCount:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal23, {})
		registerVal24:completeAnimation()
		registerVal2.glowBundleOutline:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal24, {})
		registerVal27:completeAnimation()
		registerVal2.GenericRewardImage:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal27, {})
		registerVal34:completeAnimation()
		registerVal2.GenericRewardCount0:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal34, {})
		registerVal35:completeAnimation()
		registerVal2.GenericRewardCount:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal35, {})
		registerVal36:completeAnimation()
		registerVal2.WeaponBribe3Count0:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal36, {})
		registerVal37:completeAnimation()
		registerVal2.WeaponBribe3Count:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal37, {})
		registerVal38:completeAnimation()
		registerVal2.LimitedEditionCamoCount0:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal38, {})
		registerVal39:completeAnimation()
		registerVal2.LimitedEditionCamoCount:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal39, {})
		registerVal40:completeAnimation()
		registerVal2.RareBundle10for5Count:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal40, {})
		registerVal41:completeAnimation()
		registerVal2.Rare15BundleCount:setAlpha(1.000000)
		registerVal2.clipFinished(registerVal41, {})
	end

	registerVal44.DefaultClip = __FUNC_1BD97_
	local function __FUNC_1CABB_()
		registerVal2:setupElementClipCounter(16.000000)
		registerVal3:completeAnimation()
		registerVal2.glow00:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal3, {})
		registerVal4:completeAnimation()
		registerVal2.BundleOnOpen:setAlpha(1.000000)
		registerVal2.clipFinished(registerVal4, {})
		registerVal6:completeAnimation()
		registerVal2.smokewidget:setLeftRight(true, false, -43.250000, 126.350000)
		registerVal2.smokewidget:setTopBottom(true, false, -69.960000, 108.540000)
		registerVal2.smokewidget:setRGB(0.220000, 0.930000, 0.930000)
		registerVal2.smokewidget:setAlpha(1.000000)
		registerVal2.clipFinished(registerVal6, {})
		registerVal7:completeAnimation()
		registerVal2.fxEmber2:setLeftRight(true, false, -30.450000, 113.550000)
		registerVal2.fxEmber2:setTopBottom(true, false, -54.960000, 125.040000)
		registerVal2.fxEmber2:setRGB(0.220000, 0.930000, 0.930000)
		registerVal2.fxEmber2:setAlpha(1.000000)
		registerVal2.clipFinished(registerVal7, {})
		registerVal8:completeAnimation()
		registerVal2.fxEmber:setLeftRight(true, false, -34.250000, 117.350000)
		registerVal2.fxEmber:setTopBottom(true, false, -42.460000, 147.040000)
		registerVal2.fxEmber:setRGB(0.220000, 0.930000, 0.930000)
		registerVal2.fxEmber:setAlpha(1.000000)
		registerVal2.clipFinished(registerVal8, {})
		registerVal9:completeAnimation()
		registerVal2.RareOn:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal9, {})
		registerVal10:completeAnimation()
		registerVal2.CommonOn:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal10, {})
		registerVal12:completeAnimation()
		registerVal2.glow0:setRGB(0.220000, 0.930000, 0.930000)
		registerVal2.glow0:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal12, {})
		registerVal13:completeAnimation()
		registerVal2.BribeOn:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal13, {})
		registerVal14:completeAnimation()
		registerVal2.glowBribe:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal14, {})
		registerVal15:completeAnimation()
		registerVal2.BundleOn:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal15, {})
		registerVal16:completeAnimation()
		registerVal2.glowBundle:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal16, {})
		registerVal21:completeAnimation()
		registerVal2.HundredBundleCount:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal21, {})
		local function __FUNC_1D33D_(arg0, arg1)
			local function __FUNC_1D4B7_(arg0, arg1)
				if not arg1.interrupted then
					arg0:beginAnimation("keyframe", 809.000000, false, false, CoD.TweenType.Linear)
				end
				arg0:setRGB(0.220000, 0.930000, 0.930000)
				arg0:setAlpha(0.000000)
				if arg1.interrupted then
					registerVal2.clipFinished(arg0, arg1)
				else
					arg0:registerEventHandler("transition_complete_keyframe", registerVal2.clipFinished)
				end
			end

			if arg1.interrupted then
				__FUNC_1D4B7_(arg0, arg1)
				return 
			end
			arg0:beginAnimation("keyframe", 740.000000, false, false, CoD.TweenType.Linear)
			arg0:setAlpha(1.000000)
			arg0:registerEventHandler("transition_complete_keyframe", __FUNC_1D4B7_)
		end

		registerVal24:completeAnimation()
		registerVal2.glowBundleOutline:setRGB(0.220000, 0.930000, 0.930000)
		registerVal2.glowBundleOutline:setAlpha(0.000000)
		__FUNC_1D33D_(registerVal24, {})
		registerVal40:completeAnimation()
		registerVal2.RareBundle10for5Count:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal40, {})
		local function __FUNC_1D697_(arg0, arg1)
			local function __FUNC_1D80F_(arg0, arg1)
				if not arg1.interrupted then
					arg0:beginAnimation("keyframe", 809.000000, false, false, CoD.TweenType.Linear)
				end
				arg0:setAlpha(0.800000)
				if arg1.interrupted then
					registerVal2.clipFinished(arg0, arg1)
				else
					arg0:registerEventHandler("transition_complete_keyframe", registerVal2.clipFinished)
				end
			end

			if arg1.interrupted then
				__FUNC_1D80F_(arg0, arg1)
				return 
			end
			arg0:beginAnimation("keyframe", 740.000000, false, false, CoD.TweenType.Linear)
			arg0:setAlpha(1.000000)
			arg0:registerEventHandler("transition_complete_keyframe", __FUNC_1D80F_)
		end

		registerVal41:completeAnimation()
		registerVal2.Rare15BundleCount:setAlpha(0.800000)
		__FUNC_1D697_(registerVal41, {})
		registerVal2.nextClip = "Focus"
	end

	registerVal44.Focus = __FUNC_1CABB_
	registerVal43.Rare15Bundle = registerVal44
	registerVal44 = {}
	local function __FUNC_1D9C1_()
		registerVal2:setupElementClipCounter(32.000000)
		registerVal3:completeAnimation()
		registerVal2.glow00:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal3, {})
		registerVal4:completeAnimation()
		registerVal2.BundleOnOpen:setAlpha(1.000000)
		registerVal2.clipFinished(registerVal4, {})
		registerVal5:completeAnimation()
		registerVal2.SixPackCommonBundleOnOpen:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal5, {})
		registerVal6:completeAnimation()
		registerVal2.smokewidget:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal6, {})
		registerVal7:completeAnimation()
		registerVal2.fxEmber2:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal7, {})
		registerVal8:completeAnimation()
		registerVal2.fxEmber:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal8, {})
		registerVal9:completeAnimation()
		registerVal2.RareOn:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal9, {})
		registerVal10:completeAnimation()
		registerVal2.CommonOn:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal10, {})
		registerVal11:completeAnimation()
		registerVal2.fxglow:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal11, {})
		registerVal12:completeAnimation()
		registerVal2.glow0:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal12, {})
		registerVal13:completeAnimation()
		registerVal2.BribeOn:setLeftRight(false, false, -80.500000, 80.500000)
		registerVal2.BribeOn:setTopBottom(true, false, -40.460000, 120.540000)
		registerVal2.BribeOn:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal13, {})
		registerVal14:completeAnimation()
		registerVal2.glowBribe:setLeftRight(false, false, -80.500000, 80.500000)
		registerVal2.glowBribe:setTopBottom(true, false, -40.460000, 120.540000)
		registerVal2.glowBribe:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal14, {})
		registerVal15:completeAnimation()
		registerVal2.BundleOn:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal15, {})
		registerVal16:completeAnimation()
		registerVal2.glowBundle:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal16, {})
		registerVal17:completeAnimation()
		registerVal2.BundleCount:setRGB(0.970000, 0.950000, 0.680000)
		registerVal2.BundleCount:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal17, {})
		registerVal18:completeAnimation()
		registerVal2.BundleExperimentRareCount:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal18, {})
		registerVal19:completeAnimation()
		registerVal2.CodeBundleRareCount:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal19, {})
		registerVal20:completeAnimation()
		registerVal2.NoDupesRareCount:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal20, {})
		registerVal21:completeAnimation()
		registerVal2.HundredBundleCount:setRGB(0.970000, 0.950000, 0.680000)
		registerVal2.HundredBundleCount:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal21, {})
		registerVal22:completeAnimation()
		registerVal2.DailyDoubleRareCount:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal22, {})
		registerVal23:completeAnimation()
		registerVal2.SixPackCommonCount:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal23, {})
		registerVal24:completeAnimation()
		registerVal2.glowBundleOutline:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal24, {})
		registerVal27:completeAnimation()
		registerVal2.GenericRewardImage:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal27, {})
		registerVal34:completeAnimation()
		registerVal2.GenericRewardCount0:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal34, {})
		registerVal35:completeAnimation()
		registerVal2.GenericRewardCount:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal35, {})
		registerVal36:completeAnimation()
		registerVal2.WeaponBribe3Count0:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal36, {})
		registerVal37:completeAnimation()
		registerVal2.WeaponBribe3Count:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal37, {})
		registerVal38:completeAnimation()
		registerVal2.LimitedEditionCamoCount0:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal38, {})
		registerVal39:completeAnimation()
		registerVal2.LimitedEditionCamoCount:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal39, {})
		registerVal40:completeAnimation()
		registerVal2.RareBundle10for5Count:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal40, {})
		registerVal41:completeAnimation()
		registerVal2.Rare15BundleCount:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal41, {})
		registerVal42:completeAnimation()
		registerVal2.OutfitBribeCount:setAlpha(1.000000)
		registerVal2.clipFinished(registerVal42, {})
	end

	registerVal44.DefaultClip = __FUNC_1D9C1_
	local function __FUNC_1E745_()
		registerVal2:setupElementClipCounter(17.000000)
		registerVal3:completeAnimation()
		registerVal2.glow00:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal3, {})
		registerVal4:completeAnimation()
		registerVal2.BundleOnOpen:setAlpha(1.000000)
		registerVal2.clipFinished(registerVal4, {})
		registerVal6:completeAnimation()
		registerVal2.smokewidget:setLeftRight(true, false, -43.250000, 126.350000)
		registerVal2.smokewidget:setTopBottom(true, false, -69.960000, 108.540000)
		registerVal2.smokewidget:setRGB(0.220000, 0.930000, 0.930000)
		registerVal2.smokewidget:setAlpha(1.000000)
		registerVal2.clipFinished(registerVal6, {})
		registerVal7:completeAnimation()
		registerVal2.fxEmber2:setLeftRight(true, false, -30.450000, 113.550000)
		registerVal2.fxEmber2:setTopBottom(true, false, -54.960000, 125.040000)
		registerVal2.fxEmber2:setRGB(0.220000, 0.930000, 0.930000)
		registerVal2.fxEmber2:setAlpha(1.000000)
		registerVal2.clipFinished(registerVal7, {})
		registerVal8:completeAnimation()
		registerVal2.fxEmber:setLeftRight(true, false, -34.250000, 117.350000)
		registerVal2.fxEmber:setTopBottom(true, false, -42.460000, 147.040000)
		registerVal2.fxEmber:setRGB(0.220000, 0.930000, 0.930000)
		registerVal2.fxEmber:setAlpha(1.000000)
		registerVal2.clipFinished(registerVal8, {})
		registerVal9:completeAnimation()
		registerVal2.RareOn:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal9, {})
		registerVal10:completeAnimation()
		registerVal2.CommonOn:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal10, {})
		registerVal12:completeAnimation()
		registerVal2.glow0:setRGB(0.220000, 0.930000, 0.930000)
		registerVal2.glow0:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal12, {})
		registerVal13:completeAnimation()
		registerVal2.BribeOn:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal13, {})
		registerVal14:completeAnimation()
		registerVal2.glowBribe:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal14, {})
		registerVal15:completeAnimation()
		registerVal2.BundleOn:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal15, {})
		registerVal16:completeAnimation()
		registerVal2.glowBundle:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal16, {})
		registerVal21:completeAnimation()
		registerVal2.HundredBundleCount:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal21, {})
		local function __FUNC_1F027_(arg0, arg1)
			local function __FUNC_1F19F_(arg0, arg1)
				if not arg1.interrupted then
					arg0:beginAnimation("keyframe", 809.000000, false, false, CoD.TweenType.Linear)
				end
				arg0:setRGB(0.220000, 0.930000, 0.930000)
				arg0:setAlpha(0.000000)
				if arg1.interrupted then
					registerVal2.clipFinished(arg0, arg1)
				else
					arg0:registerEventHandler("transition_complete_keyframe", registerVal2.clipFinished)
				end
			end

			if arg1.interrupted then
				__FUNC_1F19F_(arg0, arg1)
				return 
			end
			arg0:beginAnimation("keyframe", 740.000000, false, false, CoD.TweenType.Linear)
			arg0:setAlpha(1.000000)
			arg0:registerEventHandler("transition_complete_keyframe", __FUNC_1F19F_)
		end

		registerVal24:completeAnimation()
		registerVal2.glowBundleOutline:setRGB(0.220000, 0.930000, 0.930000)
		registerVal2.glowBundleOutline:setAlpha(0.000000)
		__FUNC_1F027_(registerVal24, {})
		registerVal40:completeAnimation()
		registerVal2.RareBundle10for5Count:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal40, {})
		registerVal41:completeAnimation()
		registerVal2.Rare15BundleCount:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal41, {})
		local function __FUNC_1F37F_(arg0, arg1)
			local function __FUNC_1F4F7_(arg0, arg1)
				if not arg1.interrupted then
					arg0:beginAnimation("keyframe", 809.000000, false, false, CoD.TweenType.Linear)
				end
				arg0:setAlpha(0.800000)
				if arg1.interrupted then
					registerVal2.clipFinished(arg0, arg1)
				else
					arg0:registerEventHandler("transition_complete_keyframe", registerVal2.clipFinished)
				end
			end

			if arg1.interrupted then
				__FUNC_1F4F7_(arg0, arg1)
				return 
			end
			arg0:beginAnimation("keyframe", 740.000000, false, false, CoD.TweenType.Linear)
			arg0:setAlpha(1.000000)
			arg0:registerEventHandler("transition_complete_keyframe", __FUNC_1F4F7_)
		end

		registerVal42:completeAnimation()
		registerVal2.OutfitBribeCount:setAlpha(0.800000)
		__FUNC_1F37F_(registerVal42, {})
		registerVal2.nextClip = "Focus"
	end

	registerVal44.Focus = __FUNC_1E745_
	registerVal43.OutfitBribe = registerVal44
	registerVal44 = {}
	local function __FUNC_1F6A9_()
		registerVal2:setupElementClipCounter(29.000000)
		registerVal3:completeAnimation()
		registerVal2.glow00:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal3, {})
		registerVal4:completeAnimation()
		registerVal2.BundleOnOpen:setAlpha(1.000000)
		registerVal2.clipFinished(registerVal4, {})
		registerVal5:completeAnimation()
		registerVal2.SixPackCommonBundleOnOpen:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal5, {})
		registerVal6:completeAnimation()
		registerVal2.smokewidget:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal6, {})
		registerVal7:completeAnimation()
		registerVal2.fxEmber2:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal7, {})
		registerVal8:completeAnimation()
		registerVal2.fxEmber:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal8, {})
		registerVal9:completeAnimation()
		registerVal2.RareOn:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal9, {})
		registerVal10:completeAnimation()
		registerVal2.CommonOn:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal10, {})
		registerVal11:completeAnimation()
		registerVal2.fxglow:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal11, {})
		registerVal12:completeAnimation()
		registerVal2.glow0:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal12, {})
		registerVal13:completeAnimation()
		registerVal2.BribeOn:setLeftRight(false, false, -80.500000, 80.500000)
		registerVal2.BribeOn:setTopBottom(true, false, -40.460000, 120.540000)
		registerVal2.BribeOn:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal13, {})
		registerVal14:completeAnimation()
		registerVal2.glowBribe:setLeftRight(false, false, -80.500000, 80.500000)
		registerVal2.glowBribe:setTopBottom(true, false, -40.460000, 120.540000)
		registerVal2.glowBribe:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal14, {})
		registerVal15:completeAnimation()
		registerVal2.BundleOn:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal15, {})
		registerVal16:completeAnimation()
		registerVal2.glowBundle:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal16, {})
		registerVal17:completeAnimation()
		registerVal2.BundleCount:setRGB(0.970000, 0.950000, 0.680000)
		registerVal2.BundleCount:setAlpha(1.000000)
		registerVal2.clipFinished(registerVal17, {})
		registerVal18:completeAnimation()
		registerVal2.BundleExperimentRareCount:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal18, {})
		registerVal19:completeAnimation()
		registerVal2.CodeBundleRareCount:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal19, {})
		registerVal20:completeAnimation()
		registerVal2.NoDupesRareCount:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal20, {})
		registerVal21:completeAnimation()
		registerVal2.HundredBundleCount:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal21, {})
		registerVal22:completeAnimation()
		registerVal2.DailyDoubleRareCount:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal22, {})
		registerVal23:completeAnimation()
		registerVal2.SixPackCommonCount:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal23, {})
		registerVal24:completeAnimation()
		registerVal2.glowBundleOutline:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal24, {})
		registerVal27:completeAnimation()
		registerVal2.GenericRewardImage:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal27, {})
		registerVal34:completeAnimation()
		registerVal2.GenericRewardCount0:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal34, {})
		registerVal35:completeAnimation()
		registerVal2.GenericRewardCount:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal35, {})
		registerVal36:completeAnimation()
		registerVal2.WeaponBribe3Count0:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal36, {})
		registerVal37:completeAnimation()
		registerVal2.WeaponBribe3Count:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal37, {})
		registerVal38:completeAnimation()
		registerVal2.LimitedEditionCamoCount0:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal38, {})
		registerVal39:completeAnimation()
		registerVal2.LimitedEditionCamoCount:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal39, {})
	end

	registerVal44.DefaultClip = __FUNC_1F6A9_
	local function __FUNC_202E9_()
		registerVal2:setupElementClipCounter(14.000000)
		registerVal3:completeAnimation()
		registerVal2.glow00:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal3, {})
		registerVal4:completeAnimation()
		registerVal2.BundleOnOpen:setAlpha(1.000000)
		registerVal2.clipFinished(registerVal4, {})
		registerVal6:completeAnimation()
		registerVal2.smokewidget:setLeftRight(true, false, -43.250000, 126.350000)
		registerVal2.smokewidget:setTopBottom(true, false, -69.960000, 108.540000)
		registerVal2.smokewidget:setRGB(0.220000, 0.930000, 0.930000)
		registerVal2.smokewidget:setAlpha(1.000000)
		registerVal2.clipFinished(registerVal6, {})
		registerVal7:completeAnimation()
		registerVal2.fxEmber2:setLeftRight(true, false, -30.450000, 113.550000)
		registerVal2.fxEmber2:setTopBottom(true, false, -54.960000, 125.040000)
		registerVal2.fxEmber2:setRGB(0.220000, 0.930000, 0.930000)
		registerVal2.fxEmber2:setAlpha(1.000000)
		registerVal2.clipFinished(registerVal7, {})
		registerVal8:completeAnimation()
		registerVal2.fxEmber:setLeftRight(true, false, -34.250000, 117.350000)
		registerVal2.fxEmber:setTopBottom(true, false, -42.460000, 147.040000)
		registerVal2.fxEmber:setRGB(0.220000, 0.930000, 0.930000)
		registerVal2.fxEmber:setAlpha(1.000000)
		registerVal2.clipFinished(registerVal8, {})
		registerVal9:completeAnimation()
		registerVal2.RareOn:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal9, {})
		registerVal10:completeAnimation()
		registerVal2.CommonOn:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal10, {})
		registerVal12:completeAnimation()
		registerVal2.glow0:setRGB(0.220000, 0.930000, 0.930000)
		registerVal2.glow0:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal12, {})
		registerVal13:completeAnimation()
		registerVal2.BribeOn:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal13, {})
		registerVal14:completeAnimation()
		registerVal2.glowBribe:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal14, {})
		registerVal15:completeAnimation()
		registerVal2.BundleOn:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal15, {})
		registerVal16:completeAnimation()
		registerVal2.glowBundle:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal16, {})
		local function __FUNC_20AA4_(arg0, arg1)
			local function __FUNC_20C1F_(arg0, arg1)
				if not arg1.interrupted then
					arg0:beginAnimation("keyframe", 809.000000, false, false, CoD.TweenType.Linear)
				end
				arg0:setAlpha(0.800000)
				if arg1.interrupted then
					registerVal2.clipFinished(arg0, arg1)
				else
					arg0:registerEventHandler("transition_complete_keyframe", registerVal2.clipFinished)
				end
			end

			if arg1.interrupted then
				__FUNC_20C1F_(arg0, arg1)
				return 
			end
			arg0:beginAnimation("keyframe", 740.000000, false, false, CoD.TweenType.Linear)
			arg0:setAlpha(1.000000)
			arg0:registerEventHandler("transition_complete_keyframe", __FUNC_20C1F_)
		end

		registerVal17:completeAnimation()
		registerVal2.BundleCount:setAlpha(0.800000)
		__FUNC_20AA4_(registerVal17, {})
		local function __FUNC_20DD1_(arg0, arg1)
			local function __FUNC_20F4B_(arg0, arg1)
				if not arg1.interrupted then
					arg0:beginAnimation("keyframe", 809.000000, false, false, CoD.TweenType.Linear)
				end
				arg0:setRGB(0.220000, 0.930000, 0.930000)
				arg0:setAlpha(0.000000)
				if arg1.interrupted then
					registerVal2.clipFinished(arg0, arg1)
				else
					arg0:registerEventHandler("transition_complete_keyframe", registerVal2.clipFinished)
				end
			end

			if arg1.interrupted then
				__FUNC_20F4B_(arg0, arg1)
				return 
			end
			arg0:beginAnimation("keyframe", 740.000000, false, false, CoD.TweenType.Linear)
			arg0:setAlpha(1.000000)
			arg0:registerEventHandler("transition_complete_keyframe", __FUNC_20F4B_)
		end

		registerVal24:completeAnimation()
		registerVal2.glowBundleOutline:setRGB(0.220000, 0.930000, 0.930000)
		registerVal2.glowBundleOutline:setAlpha(0.000000)
		__FUNC_20DD1_(registerVal24, {})
		registerVal2.nextClip = "Focus"
	end

	registerVal44.Focus = __FUNC_202E9_
	registerVal43.Bundle = registerVal44
	registerVal44 = {}
	local function __FUNC_2112B_()
		registerVal2:setupElementClipCounter(29.000000)
		registerVal3:completeAnimation()
		registerVal2.glow00:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal3, {})
		registerVal4:completeAnimation()
		registerVal2.BundleOnOpen:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal4, {})
		registerVal5:completeAnimation()
		registerVal2.SixPackCommonBundleOnOpen:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal5, {})
		registerVal6:completeAnimation()
		registerVal2.smokewidget:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal6, {})
		registerVal7:completeAnimation()
		registerVal2.fxEmber2:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal7, {})
		registerVal8:completeAnimation()
		registerVal2.fxEmber:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal8, {})
		registerVal9:completeAnimation()
		registerVal2.RareOn:setAlpha(1.000000)
		registerVal2.clipFinished(registerVal9, {})
		registerVal10:completeAnimation()
		registerVal2.CommonOn:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal10, {})
		registerVal11:completeAnimation()
		registerVal2.fxglow:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal11, {})
		registerVal12:completeAnimation()
		registerVal2.glow0:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal12, {})
		registerVal13:completeAnimation()
		registerVal2.BribeOn:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal13, {})
		registerVal14:completeAnimation()
		registerVal2.glowBribe:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal14, {})
		registerVal15:completeAnimation()
		registerVal2.BundleOn:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal15, {})
		registerVal16:completeAnimation()
		registerVal2.glowBundle:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal16, {})
		registerVal17:completeAnimation()
		registerVal2.BundleCount:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal17, {})
		registerVal18:completeAnimation()
		registerVal2.BundleExperimentRareCount:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal18, {})
		registerVal19:completeAnimation()
		registerVal2.CodeBundleRareCount:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal19, {})
		registerVal20:completeAnimation()
		registerVal2.NoDupesRareCount:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal20, {})
		registerVal21:completeAnimation()
		registerVal2.HundredBundleCount:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal21, {})
		registerVal22:completeAnimation()
		registerVal2.DailyDoubleRareCount:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal22, {})
		registerVal23:completeAnimation()
		registerVal2.SixPackCommonCount:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal23, {})
		registerVal24:completeAnimation()
		registerVal2.glowBundleOutline:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal24, {})
		registerVal27:completeAnimation()
		registerVal2.GenericRewardImage:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal27, {})
		registerVal34:completeAnimation()
		registerVal2.GenericRewardCount0:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal34, {})
		registerVal35:completeAnimation()
		registerVal2.GenericRewardCount:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal35, {})
		registerVal36:completeAnimation()
		registerVal2.WeaponBribe3Count0:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal36, {})
		registerVal37:completeAnimation()
		registerVal2.WeaponBribe3Count:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal37, {})
		registerVal38:completeAnimation()
		registerVal2.LimitedEditionCamoCount0:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal38, {})
		registerVal39:completeAnimation()
		registerVal2.LimitedEditionCamoCount:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal39, {})
	end

	registerVal44.DefaultClip = __FUNC_2112B_
	local function __FUNC_21C46_()
		registerVal2:setupElementClipCounter(14.000000)
		local function __FUNC_22263_(arg0, arg1)
			local function __FUNC_223DB_(arg0, arg1)
				if not arg1.interrupted then
					arg0:beginAnimation("keyframe", 809.000000, false, false, CoD.TweenType.Linear)
				end
				arg0:setAlpha(0.000000)
				if arg1.interrupted then
					registerVal2.clipFinished(arg0, arg1)
				else
					arg0:registerEventHandler("transition_complete_keyframe", registerVal2.clipFinished)
				end
			end

			if arg1.interrupted then
				__FUNC_223DB_(arg0, arg1)
				return 
			end
			arg0:beginAnimation("keyframe", 740.000000, false, false, CoD.TweenType.Linear)
			arg0:setAlpha(1.000000)
			arg0:registerEventHandler("transition_complete_keyframe", __FUNC_223DB_)
		end

		registerVal3:completeAnimation()
		registerVal2.glow00:setAlpha(0.000000)
		__FUNC_22263_(registerVal3, {})
		registerVal4:completeAnimation()
		registerVal2.BundleOnOpen:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal4, {})
		registerVal6:completeAnimation()
		registerVal2.smokewidget:setRGB(0.220000, 0.930000, 0.930000)
		registerVal2.smokewidget:setAlpha(1.000000)
		registerVal2.clipFinished(registerVal6, {})
		registerVal7:completeAnimation()
		registerVal2.fxEmber2:setRGB(0.220000, 0.930000, 0.930000)
		registerVal2.clipFinished(registerVal7, {})
		registerVal8:completeAnimation()
		registerVal2.fxEmber:setRGB(0.220000, 0.930000, 0.930000)
		registerVal2.fxEmber:setAlpha(1.000000)
		registerVal2.clipFinished(registerVal8, {})
		registerVal9:completeAnimation()
		registerVal2.RareOn:setAlpha(1.000000)
		registerVal2.clipFinished(registerVal9, {})
		registerVal10:completeAnimation()
		registerVal2.CommonOn:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal10, {})
		local function __FUNC_2258D_(arg0, arg1)
			local function __FUNC_22707_(arg0, arg1)
				if not arg1.interrupted then
					arg0:beginAnimation("keyframe", 809.000000, true, true, CoD.TweenType.Linear)
				end
				arg0:setRGB(0.220000, 0.930000, 0.930000)
				arg0:setAlpha(0.000000)
				if arg1.interrupted then
					registerVal2.clipFinished(arg0, arg1)
				else
					arg0:registerEventHandler("transition_complete_keyframe", registerVal2.clipFinished)
				end
			end

			if arg1.interrupted then
				__FUNC_22707_(arg0, arg1)
				return 
			end
			arg0:beginAnimation("keyframe", 740.000000, true, true, CoD.TweenType.Linear)
			arg0:setAlpha(1.000000)
			arg0:registerEventHandler("transition_complete_keyframe", __FUNC_22707_)
		end

		registerVal12:completeAnimation()
		registerVal2.glow0:setRGB(0.220000, 0.930000, 0.930000)
		registerVal2.glow0:setAlpha(0.000000)
		__FUNC_2258D_(registerVal12, {})
		registerVal13:completeAnimation()
		registerVal2.BribeOn:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal13, {})
		registerVal14:completeAnimation()
		registerVal2.glowBribe:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal14, {})
		registerVal15:completeAnimation()
		registerVal2.BundleOn:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal15, {})
		registerVal16:completeAnimation()
		registerVal2.glowBundle:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal16, {})
		registerVal17:completeAnimation()
		registerVal2.BundleCount:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal17, {})
		registerVal24:completeAnimation()
		registerVal2.glowBundleOutline:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal24, {})
		registerVal2.nextClip = "Focus"
	end

	registerVal44.Focus = __FUNC_21C46_
	registerVal43.Rare = registerVal44
	registerVal44 = {}
	local function __FUNC_228E7_()
		registerVal2:setupElementClipCounter(29.000000)
		registerVal3:completeAnimation()
		registerVal2.glow00:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal3, {})
		registerVal4:completeAnimation()
		registerVal2.BundleOnOpen:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal4, {})
		registerVal5:completeAnimation()
		registerVal2.SixPackCommonBundleOnOpen:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal5, {})
		registerVal6:completeAnimation()
		registerVal2.smokewidget:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal6, {})
		registerVal7:completeAnimation()
		registerVal2.fxEmber2:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal7, {})
		registerVal8:completeAnimation()
		registerVal2.fxEmber:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal8, {})
		registerVal9:completeAnimation()
		registerVal2.RareOn:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal9, {})
		registerVal10:completeAnimation()
		registerVal2.CommonOn:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal10, {})
		registerVal11:completeAnimation()
		registerVal2.fxglow:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal11, {})
		registerVal12:completeAnimation()
		registerVal2.glow0:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal12, {})
		registerVal13:completeAnimation()
		registerVal2.BribeOn:setLeftRight(false, false, -80.500000, 80.500000)
		registerVal2.BribeOn:setTopBottom(true, false, -40.460000, 120.540000)
		registerVal2.BribeOn:setAlpha(1.000000)
		registerVal2.BribeOn:setImage(RegisterImage(GetImageForCurrentBribe(arg1, "uie_t7_blackmarket_crate_bribe_chip_taunt")))
		registerVal2.clipFinished(registerVal13, {})
		registerVal14:completeAnimation()
		registerVal2.glowBribe:setLeftRight(false, false, -80.500000, 80.500000)
		registerVal2.glowBribe:setTopBottom(true, false, -40.460000, 120.540000)
		registerVal2.glowBribe:setAlpha(0.000000)
		registerVal2.glowBribe:setImage(RegisterImage(AppendString("_hover", GetImageForCurrentBribe(arg1, "uie_t7_blackmarket_crate_bribe_chip_taunt"))))
		registerVal2.clipFinished(registerVal14, {})
		registerVal15:completeAnimation()
		registerVal2.BundleOn:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal15, {})
		registerVal16:completeAnimation()
		registerVal2.glowBundle:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal16, {})
		registerVal17:completeAnimation()
		registerVal2.BundleCount:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal17, {})
		registerVal18:completeAnimation()
		registerVal2.BundleExperimentRareCount:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal18, {})
		registerVal19:completeAnimation()
		registerVal2.CodeBundleRareCount:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal19, {})
		registerVal20:completeAnimation()
		registerVal2.NoDupesRareCount:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal20, {})
		registerVal21:completeAnimation()
		registerVal2.HundredBundleCount:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal21, {})
		registerVal22:completeAnimation()
		registerVal2.DailyDoubleRareCount:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal22, {})
		registerVal23:completeAnimation()
		registerVal2.SixPackCommonCount:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal23, {})
		registerVal24:completeAnimation()
		registerVal2.glowBundleOutline:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal24, {})
		registerVal27:completeAnimation()
		registerVal2.GenericRewardImage:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal27, {})
		registerVal34:completeAnimation()
		registerVal2.GenericRewardCount0:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal34, {})
		registerVal35:completeAnimation()
		registerVal2.GenericRewardCount:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal35, {})
		registerVal36:completeAnimation()
		registerVal2.WeaponBribe3Count0:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal36, {})
		registerVal37:completeAnimation()
		registerVal2.WeaponBribe3Count:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal37, {})
		registerVal38:completeAnimation()
		registerVal2.LimitedEditionCamoCount0:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal38, {})
		registerVal39:completeAnimation()
		registerVal2.LimitedEditionCamoCount:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal39, {})
	end

	registerVal44.DefaultClip = __FUNC_228E7_
	local function __FUNC_235F1_()
		registerVal2:setupElementClipCounter(14.000000)
		registerVal3:completeAnimation()
		registerVal2.glow00:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal3, {})
		registerVal4:completeAnimation()
		registerVal2.BundleOnOpen:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal4, {})
		registerVal6:completeAnimation()
		registerVal2.smokewidget:setRGB(0.220000, 0.930000, 0.930000)
		registerVal2.smokewidget:setAlpha(1.000000)
		registerVal2.clipFinished(registerVal6, {})
		registerVal7:completeAnimation()
		registerVal2.fxEmber2:setRGB(0.220000, 0.930000, 0.930000)
		registerVal2.fxEmber2:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal7, {})
		registerVal8:completeAnimation()
		registerVal2.fxEmber:setRGB(0.220000, 0.930000, 0.930000)
		registerVal2.fxEmber:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal8, {})
		registerVal9:completeAnimation()
		registerVal2.RareOn:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal9, {})
		registerVal10:completeAnimation()
		registerVal2.CommonOn:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal10, {})
		registerVal12:completeAnimation()
		registerVal2.glow0:setRGB(0.220000, 0.930000, 0.930000)
		registerVal2.glow0:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal12, {})
		registerVal13:completeAnimation()
		registerVal2.BribeOn:setAlpha(1.000000)
		registerVal2.clipFinished(registerVal13, {})
		local function __FUNC_23C2F_(arg0, arg1)
			local function __FUNC_23DA7_(arg0, arg1)
				if not arg1.interrupted then
					arg0:beginAnimation("keyframe", 809.000000, false, false, CoD.TweenType.Linear)
				end
				arg0:setAlpha(0.000000)
				if arg1.interrupted then
					registerVal2.clipFinished(arg0, arg1)
				else
					arg0:registerEventHandler("transition_complete_keyframe", registerVal2.clipFinished)
				end
			end

			if arg1.interrupted then
				__FUNC_23DA7_(arg0, arg1)
				return 
			end
			arg0:beginAnimation("keyframe", 740.000000, false, false, CoD.TweenType.Linear)
			arg0:setAlpha(1.000000)
			arg0:registerEventHandler("transition_complete_keyframe", __FUNC_23DA7_)
		end

		registerVal14:completeAnimation()
		registerVal2.glowBribe:setAlpha(0.000000)
		__FUNC_23C2F_(registerVal14, {})
		registerVal15:completeAnimation()
		registerVal2.BundleOn:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal15, {})
		registerVal16:completeAnimation()
		registerVal2.glowBundle:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal16, {})
		registerVal17:completeAnimation()
		registerVal2.BundleCount:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal17, {})
		registerVal24:completeAnimation()
		registerVal2.glowBundleOutline:setAlpha(0.000000)
		registerVal2.clipFinished(registerVal24, {})
		registerVal2.nextClip = "Focus"
	end

	registerVal44.Focus = __FUNC_235F1_
	registerVal43.Bribe = registerVal44
	registerVal2.clipsPerState = registerVal43
	local registerVal45 = {}
	local registerVal46 = {}
	registerVal46.stateName = "Common"
	local function __FUNC_23F59_(arg0, arg2, arg3)
		local registerVal3 = IsPerControllerTablePropertyEnumValue(arg1, "supplyDropType", Enum.LootCrateType.LOOT_CRATE_TYPE_COMMON)
		if registerVal3 then
			registerVal3 = IsPerControllerTablePropertyEnumValue(arg1, "currencySpent", Enum.InventoryCurrency.INVENTORY_CURRENCY_MP_BUNDLE_ITEM)
		end
		return (not registerVal3)
	end

	registerVal46.condition = __FUNC_23F59_
	local registerVal47 = {}
	registerVal47.stateName = "IncentiveRare"
	local function __FUNC_240D5_(arg0, arg2, arg3)
		return IsPerControllerTablePropertyValue(arg1, "supplyDropType", CoD.BlackMarketUtility.DropTypes.INCENTIVE_RARE_BUNDLE)
	end

	registerVal47.condition = __FUNC_240D5_
	local registerVal48 = {}
	registerVal48.stateName = "IncentiveWeapon"
	local function __FUNC_241DA_(arg0, arg2, arg3)
		return IsPerControllerTablePropertyValue(arg1, "supplyDropType", CoD.BlackMarketUtility.DropTypes.INCENTIVE_WEAPON_BUNDLE)
	end

	registerVal48.condition = __FUNC_241DA_
	local registerVal49 = {}
	registerVal49.stateName = "GenericReward"
	local function __FUNC_242E0_(arg0, arg2, arg3)
		return IsDecryptionCrateGenericReward(registerVal2, arg2, arg1)
	end

	registerVal49.condition = __FUNC_242E0_
	local registerVal50 = {}
	registerVal50.stateName = "SixPackCommonBundle"
	local function __FUNC_2434C_(arg0, arg2, arg3)
		local registerVal3 = IsPerControllerTablePropertyEnumValue(arg1, "currencySpent", Enum.InventoryCurrency.INVENTORY_CURRENCY_MP_BUNDLE_ITEM)
		if registerVal3 then
			registerVal3 = IsPerControllerTablePropertyValue(arg1, "supplyDropType", CoD.BlackMarketUtility.DropTypes.COMMON)
		end
		return registerVal3
	end

	registerVal50.condition = __FUNC_2434C_
	local registerVal51 = {}
	registerVal51.stateName = "DailyDoubleRareBundle"
	local function __FUNC_24511_(arg0, arg2, arg3)
		local registerVal3 = IsPerControllerTablePropertyEnumValue(arg1, "currencySpent", Enum.InventoryCurrency.INVENTORY_CURRENCY_MP_BUNDLE_ITEM)
		if registerVal3 then
			registerVal3 = IsPerControllerTablePropertyValue(arg1, "supplyDropType", CoD.BlackMarketUtility.DropTypes.DAILY_DOUBLE_RARE_BUNDLE)
		end
		return registerVal3
	end

	registerVal51.condition = __FUNC_24511_
	local registerVal52 = {}
	registerVal52.stateName = "HundredBundle"
	local function __FUNC_246E7_(arg0, arg2, arg3)
		local registerVal3 = IsPerControllerTablePropertyEnumValue(arg1, "currencySpent", Enum.InventoryCurrency.INVENTORY_CURRENCY_MP_BUNDLE_ITEM)
		if registerVal3 then
			registerVal3 = IsPerControllerTablePropertyValue(arg1, "supplyDropType", CoD.BlackMarketUtility.DropTypes.HUNDRED_BUNDLE)
		end
		return registerVal3
	end

	registerVal52.condition = __FUNC_246E7_
	local registerVal53 = {}
	registerVal53.stateName = "BundleExperimentRareBundle"
	local function __FUNC_248B1_(arg0, arg2, arg3)
		local registerVal3 = IsPerControllerTablePropertyEnumValue(arg1, "currencySpent", Enum.InventoryCurrency.INVENTORY_CURRENCY_MP_BUNDLE_ITEM)
		if registerVal3 then
			registerVal3 = IsPerControllerTablePropertyValue(arg1, "supplyDropType", CoD.BlackMarketUtility.DropTypes.BUNDLE_EXPERIMENT)
		end
		return registerVal3
	end

	registerVal53.condition = __FUNC_248B1_
	local registerVal54 = {}
	registerVal54.stateName = "NoDupesRareBundle"
	local function __FUNC_24A80_(arg0, arg2, arg3)
		local registerVal3 = IsPerControllerTablePropertyEnumValue(arg1, "currencySpent", Enum.InventoryCurrency.INVENTORY_CURRENCY_MP_BUNDLE_ITEM)
		if registerVal3 then
			registerVal3 = IsPerControllerTablePropertyValue(arg1, "supplyDropType", CoD.BlackMarketUtility.DropTypes.NO_DUPES_BUNDLE)
		end
		return registerVal3
	end

	registerVal54.condition = __FUNC_24A80_
	local registerVal55 = {}
	registerVal55.stateName = "CodeBundleRareBundle"
	local function __FUNC_24C4E_(arg0, arg2, arg3)
		local registerVal3 = IsPerControllerTablePropertyEnumValue(arg1, "currencySpent", Enum.InventoryCurrency.INVENTORY_CURRENCY_MP_BUNDLE_ITEM)
		if registerVal3 then
			registerVal3 = IsPerControllerTablePropertyValue(arg1, "supplyDropType", CoD.BlackMarketUtility.DropTypes.CODE_BUNDLE)
		end
		return registerVal3
	end

	registerVal55.condition = __FUNC_24C4E_
	local registerVal56 = {}
	registerVal56.stateName = "WeaponBribe3"
	local function __FUNC_24E16_(arg0, arg2, arg3)
		local registerVal3 = IsPerControllerTablePropertyEnumValue(arg1, "currencySpent", Enum.InventoryCurrency.INVENTORY_CURRENCY_MP_BUNDLE_ITEM)
		if registerVal3 then
			registerVal3 = IsPerControllerTablePropertyValue(arg1, "supplyDropType", CoD.BlackMarketUtility.DropTypes.WEAPON_3X)
		end
		return registerVal3
	end

	registerVal56.condition = __FUNC_24E16_
	local registerVal57 = {}
	registerVal57.stateName = "LimitedEditionCamo"
	local function __FUNC_24FDC_(arg0, arg2, arg3)
		local registerVal3 = IsPerControllerTablePropertyEnumValue(arg1, "currencySpent", Enum.InventoryCurrency.INVENTORY_CURRENCY_MP_BUNDLE_ITEM)
		if registerVal3 then
			registerVal3 = IsPerControllerTablePropertyValue(arg1, "supplyDropType", CoD.BlackMarketUtility.DropTypes.LIMITED_EDITION_CAMO)
		end
		return registerVal3
	end

	registerVal57.condition = __FUNC_24FDC_
	local registerVal58 = {}
	registerVal58.stateName = "RareBundle10for5"
	local function __FUNC_251AF_(arg0, arg2, arg3)
		local registerVal3 = IsPerControllerTablePropertyEnumValue(arg1, "currencySpent", Enum.InventoryCurrency.INVENTORY_CURRENCY_MP_BUNDLE_ITEM)
		if registerVal3 then
			registerVal3 = IsPerControllerTablePropertyValue(arg1, "supplyDropType", CoD.BlackMarketUtility.DropTypes.RARE_BUNDLE_10FOR5)
		end
		return registerVal3
	end

	registerVal58.condition = __FUNC_251AF_
	local registerVal59 = {}
	registerVal59.stateName = "Rare15Bundle"
	local function __FUNC_2537D_(arg0, arg2, arg3)
		local registerVal3 = IsPerControllerTablePropertyEnumValue(arg1, "currencySpent", Enum.InventoryCurrency.INVENTORY_CURRENCY_MP_BUNDLE_ITEM)
		if registerVal3 then
			registerVal3 = IsPerControllerTablePropertyValue(arg1, "supplyDropType", CoD.BlackMarketUtility.DropTypes.RARE_15BUNDLE)
		end
		return registerVal3
	end

	registerVal59.condition = __FUNC_2537D_
	local registerVal60 = {}
	registerVal60.stateName = "OutfitBribe"
	local function __FUNC_25548_(arg0, arg2, arg3)
		local registerVal3 = IsPerControllerTablePropertyEnumValue(arg1, "currencySpent", Enum.InventoryCurrency.INVENTORY_CURRENCY_MP_BUNDLE_ITEM)
		if registerVal3 then
			registerVal3 = IsPerControllerTablePropertyValue(arg1, "supplyDropType", CoD.BlackMarketUtility.DropTypes.OUTFIT_3BUNDLE)
		end
		return registerVal3
	end

	registerVal60.condition = __FUNC_25548_
	local registerVal61 = {}
	registerVal61.stateName = "Bundle"
	local function __FUNC_25715_(arg0, arg2, arg3)
		return IsPerControllerTablePropertyEnumValue(arg1, "currencySpent", Enum.InventoryCurrency.INVENTORY_CURRENCY_MP_BUNDLE_ITEM)
	end

	registerVal61.condition = __FUNC_25715_
	local registerVal62 = {}
	registerVal62.stateName = "Rare"
	local function __FUNC_2580A_(arg0, arg2, arg3)
		return IsDecryptionCrateRare(registerVal2, arg2, arg1)
	end

	registerVal62.condition = __FUNC_2580A_
	local registerVal63 = {}
	registerVal63.stateName = "Bribe"
	local function __FUNC_2586B_(arg0, arg2, arg3)
		return IsPerControllerTablePropertyEnumValue(arg1, "supplyDropType", Enum.LootCrateType.LOOT_CRATE_TYPE_BRIBE)
	end

	registerVal63.condition = __FUNC_2586B_
	registerVal45 = {registerVal46, registerVal47, registerVal48, registerVal49, registerVal50, registerVal51, registerVal52, registerVal53, registerVal54, registerVal55, registerVal56, registerVal57, registerVal58, registerVal59, registerVal60, registerVal61, registerVal62, registerVal63}
	registerVal2:mergeStateConditions(registerVal45)
	local function __FUNC_2594F_(arg0)
		arg0.smokewidget:close()
		arg0.fxEmber2:close()
		arg0.fxEmber:close()
		arg0.fxglow:close()
		arg0.BundleCount:close()
		arg0.BundleExperimentRareCount:close()
		arg0.CodeBundleRareCount:close()
		arg0.NoDupesRareCount:close()
		arg0.HundredBundleCount:close()
		arg0.DailyDoubleRareCount:close()
		arg0.SixPackCommonCount:close()
		arg0.WeaponIncentiveCount:close()
		arg0.WeaponIncentiveCount0:close()
		arg0.RareIncentiveCount0:close()
		arg0.RareIncentiveCount:close()
		arg0.GenericRewardCount0:close()
		arg0.GenericRewardCount:close()
		arg0.WeaponBribe3Count0:close()
		arg0.WeaponBribe3Count:close()
		arg0.LimitedEditionCamoCount0:close()
		arg0.LimitedEditionCamoCount:close()
		arg0.RareBundle10for5Count:close()
		arg0.Rare15BundleCount:close()
		arg0.OutfitBribeCount:close()
	end

	LUI.OverrideFunction_CallOriginalSecond(registerVal2, "close", __FUNC_2594F_)
	if PostLoadFunc then
		PostLoadFunc(registerVal2, arg1, arg0)
	end
	return registerVal2
end

